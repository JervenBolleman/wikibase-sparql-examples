@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-e58884bc94ebaffc2076934ce8e88286> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User:MartinPoulter/queries/equity_research>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX mwapi: <http://wikiba.se/ontology#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX schema: <http://schema.org/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?item1 (SUM(?size) as ?total_bytes) (COUNT(?sitelink) AS ?sites)
WHERE {
VALUES ?item1 {wd:Q9438}
?sitelink schema:about ?item1  # get Wikimedia pages
FILTER(CONTAINS(str(?sitelink), \".wikipedia.org/\")) # only Wikipedia articles
?sitelink schema:name ?title ; schema:isPartOf ?site.
BIND(REPLACE(SUBSTR(STR(?site), 9), '/', '') AS ?endpoint)
OPTIONAL{
  SERVICE wikibase:mwapi {
    bd:serviceParam wikibase:api \"Generator\" ; 
    wikibase:endpoint ?endpoint ;
    mwapi:generator \"allpages\" ;
    mwapi:gapfrom ?title ;
    mwapi:gapto ?title ;
    mwapi:prop \"revisions\" ;
    mwapi:rvprop \"size\" .
    ?bytes wikibase:apiOutput \"revisions/rev/@size\" .
  }
  BIND (xsd:integer(?bytes) AS ?size)
   } 
} GROUP BY ?item1""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?item1 (SUM(?size) as ?total_bytes) (COUNT(?sitelink) AS ?sites)
WHERE {
VALUES ?item1 {wd:Q9438}
?sitelink schema:about ?item1  # get Wikimedia pages
FILTER(CONTAINS(str(?sitelink), \".wikipedia.org/\")) # only Wikipedia articles
?sitelink schema:name ?title ; schema:isPartOf ?site.
BIND(REPLACE(SUBSTR(STR(?site), 9), '/', '') AS ?endpoint)
OPTIONAL{
  SERVICE wikibase:mwapi {
    bd:serviceParam wikibase:api \"Generator\" ; 
    wikibase:endpoint ?endpoint ;
    mwapi:generator \"allpages\" ;
    mwapi:gapfrom ?title ;
    mwapi:gapto ?title ;
    mwapi:prop \"revisions\" ;
    mwapi:rvprop \"size\" .
    ?bytes wikibase:apiOutput \"revisions/rev/@size\" .
  }
  BIND (xsd:integer(?bytes) AS ?size)
   } 
} GROUP BY ?item1""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#mwapi>;
  schema:target <https://query.wikidata.org/sparql> .
