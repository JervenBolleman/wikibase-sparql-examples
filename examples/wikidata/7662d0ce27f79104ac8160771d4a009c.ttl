@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-7662d0ce27f79104ac8160771d4a009c> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User:Amitie_10g/Sandbox/Wikidata:SPARQL_query_service/queries/examples/maintenance>,
    <https://www.wikidata.org/wiki/User:Amitie_10g/Sandbox/Wikidata:SPARQL_query_service/queries/examples/maintenance/en>,
    <https://www.wikidata.org/wiki/User:Amitie_10g/Sandbox/Wikidata:SPARQL_query_service/queries/examples/maintenance/es>,
    <https://www.wikidata.org/wiki/User:Amitie_10g/Sandbox/Wikidata:SPARQL_query_service/queries/examples/maintenance/zh>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/maintenance>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/maintenance/cs>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/maintenance/en>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/maintenance/es>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/maintenance/fr>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/maintenance/ja>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/maintenance/nl>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/maintenance/pl>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/maintenance/sv>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/maintenance/uk>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment """added before 2016-10

# Actors whose Spanish label ends with “ (actor)”.
# This is almost certainly imported from the Wikipedia label, which needs to be unique (distinguish between John Doe the actor, John Doe the author, etc.).
# Wikidata labels have no such restrictions, and therefore should contain no such disambiguatory additions.
# Most likely, all these “ (actor)” suffixes can be removed.
# (This concept obviously applies equally to other professions and languages.)
SELECT ?person ?label (LANG(?label) AS ?lang)
WHERE
{
  ?person wdt:P31 wd:Q5;
          wdt:P106 wd:Q33999;
          rdfs:label ?label.
  FILTER(LANG(?label) = \"es\").
  FILTER(STRENDS(?label, \" (actor)\")).
}"""@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
#added before 2016-10

# Actors whose Spanish label ends with “ (actor)”.
# This is almost certainly imported from the Wikipedia label, which needs to be unique (distinguish between John Doe the actor, John Doe the author, etc.).
# Wikidata labels have no such restrictions, and therefore should contain no such disambiguatory additions.
# Most likely, all these “ (actor)” suffixes can be removed.
# (This concept obviously applies equally to other professions and languages.)
SELECT ?person ?label (LANG(?label) AS ?lang)
WHERE
{
  ?person wdt:P31 wd:Q5;
          wdt:P106 wd:Q33999;
          rdfs:label ?label.
  FILTER(LANG(?label) = \"es\").
  FILTER(STRENDS(?label, \" (actor)\")).
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """#added before 2016-10

# Actors whose Spanish label ends with “ (actor)”.
# This is almost certainly imported from the Wikipedia label, which needs to be unique (distinguish between John Doe the actor, John Doe the author, etc.).
# Wikidata labels have no such restrictions, and therefore should contain no such disambiguatory additions.
# Most likely, all these “ (actor)” suffixes can be removed.
# (This concept obviously applies equally to other professions and languages.)
SELECT ?person ?label (LANG(?label) AS ?lang)
WHERE
{
  ?person wdt:P31 wd:Q5;
          wdt:P106 wd:Q33999;
          rdfs:label ?label.
  FILTER(LANG(?label) = \"es\").
  FILTER(STRENDS(?label, \" (actor)\")).
}""";
  schema:target <https://query.wikidata.org/sparql> .
