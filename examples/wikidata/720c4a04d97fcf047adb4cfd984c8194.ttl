@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-720c4a04d97fcf047adb4cfd984c8194> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2021/01>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "09:43, 21 January 2021 (UTC)) talk (AyackThanks. 11:48, 21 January 2021 (UTC)) talk (Jheald can no longer be used to distinguish false positives (it will no longer be possible to distinguish pairs that have been marked in that way). And it means far more statements have to be found and undone if there is an error. So please, unless for some reason you really need these statements, please think twice before mass-adding them. (P3373)sibling  statements means (P3373)sibling . Swamping everything with Property_talk:P4638#Some_queries of each other. There are still a lot of these to go through, see eg queries at (P3373)sibling There are also a large number of unmerged duplicates from the genealogical imports. One way to go looking for these is to find multiple children of the same father with e.g. the same first-name and same date of death, that haven't been marked as  .don't do it statements -- this can happen, eg after an incorrect merge has left someone with two different sets of parents. So at the very least please sanity-check any statements you are adding (eg are the parents known uniquely, are their dates compatible with the children, etc), or ideally (P25)mother  or (P22)father  statements. With some of the recent big genealogical imports there are a fair number of items that have bad (P3373)sibling But please please be very cautious before adding 'missing'   a block at a time.?child1. The query then times out for me, but you can probably get it to work by stepping though =! rather than !=: You probably want Ayack@"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
SELECT DISTINCT ?father ?mother ?child1 ?child1Label ?child2 ?child2Label 
WHERE
{
  
  ?child1 wdt:P22 ?father; wdt:P25 ?mother.
  ?child2  wdt:P22 ?father; wdt:P25 ?mother.
  FILTER (?child1 != ?child2)
  FILTER NOT EXISTS {?child1 wdt:P3373 ?child2}
  ?child1 wdt:P31 wd:Q5 . ?child2 wdt:P31 wd:Q5 . 
}
LIMIT 100000""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT DISTINCT ?father ?mother ?child1 ?child1Label ?child2 ?child2Label 
WHERE
{
  hint:Query hint:optimizer \"None\".
  ?child1 wdt:P22 ?father; wdt:P25 ?mother.
  ?child2  wdt:P22 ?father; wdt:P25 ?mother.
  FILTER (?child1 != ?child2)
  FILTER NOT EXISTS {?child1 wdt:P3373 ?child2}
  ?child1 wdt:P31 wd:Q5 . ?child2 wdt:P31 wd:Q5 . 
}
LIMIT 100000""";
  schema:target <https://query.wikidata.org/sparql> .
