@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-3a88a036aff1bff836c0684bc80244f0> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Project_chat/Archive/2018/01>,
    <https://www.wikidata.org/wiki/Wikidata:Property_proposal/fully_divised_into>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Instance completeness statement to find all the classes whom wikidata seem to know it knows all the instances. This is an interesting query so I put it here :  (P1114)quantity I did not realised it until know but its know possible with the query service and the"@en,
    " ⟩Canton de Nantes⟨  Search fully partioned by  ⟩Nantes⟨  ⟩7⟨   (P1114)quantity   ⟩Canton de Nantes⟨ "@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wdt: <http://www.wikidata.org/prop/direct/>
select (count(?instances) as ?count) ?class ?number_of_instances {
  # this query computes all the classes Wikidata seems to know all the instances 
  ?instances wdt:P31/wdt:P279* ?class .
  ?class wdt:P1114 ?number_of_instances .
} group by ?class ?number_of_instances having (?number_of_instances = ?count)""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """select (count(?instances) as ?count) ?class ?number_of_instances {
  # this query computes all the classes Wikidata seems to know all the instances 
  ?instances wdt:P31/wdt:P279* ?class .
  ?class wdt:P1114 ?number_of_instances .
} group by ?class ?number_of_instances having (?number_of_instances = ?count)""";
  schema:target <https://query.wikidata.org/sparql> .
