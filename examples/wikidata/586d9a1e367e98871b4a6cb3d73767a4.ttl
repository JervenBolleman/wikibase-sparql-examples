@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-586d9a1e367e98871b4a6cb3d73767a4> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User:Beat_Estermann/WD-Intro-2019-09-26>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/ar>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/en>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/en-gb>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/ja>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/nl>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment ". (P577)وpublication date  (P123)وpublisher  (P110)وillustrator  (P1476)title لكن هذا ممل بعض الشيء، هناك الكثير من البيانات المحتملة عن الكتب، ونعرض التسمية فقط؟ لنحاول صياغة استعلام يتضمن أيضا قد تبدو المحاولة الأولى كما يلي:"@ar,
    ". (P577)publication date  and (P123)publisher , (P110)illustrator , (P1476)title But that’s a bit boring. There’s so much potential data about books, and we only show the label? Let’s try to craft a query that also includes the A first attempt might look like this:"@en,
    "Query Arthur Conan Doyle books Hints:Write a query that returns all books by Sir Arthur Conan Doyle Include the title (P1476), illustrator (P110), publisher (P123) and publication date (P577)."@en,
    ". (P577)publication date  and (P123)publisher , (P110)illustrator , (P1476)title But that’s a bit boring. There’s so much potential data about books, and we only show the label? Let’s try to craft a query that also includes the A first attempt might look like this:"@en-GB,
    "も含むようにしてみましょう。 (P577)publication date 、および(P123)publisher 、(P110)illustrator 、(P1476)title しかしこれは少々退屈です。本に関するデータは他にもたくさんあるのに、タイトルだけを表示するなんて。そこでクエリを加工して、最初に書いてみたのはこんな感じになりました。"@ja,
    "bevat. (P577)publication date  en (P123)publisher , (P110)illustrator , (P1476)title Maar dat is een beetje saai. Er zijn zoveel potentiële gegevens over boeken, en we tonen alleen het label? Laten we proberen een query te maken die ook Een eerste poging zou er zo uit kunnen zien:"@nl;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?book ?title ?illustratorLabel ?publisherLabel ?published
WHERE
{
  ?book wdt:P50 wd:Q35610;
        wdt:P1476 ?title;
        wdt:P110 ?illustrator;
        wdt:P123 ?publisher;
        wdt:P577 ?published.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?book ?title ?illustratorLabel ?publisherLabel ?published
WHERE
{
  ?book wdt:P50 wd:Q35610;
        wdt:P1476 ?title;
        wdt:P110 ?illustrator;
        wdt:P123 ?publisher;
        wdt:P577 ?published.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
