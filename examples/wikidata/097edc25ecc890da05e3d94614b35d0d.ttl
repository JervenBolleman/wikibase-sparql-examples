@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-097edc25ecc890da05e3d94614b35d0d> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2022/03>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?prodco ?prodcoLabel (SUM(?boxOffice - ?cost) as ?totalNetProfit)
    WHERE
    {
    # Find all production companies who have not produced an films in USA
    { # Find all production compnaies
    SELECT ?prodco
    WHERE {
    ?art wdt:P272 ?prodco. # art produced by production companies
    ?art wdt:P31 wd:Q11424. # ensure that the art produced is an instance of film
    }
    }
    MINUS
    { # Find production companies that have produced at least 1 film with origin USA
    SELECT ?USAOriginprodco
    WHERE
    {
    ?art wdt:P272 ?USAOriginprodco. # get producers of the art
    ?art wdt:P31 wd:Q11424. # ensure that the art produced is an instance of film
    ?art wdt:P495 wd:Q30. # country of origin of the art is USA
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
    }
    }
    # Now caluclate the net profits of the production companies
    ?art wdt:P272 ?prodco. # art produced by production companies
    ?art wdt:P31 wd:Q11424. # ensure that the art produced is an instance of film
    ?art wdt:P2142 ?boxOffice. # get the box office earnings for the film
    ?art wdt:P2130 ?cost. # Find the cost of each art
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
    }
    GROUP BY ?prodco ?prodcoLabel
    ORDER BY desc(?totalNetProfit)
    LIMIT 20""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?prodco ?prodcoLabel (SUM(?boxOffice - ?cost) as ?totalNetProfit)
    WHERE
    {
    # Find all production companies who have not produced an films in USA
    { # Find all production compnaies
    SELECT ?prodco
    WHERE {
    ?art wdt:P272 ?prodco. # art produced by production companies
    ?art wdt:P31 wd:Q11424. # ensure that the art produced is an instance of film
    }
    }
    MINUS
    { # Find production companies that have produced at least 1 film with origin USA
    SELECT ?USAOriginprodco
    WHERE
    {
    ?art wdt:P272 ?USAOriginprodco. # get producers of the art
    ?art wdt:P31 wd:Q11424. # ensure that the art produced is an instance of film
    ?art wdt:P495 wd:Q30. # country of origin of the art is USA
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
    }
    }
    # Now caluclate the net profits of the production companies
    ?art wdt:P272 ?prodco. # art produced by production companies
    ?art wdt:P31 wd:Q11424. # ensure that the art produced is an instance of film
    ?art wdt:P2142 ?boxOffice. # get the box office earnings for the film
    ?art wdt:P2130 ?cost. # Find the cost of each art
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
    }
    GROUP BY ?prodco ?prodcoLabel
    ORDER BY desc(?totalNetProfit)
    LIMIT 20""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
