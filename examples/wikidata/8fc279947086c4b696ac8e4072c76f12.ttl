@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-8fc279947086c4b696ac8e4072c76f12> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Talk:Q63361170>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX prov: <http://www.w3.org/ns/prov#>
PREFIX pr: <http://www.wikidata.org/prop/reference/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?item ?itemLabel ?value ?result (STRLEN(STR(?value)) AS ?stringlength)  ?snak ?rank
WHERE
{
	{
		SELECT ?item ?value ?result ?snak ?rank
		WHERE
		{
			{
				?item p:P5696 [ ps:P5696 ?value; wikibase:rank ?rank ] .
				BIND(\"mainsnak\" AS ?snak) .
			} UNION {
				?statement1 pq:P5696 ?value;
					wikibase:rank ?rank .
				?item ?p1 ?statement1 .
				BIND(\"qualifier\" AS ?snak) .
			} UNION {
				?ref pr:P5696 ?value .
				?statement2 prov:wasDerivedFrom ?ref;
					wikibase:rank ?rank .
				?item ?p2 ?statement2 .
				BIND(\"reference\" AS ?snak) .
			} .
			BIND( REGEX( STR( ?value ), \"^([A-Z]{1,5})$\" ) AS ?regexresult ) .
			FILTER( ?regexresult = false ) .
			BIND( IF( ?regexresult = true, \"pass\", \"fail\" ) AS ?result ) .
			FILTER( ?item NOT IN ( wd:Q4115189, wd:Q13406268, wd:Q15397819 ) ) .
		} 
		LIMIT 100
	} .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"fr,en\" } .
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?item ?itemLabel ?value ?result (STRLEN(STR(?value)) AS ?stringlength)  ?snak ?rank
WHERE
{
	{
		SELECT ?item ?value ?result ?snak ?rank
		WHERE
		{
			{
				?item p:P5696 [ ps:P5696 ?value; wikibase:rank ?rank ] .
				BIND(\"mainsnak\" AS ?snak) .
			} UNION {
				?statement1 pq:P5696 ?value;
					wikibase:rank ?rank .
				?item ?p1 ?statement1 .
				BIND(\"qualifier\" AS ?snak) .
			} UNION {
				?ref pr:P5696 ?value .
				?statement2 prov:wasDerivedFrom ?ref;
					wikibase:rank ?rank .
				?item ?p2 ?statement2 .
				BIND(\"reference\" AS ?snak) .
			} .
			BIND( REGEX( STR( ?value ), \"^([A-Z]{1,5})$\" ) AS ?regexresult ) .
			FILTER( ?regexresult = false ) .
			BIND( IF( ?regexresult = true, \"pass\", \"fail\" ) AS ?result ) .
			FILTER( ?item NOT IN ( wd:Q4115189, wd:Q13406268, wd:Q15397819 ) ) .
		} 
		LIMIT 100
	} .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"fr,en\" } .
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
