@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-e8e88f77fff78f43721c1bbab65f114c> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2018/12>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "List of all towns and cities in Germany 12:12, 8 December 2018 (UTC)) talk (Christoph Braun only appear once. Thanks in advance for any help or suggestions. Regards, (Q365)Cologne  does not return the result I'm looking for. Several cities are returned multiple times because multiple subclasses apply to them. I'm looking for a way to either truncate these additional, but unwanted results or limit the output to the deepest subclass, so that cities like (Q42744322)urban municipality in Germany  (P279)subclass of  and (P31)instance of Hi, I'm looking for a query that shows all towns and cities in Germany (similar to the Catalonia example above). Querying through"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?item ?itemLabel  WHERE {
  ?item wdt:P31/wdt:P279* wd:Q42744322;
        wdt:P625 ?geo .
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?item ?itemLabel  WHERE {
  ?item wdt:P31/wdt:P279* wd:Q42744322;
        wdt:P625 ?geo .
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
