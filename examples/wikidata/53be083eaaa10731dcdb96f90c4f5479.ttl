@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-53be083eaaa10731dcdb96f90c4f5479> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User_talk:Peter_F._Patel-Schneider>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "]reply[12:50, 21 September 2024 (UTC)) talk (Peter F. Patel-SchneiderIndeed there are many cases where design classes are subclasses of the design metaclasses. I noticed this with aircraft model (and it also appears that there are some model aircraft classes intruding).  ]reply[12:42, 21 September 2024 (UTC)) talk (Peter F. Patel-Schneider Yes, I noticed the problem with items that cannot be removed because they have Wikipedia entries. I have a potential solution for that that I'll put in a separate thread, as this one is getting too deep. Vicarage@ ]reply[07:52, 21 September 2024 (UTC)) talk (VicarageOnce we've fixed the designs, giving objects a P31 P289 pair should be straightforward. For the X_model/faimily entries, I'd flatten it out so they were all just P31 design_family/model, assuming people select on the P279 tree.  Here is another thing that the RfC should mention: No design class can be a subclass of the new classes. for examples of current similar problems.) (Q15056995)aircraft model  and several other subclasses of (Q790829)ATL-90 Accountant (Look at  does. (Q10929058)product model . Either it will be removed or it will be separated from items in Wikidata that are aircraft models, like the Spitfire models. There might be queries that have this item in them and such queries will likely produce little or none of the results that they currently return. It also might not be possible to remove some of these items because they have Wikipedia entries, as (Q15056995)aircraft model There is one serious problem with the approach as I see it - it will have the effect of removing information from existing classes in Wikidata or even eliminating some classes entirely. Consider  for an example of how this might work (although the query times out for me). (Q6274641)Category:1897 films . Could it be used here? See (P3921)Wikidata SPARQL query equivalent . Wikidata already has a property whose purpose appears to be close to this - (Q197)airplane  are defined as items that are both instances of Q\"model\" and subclasses of (Q15056995)aircraft model  because instances of (Q15056995)aircraft model The right solution to this problem is to have \"defined\" classes in Wikidata - classes whose instances are given by formulae. Then it is not necessary to state that some item is an instance of . They have some of the characteristics of design classes. (There are certainly lots of problems there, at the least.) But they also have some differences. I don't think that it is worthwhile to further broaden the RfC to include them but I might put something together as a separate notion. (Q4055832)aviation equipment  and (Q60673395)vehicle component I've been looking at classes like ]reply[21:07, 21 September 2024 (UTC)) talk (Vicarageone tidy we can do is to ensure that all P31 of X_model are P279 of X, (or a more specific subclass, as in aircraft_model and land_based_fighter_monoplane). More generally we should define what a X_model contains, currently every one seems to have a different combination of class, instance, metaclass and the like. . I really don't understand the defined classes idea, but formulae driven classes seems a step too far, especially if its slow.(Q124054999)combat aircraft model  will break queries, but a new query can be trivially written using P31 class P279* aircraft, and it was always arbitrary whether something was filed under it or (Q15056995)aircraft model  I saw those and skipped over fixing them. I think they should be renamed to make clear they are P31 of a model_class. A model class should only be for functional classes, not designs. Removing (Q15056995)aircraft model regarding ?item wdt:P279"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT DISTINCT ?item ?itemLabel WHERE {
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
  {
    SELECT DISTINCT ?item WHERE {
      ?item wdt:P31 wd:Q15142889
      MINUS {wd:Q728 ^wdt:P279* ?item}
      
    }
  }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT DISTINCT ?item ?itemLabel WHERE {
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
  {
    SELECT DISTINCT ?item WHERE {
      ?item wdt:P31 wd:Q15142889
      MINUS {wd:Q728 ^wdt:P279* ?item}
      
    }
  }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
