@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-262e1276d6d36b927af2464089508003> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2020/06>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Now I would need two further readapaptations: include not only people born in 1950, but all people born in years ending with 50 (e.g. 450 BCE, 50 BCE, 50 AD, 150 AD, 1450 AD ...) - I don't know how to do this, could you help me?  - I think it suffices removing the last FILTER(P854)reference URL include all the dates of birth having at least a reference containing  ]reply[08:43, 8 June 2020 (UTC) dosisEp√¨Thank you very much as always, --Here is a query for all years ending in 50. I also added the precision for the date (11=date, 10=month, 9=year, 8=decade, 7=century). The list still is a sample because of the limit of results for use of MWAPI."@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX mwapi: <http://wikiba.se/ontology#>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX psv: <http://www.wikidata.org/prop/statement/value/>
PREFIX prov: <http://www.w3.org/ns/prov#>
PREFIX pr: <http://www.wikidata.org/prop/reference/>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?p ?db ?precision
WHERE
{
  SERVICE wikibase:mwapi
  {
    bd:serviceParam wikibase:endpoint \"www.wikidata.org\" .
    bd:serviceParam wikibase:api \"Generator\" .
    bd:serviceParam mwapi:generator \"exturlusage\" .
    bd:serviceParam mwapi:geuprop \"title\" .
    bd:serviceParam mwapi:geunamespace \"0\" .
    bd:serviceParam mwapi:geuprotocol \"https\" .
    bd:serviceParam mwapi:geuquery \"viaf.org/viaf/\" .
    bd:serviceParam mwapi:geulimit \"max\" .
    ?p wikibase:apiOutputItem mwapi:title .
  }
  
  
  ?p p:P569 [psv:P569 ?dbv ; prov:wasDerivedFrom [pr:P854 ?site] ].
  FILTER CONTAINS(STR(?site),\"viaf.org/viaf/\")
  ?dbv wikibase:timeValue ?db; wikibase:timePrecision ?precision.
  BIND (YEAR(?db) AS ?year)
  FILTER IF(?year > 0,
            ?year - FLOOR(?year / 100) * 100 = 50, # year is AD
            ?year - FLOOR(?year / 100) * 100 = 51) # year is BC, 1 BC is encoded as \"0\", 2 BC as \"-1\" etc.
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?p ?db ?precision
WHERE
{
  SERVICE wikibase:mwapi
  {
    bd:serviceParam wikibase:endpoint \"www.wikidata.org\" .
    bd:serviceParam wikibase:api \"Generator\" .
    bd:serviceParam mwapi:generator \"exturlusage\" .
    bd:serviceParam mwapi:geuprop \"title\" .
    bd:serviceParam mwapi:geunamespace \"0\" .
    bd:serviceParam mwapi:geuprotocol \"https\" .
    bd:serviceParam mwapi:geuquery \"viaf.org/viaf/\" .
    bd:serviceParam mwapi:geulimit \"max\" .
    ?p wikibase:apiOutputItem mwapi:title .
  }
  hint:Prior hint:runFirst \"true\".
  
  ?p p:P569 [psv:P569 ?dbv ; prov:wasDerivedFrom [pr:P854 ?site] ].
  FILTER CONTAINS(STR(?site),\"viaf.org/viaf/\")
  ?dbv wikibase:timeValue ?db; wikibase:timePrecision ?precision.
  BIND (YEAR(?db) AS ?year)
  FILTER IF(?year > 0,
            ?year - FLOOR(?year / 100) * 100 = 50, # year is AD
            ?year - FLOOR(?year / 100) * 100 = 51) # year is BC, 1 BC is encoded as \"0\", 2 BC as \"-1\" etc.
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#mwapi>;
  schema:target <https://query.wikidata.org/sparql> .
