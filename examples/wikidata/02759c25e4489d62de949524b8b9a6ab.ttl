@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-02759c25e4489d62de949524b8b9a6ab> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2023/08>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX geof: <http://www.opengis.net/def/function/geosparql/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?fort ?fortLabel ?location1 ?location2 ?distance
WHERE 
{
  ?fort wdt:P31 wd:Q1785071.
  ?fort wdt:P625 ?location1.
  ?fort wdt:P625 ?location2.
  BIND(geof:distance(?location1, ?location2) as ?distance).
  
  # deduplicate (by picking location1 to be either east or exactly north of location2)
  FILTER (
    geof:longitude(?location1) < geof:longitude($location2)
    || (
      geof:longitude(?location1) = geof:longitude($location2)
      && geof:latitude(?location1) < geof:latitude($location2)
    )
  ).

  # locations must be different
  FILTER (?distance > 0).
  
  # maximum distance
  FILTER (?distance < 100).
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?fort ?fortLabel ?location1 ?location2 ?distance
WHERE 
{
  ?fort wdt:P31 wd:Q1785071.
  ?fort wdt:P625 ?location1.
  ?fort wdt:P625 ?location2.
  BIND(geof:distance(?location1, ?location2) as ?distance).
  
  # deduplicate (by picking location1 to be either east or exactly north of location2)
  FILTER (
    geof:longitude(?location1) < geof:longitude($location2)
    || (
      geof:longitude(?location1) = geof:longitude($location2)
      && geof:latitude(?location1) < geof:latitude($location2)
    )
  ).

  # locations must be different
  FILTER (?distance > 0).
  
  # maximum distance
  FILTER (?distance < 100).
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
