@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-d7f91718dd6a1dd2526a33aca3bf62e4> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Contact_the_development_team/Query_Service_and_search/Archive/2020/04>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "It would be nice having a simple way to get truthy statements in WDQS It is often the case that you need more information about a statement than a simple value. That can be e.g. qualifiers, references, value precision, value unit or others things. In these cases you have to use the p: prefix instead of wdt: but you often still want to access only truthy statements. It is possible to add a test for truthyness, like this:"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>
PREFIX p: <http://www.wikidata.org/prop/>
?item p:P1532 ?statement.
    ?statement ps:P1532 ?represents.
    ?statement pq:P582 ?end_time.

    # Select only truthy statements
    ?statement wikibase:rank ?rank.
    FILTER (?rank = wikibase:PreferredRank ||
            ?rank = wikibase:NormalRank && NOT EXISTS { ?item p:P1532/wikibase:rank wikibase:PreferredRank. })""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """?item p:P1532 ?statement.
    ?statement ps:P1532 ?represents.
    ?statement pq:P582 ?end_time.

    # Select only truthy statements
    ?statement wikibase:rank ?rank.
    FILTER (?rank = wikibase:PreferredRank ||
            ?rank = wikibase:NormalRank && NOT EXISTS { ?item p:P1532/wikibase:rank wikibase:PreferredRank. })""";
  schema:target <https://query.wikidata.org/sparql> .
