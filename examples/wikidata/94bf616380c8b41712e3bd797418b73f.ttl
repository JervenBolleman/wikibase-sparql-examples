@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-94bf616380c8b41712e3bd797418b73f> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Synia:scientificeventseries>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Related scientific event series based on people"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX bd: <http://www.bigdata.com/rdf#>
PREFIX target: <http://www.wikidata.org/entity/Q17012957>

SELECT
  ?score

  ?event_series ?event_seriesLabel
  (CONCAT(\"#scientificeventseries/\", SUBSTR(STR(?event_series), 32)) AS ?event_seriesUrl)
  ?event_seriesDescription
  
  ?example_person ?example_personLabel
  (CONCAT(\"#author/\", SUBSTR(STR(?example_person), 32)) AS ?example_personUrl)
WHERE {
  { 
    SELECT
      (COUNT(DISTINCT ?person) AS ?score) ?event_series
      (SAMPLE(?person) AS ?example_person)
    WHERE {
      ?person (^wdt:P823 | ^wdt:P664 | wdt:P1344 | ^wdt:P710 | (^wdt:P98 / wdt:P4745) | (^wdt:P50 / wdt:P1433 / wdt:P4745 ) | ^wdt:P5804 ) / wdt:P179 target: ;
              (^wdt:P823 | ^wdt:P664 | wdt:P1344 | ^wdt:P710 | (^wdt:P98 / wdt:P4745) | (^wdt:P50 / wdt:P1433 / wdt:P4745 ) | ^wdt:P5804 ) / wdt:P179 ?event_series .
      FILTER (?event_series != target:)
    }
    GROUP BY ?event_series
    ORDER BY DESC(?score)
    LIMIT 200
  } 
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?score)""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """PREFIX target: <http://www.wikidata.org/entity/Q17012957>

SELECT
  ?score

  ?event_series ?event_seriesLabel
  (CONCAT(\"#scientificeventseries/\", SUBSTR(STR(?event_series), 32)) AS ?event_seriesUrl)
  ?event_seriesDescription
  
  ?example_person ?example_personLabel
  (CONCAT(\"#author/\", SUBSTR(STR(?example_person), 32)) AS ?example_personUrl)
WHERE {
  { 
    SELECT
      (COUNT(DISTINCT ?person) AS ?score) ?event_series
      (SAMPLE(?person) AS ?example_person)
    WHERE {
      ?person (^wdt:P823 | ^wdt:P664 | wdt:P1344 | ^wdt:P710 | (^wdt:P98 / wdt:P4745) | (^wdt:P50 / wdt:P1433 / wdt:P4745 ) | ^wdt:P5804 ) / wdt:P179 target: ;
              (^wdt:P823 | ^wdt:P664 | wdt:P1344 | ^wdt:P710 | (^wdt:P98 / wdt:P4745) | (^wdt:P50 / wdt:P1433 / wdt:P4745 ) | ^wdt:P5804 ) / wdt:P179 ?event_series .
      FILTER (?event_series != target:)
    }
    GROUP BY ?event_series
    ORDER BY DESC(?score)
    LIMIT 200
  } 
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?score)""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
