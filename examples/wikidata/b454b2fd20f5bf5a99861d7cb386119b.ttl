@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-b454b2fd20f5bf5a99861d7cb386119b> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2021/07>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX mwapi: <http://wikiba.se/ontology#>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX schema: <http://schema.org/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT distinct ?file ?title ?depicts ?label ?wdpa WHERE { 
  
  SELECT * WHERE {
      {
     SELECT * WHERE {
      {
  
  SELECT ?file ?title WHERE      {
    SERVICE wikibase:mwapi {
      bd:serviceParam wikibase:api \"Generator\" .
      bd:serviceParam wikibase:endpoint \"commons.wikimedia.org\" .
      bd:serviceParam mwapi:gcmtitle \"Category:Images from Wiki Loves Earth 2021 in Australia\" .
      bd:serviceParam mwapi:generator \"categorymembers\" .
      bd:serviceParam mwapi:gcmtype \"file\" .
      bd:serviceParam mwapi:gcmlimit \"max\" .
      ?title wikibase:apiOutput mwapi:title .
      ?pageid wikibase:apiOutput \"@pageid\" . }
      BIND (URI(CONCAT('https://commons.wikimedia.org/entity/M', ?pageid)) AS ?file)    
                                    }
   
}     ?file wdt:P180 ?depicts . } }     SERVICE <https://query.wikidata.org/sparql>
             {
             ?depicts wdt:P809 ?wdpa .
             ?depicts wdt:P17 wd:Q408 .
             ?depicts rdfs:label ?label filter(lang(?label) = \"en\" ) .
             minus {?sitelink schema:about ?depicts . ?sitelink schema:isPartOf <https://en.wikipedia.org/> .}   
             }
            }                               
 }""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT distinct ?file ?title ?depicts ?label ?wdpa WITH {
  
  SELECT ?file ?title WHERE      {
    SERVICE wikibase:mwapi {
      bd:serviceParam wikibase:api \"Generator\" .
      bd:serviceParam wikibase:endpoint \"commons.wikimedia.org\" .
      bd:serviceParam mwapi:gcmtitle \"Category:Images from Wiki Loves Earth 2021 in Australia\" .
      bd:serviceParam mwapi:generator \"categorymembers\" .
      bd:serviceParam mwapi:gcmtype \"file\" .
      bd:serviceParam mwapi:gcmlimit \"max\" .
      ?title wikibase:apiOutput mwapi:title .
      ?pageid wikibase:apiOutput \"@pageid\" . }
      BIND (URI(CONCAT('https://commons.wikimedia.org/entity/M', ?pageid)) AS ?file)    
                                    }
   
} as %images WITH {
     SELECT * WHERE {
     include %images
     ?file wdt:P180 ?depicts . } } as %depicts WHERE { 
  
  SELECT * WHERE {
     include %depicts
     SERVICE <https://query.wikidata.org/sparql>
             {
             ?depicts wdt:P809 ?wdpa .
             ?depicts wdt:P17 wd:Q408 .
             ?depicts rdfs:label ?label filter(lang(?label) = \"en\" ) .
             minus {?sitelink schema:about ?depicts . ?sitelink schema:isPartOf <https://en.wikipedia.org/> .}   
             }
            }                               
 }""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#mwapi>,
    <https://query.wikidata.org/sparql>;
  schema:target <https://query.wikidata.org/sparql> .
