@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-43dd9ea9dbec4ba8f6b35a01115c60ce> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User:TweetsFactsAndQueries/Wikimedia_Hackathon_2021_Data_Challenge/04._Showcase_all_the_images_of_different_goat_species.>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX mwapi: <http://wikiba.se/ontology#>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
#defaultView:ImageGrid
SELECT DISTINCT ?image ?species ?speciesLabel
# find all the goat species
# get their labels separately, to avoid looking up labels many times when we have several images
# get images from Wikimedia Commons
# get images from Wikidata, just in case those aren’t annotated on Commons (though I did at least manually add P180 to the Q2934 (goat) P18s)
# combine the Commons and Wikidata images (note that we have SELECT DISTINCT at the top to remove duplicates again) and add labels
WHERE {
  {  {
  SELECT ?image ?species WHERE {
    
     {
  SELECT DISTINCT ?species WHERE {
    ?species (wdt:P171|wdt:P279)* wd:Q189804. # apparently (some?) goat species are subclasses of rather than subtaxons of goat?
  }
}
    BIND(STRAFTER(STR(?species), STR(wd:)) AS ?itemId)
    BIND(CONCAT(\"haswbstatement:P180=\", ?itemId) AS ?search)
    SERVICE wikibase:mwapi {
      bd:serviceParam wikibase:endpoint \"commons.wikimedia.org\";
                      wikibase:api \"Search\";
                      mwapi:srsearch ?search;
                      mwapi:srnamespace \"6\"; # NS_FILE
                      mwapi:srlimit \"max\".
      ?title wikibase:apiOutput mwapi:title.
    }
    BIND(URI(CONCAT(\"http://commons.wikimedia.org/wiki/Special:FilePath/\", ENCODE_FOR_URI(STRAFTER(?title, \"File:\")))) AS ?image)
  }
} } UNION
  {  {
  SELECT ?image ?species WHERE {
     {
  SELECT DISTINCT ?species WHERE {
    ?species (wdt:P171|wdt:P279)* wd:Q189804. # apparently (some?) goat species are subclasses of rather than subtaxons of goat?
  }
}
    ?species wdt:P18 ?image.
  }
} }
   {
  SELECT ?species ?speciesLabel WHERE {
     {
  SELECT DISTINCT ?species WHERE {
    ?species (wdt:P171|wdt:P279)* wd:Q189804. # apparently (some?) goat species are subclasses of rather than subtaxons of goat?
  }
}
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  }
}
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """#defaultView:ImageGrid
SELECT DISTINCT ?image ?species ?speciesLabel
# find all the goat species
WITH {
  SELECT DISTINCT ?species WHERE {
    ?species (wdt:P171|wdt:P279)* wd:Q189804. # apparently (some?) goat species are subclasses of rather than subtaxons of goat?
  }
} AS %species
# get their labels separately, to avoid looking up labels many times when we have several images
WITH {
  SELECT ?species ?speciesLabel WHERE {
    INCLUDE %species.
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  }
} AS %speciesLabel
# get images from Wikimedia Commons
WITH {
  SELECT ?image ?species WHERE {
    hint:SubQuery hint:optimizer \"None\".
    INCLUDE %species.
    BIND(STRAFTER(STR(?species), STR(wd:)) AS ?itemId)
    BIND(CONCAT(\"haswbstatement:P180=\", ?itemId) AS ?search)
    SERVICE wikibase:mwapi {
      bd:serviceParam wikibase:endpoint \"commons.wikimedia.org\";
                      wikibase:api \"Search\";
                      mwapi:srsearch ?search;
                      mwapi:srnamespace \"6\"; # NS_FILE
                      mwapi:srlimit \"max\".
      ?title wikibase:apiOutput mwapi:title.
    }
    BIND(URI(CONCAT(\"http://commons.wikimedia.org/wiki/Special:FilePath/\", ENCODE_FOR_URI(STRAFTER(?title, \"File:\")))) AS ?image)
  }
} AS %commons
# get images from Wikidata, just in case those aren’t annotated on Commons (though I did at least manually add P180 to the Q2934 (goat) P18s)
WITH {
  SELECT ?image ?species WHERE {
    INCLUDE %species.
    ?species wdt:P18 ?image.
  }
} AS %wikidata
# combine the Commons and Wikidata images (note that we have SELECT DISTINCT at the top to remove duplicates again) and add labels
WHERE {
  { INCLUDE %commons. } UNION
  { INCLUDE %wikidata. }
  INCLUDE %speciesLabel.
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>,
    <http://wikiba.se/ontology#mwapi>;
  schema:target <https://query.wikidata.org/sparql> .
