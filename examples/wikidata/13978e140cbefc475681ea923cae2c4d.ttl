@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-13978e140cbefc475681ea923cae2c4d> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Property_proposal/OpenAlex_ID>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Discussion]reply[15:25, 23 January 2022 (UTC)) talk (Egon WillighagenTo summarize about the comparing, you can only compare OpenAlex ID with Wikidata, because Microsoft Academic no longer exists. This identifiers does not replace, remove, or whatever the MA identifier. OpenAlex IDs will show differences, because of the curation work they did. Are you suggesting that Wikidata trumps an external database? Where you find changes, you will have to still manually discuss with the OpenAlex team what the ground truth is; passed MA identifier work cannot resolve that situation. Therefore, no Wikidata volunteer effort is wasted, as you instigate. -- ]reply[15:15, 23 January 2022 (UTC)) talk (Egon WillighagenThe use of this property is explained above: to link to OpenAlex. -- ]reply[08:41, 22 January 2022 (UTC) JuraStrange, above you wrote \"There is no reason to compare it with that\". Can you clarify your uses of this property. ---  ]reply[07:20, 20 January 2022 (UTC)) talk (Egon Willighagen, sorry, not sure how to get to that conclusion, but it's not true: this proposal does not overwrite past work at all, nor suggests deleting an old identifier. --Jura1@ ]reply[12:23, 18 January 2022 (UTC) JuraNot doing so would be waste of volunteer contributions to Wikidata. ---  We actually have plenty such statements and the data is still available. ]reply[15:00, 11 January 2022 (UTC)) talk (Egon Willighagen which actually points people to OpenAlex as solution to use instead). There is no reason to compare it with that. --https://www.microsoft.com/en-us/research/project/academic/articles/microsoft-academic-to-expand-horizons-with-community-driven-approach/Microsoft Academic is abandoned (see  ]reply[19:03, 10 January 2022 (UTC) Jura would be simple. --- (P6366)Microsoft Academic ID  in the proposed format: it might easier to create separate properties for each type. Also, if one drops the initial letter from the identifier, cross-checking with Oppose  ]reply[08:09, 7 January 2022 (UTC)) talk (Nikola Tulechki --(Q107507571)OpenAlex . This prop is indispensable! Let's wish a long and colorful future for Support  ]reply[17:08, 7 January 2022 (UTC)) talk (Egon WillighagenThat would be a Wikidata choice then. The identifier itself is not case sensitive, but I understood that it makes comparison in tools easier if they are always upper case, like with DOIs. -- ]reply[15:49, 7 January 2022 (UTC)) talk (Vladimir AlexievReplaced regex (was [WwAaVvIiCc]\\d+) -- ]reply[08:09, 7 January 2022 (UTC)) talk (Nikola Tulechki) --(Q21502410)distinct-values constraint Agree the case-sensitivity of the IDs. Wikidata is not case insensitive. It follows that if we allow that here it will generate problems (e.g : I think the prefix letter should be Uppercase. Just because OpenAlex allows either case, does not mean it's a good idea to allow it here. I propose regex [WAVIC][1-9]\\d{3,9} . Egon_WillighagenHowever @ OpenAlex includes some WD ids (at least for Concepts) so a useful crosscheck is possible. ]reply[08:09, 7 January 2022 (UTC)) talk (Nikola TulechkiI'll check it out. I think there will be duplication between C (concept) and the other identifiers. --Should be straightforward to populate from existing values by prepending a type letter: if Human then A, if Organization then I, etc. Any volunteers to check out this idea?  .(P6366)Microsoft Academic ID Replaces  ]reply[22:36, 6 January 2022 (UTC)) talk (Vladimir Alexiev. --Support  ]reply[08:41, 22 January 2022 (UTC) JuraNumber of uses at WD compared to total number of ids. ---  ]reply[15:55, 11 January 2022 (UTC)) talk (Egon WillighagenI do not know how you quantified the use of KEGG. Can you explain? -- ]reply[19:03, 10 January 2022 (UTC) JuraI see. Apparently KEGG isn't much used then despite being available for year. So it's not clear if the comparison really helps. ---  ]reply[07:35, 10 January 2022 (UTC)) talk (Egon Willighagen). So, higher, but not that much. --https://www.genome.jp/kegg/docs/statistics.htmlCurrently, the chemical dimension of KEGG is not huge: several tens of thousands of metabolites, drugs, and glycans but close to 39 million genes (see  ]reply[12:51, 8 January 2022 (UTC) JuraI don't recall the details of KEGG (despite being mentioned on its talk page), but currently it doesn't seem to have any complex constraints defined based on value ranges so it might not have been that important. Also, the numbers of entries are likely to be much higher. Do we have an estimate for this? ---  ]reply[17:11, 7 January 2022 (UTC)) talk (Egon WillighagenI intentionally did not do that. When I proposed exactly this with KEGG identifiers, it was deemed unwanted.  ]reply[10:52, 6 January 2022 (UTC) Jura if there are clearly separate ranges of values, I'd probably consider separate properties. --- Comment  ]reply[16:38, 5 January 2022 (UTC)) talk (Daniel Mietchen Clearly useful. --Support  ]reply[18:20, 4 January 2022 (UTC)) talk (ArthurPSmith cool! Support  ]reply[17:02, 4 January 2022 (UTC)) talk (DarTar no brainer. --Support  ]reply[17:00, 4 January 2022 (UTC)) talk (TiagoLubiana looks useful. Support ]reply[21:04, 10 January 2022 (UTC)) talk (Oa01 -- Support ]reply[19:59, 12 January 2022 (UTC)) talk (MasterRus21thCentury â€” Support  ]reply[16:08, 12 January 2022 (UTC)) talk (AdrianoRutz Will be very useful! Support Tried to count type combinations of things with MAG but got timeout. Need to run this on a local instance?"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
select ?A ?I ?V ?W (count(*) as ?c) {
  ?x wdt:P6366 ?mag
  bind(exists {?x wdt:P31/wdt:P279* wd:Q5} as ?A)
  bind(exists {?x wdt:P31/wdt:P279* wd:Q43229} as ?I)
  bind(exists {?x wdt:P31/wdt:P279* wd:Q5633421}|| exists {?x wdt:P31/wdt:P279* wd:Q625994} as ?V)
  bind(exists {?x wdt:P31/wdt:P279* wd:Q17537576} as ?W)
} group by ?A ?I ?V ?W""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """select ?A ?I ?V ?W (count(*) as ?c) {
  ?x wdt:P6366 ?mag
  bind(exists {?x wdt:P31/wdt:P279* wd:Q5} as ?A)
  bind(exists {?x wdt:P31/wdt:P279* wd:Q43229} as ?I)
  bind(exists {?x wdt:P31/wdt:P279* wd:Q5633421}|| exists {?x wdt:P31/wdt:P279* wd:Q625994} as ?V)
  bind(exists {?x wdt:P31/wdt:P279* wd:Q17537576} as ?W)
} group by ?A ?I ?V ?W""";
  schema:target <https://query.wikidata.org/sparql> .
