@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-fc76e5349d989b54e05584c992352eda> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2019/11>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Inverted DOB day and month 14:30, 18 November 2019 (UTC)) talk (Steak). In such cases, it is highly likely that one of the two dates was created by erroneously inverting day and month. (Q706518)B. J. Thomas I am wondering if it is possible to systematically query all cases where there are two DOBs, with one beeing \"X-Y-year\" and one \"Y-X-year\" (example:  Interesting idea. Here we go:"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
SELECT *
{
    # BIND(wd:Q706518 as ?item) 
    ?item wdt:P214 [] .
    ?item wdt:P569 ?d1 ; wdt:P569 ?d2 .
    FILTER( 
          ?d1 != ?d2 
           && MONTH(?d1) = DAY(?d2) 
           && DAY(?d1) = MONTH(?d2) 
           && YEAR(?d1) = YEAR(?d2) 
           && DAY(?d1) != DAY(?d2) 
          )
}
LIMIT 10""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT *
{
    # BIND(wd:Q706518 as ?item) 
    ?item wdt:P214 [] .
    ?item wdt:P569 ?d1 ; wdt:P569 ?d2 .
    FILTER( 
          ?d1 != ?d2 
           && MONTH(?d1) = DAY(?d2) 
           && DAY(?d1) = MONTH(?d2) 
           && YEAR(?d1) = YEAR(?d2) 
           && DAY(?d1) != DAY(?d2) 
          )
}
LIMIT 10""";
  schema:target <https://query.wikidata.org/sparql> .
