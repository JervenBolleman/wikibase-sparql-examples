@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-c4d47dd2516514628a4160e9e2616ef5> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User:Succu/SPARQL>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Urls"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX prov: <http://www.w3.org/ns/prov#>
PREFIX p: <http://www.wikidata.org/prop/>
SELECT ?item ?taxonName ?url ?urlBase ?urlId WHERE {
   ?item wdt:P225 ?taxonName .
   ?item wdt:P1421 ?url1 . # P1348=AlgaeBase, P1421=GRIN, P1991=LPSN
   #?item p:P1421 ?urlStatement .
   #FILTER NOT EXISTS {
   #  	?urlStatement prov:wasDerivedFrom ?ref . 
   #}
   BIND(str(?url1) as ?url)
   BIND(if(contains(?url,  \"?\"), strbefore(?url, \"?\"), ?url) as ?urlBase)
   BIND(if(contains(?url,  \"?\"), strafter(?url, \"?\"), ?url) as ?urlId)  
} 
#ORDER BY ASC(?taxonName)
LIMIT 1000""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?item ?taxonName ?url ?urlBase ?urlId WHERE {
   ?item wdt:P225 ?taxonName .
   ?item wdt:P1421 ?url1 . # P1348=AlgaeBase, P1421=GRIN, P1991=LPSN
   #?item p:P1421 ?urlStatement .
   #FILTER NOT EXISTS {
   #  	?urlStatement prov:wasDerivedFrom ?ref . 
   #}
   BIND(str(?url1) as ?url)
   BIND(if(contains(?url,  \"?\"), strbefore(?url, \"?\"), ?url) as ?urlBase)
   BIND(if(contains(?url,  \"?\"), strafter(?url, \"?\"), ?url) as ?urlId)  
} 
#ORDER BY ASC(?taxonName)
LIMIT 1000""";
  schema:target <https://query.wikidata.org/sparql> .
