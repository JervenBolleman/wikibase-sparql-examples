@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-b4da7a6c9bd907feec078a7b057589da> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User:Back_ache/ListenNotes>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Get the dataSo I have asked nicely and received an API key for Lisen Notes but before I dive in, I want to do as much as I can offline so downloaded a snapshot of their database from 2017 as a CSV and have loaded it into a SQLite database. Listennotes uniqueID is a UUID and so I want to find a simple way to link that with existing wikidata so will start with using any apple podcast ids in there as its a nice simple number. So first things thing first, some SPARQL to get all the records that have the type podcast, an apple id but not a lstennotes ID"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SSELECT DISTINCT ?item ?itemLabel ?Spotify_show_ID ?Apple_Podcasts_podcast_ID WHERE {
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
  {
    SELECT DISTINCT ?item WHERE {
      ?item p:P31 ?statement0.
      ?statement0 (ps:P31/(wdt:P279*)) wd:Q24634210.
      MINUS {
        ?item p:P10213 ?statement1.
        ?statement1 ps:P10213 _:anyValueP10213.
      }
    }
  }
  OPTIONAL { ?item wdt:P5916 ?Spotify_show_ID. }
  OPTIONAL { ?item wdt:P5842 ?Apple_Podcasts_podcast_ID. }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SSELECT DISTINCT ?item ?itemLabel ?Spotify_show_ID ?Apple_Podcasts_podcast_ID WHERE {
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
  {
    SELECT DISTINCT ?item WHERE {
      ?item p:P31 ?statement0.
      ?statement0 (ps:P31/(wdt:P279*)) wd:Q24634210.
      MINUS {
        ?item p:P10213 ?statement1.
        ?statement1 ps:P10213 _:anyValueP10213.
      }
    }
  }
  OPTIONAL { ?item wdt:P5916 ?Spotify_show_ID. }
  OPTIONAL { ?item wdt:P5842 ?Apple_Podcasts_podcast_ID. }
}""";
  schema:target <https://query.wikidata.org/sparql> .
