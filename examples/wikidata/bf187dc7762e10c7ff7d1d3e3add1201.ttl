@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-bf187dc7762e10c7ff7d1d3e3add1201> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User:MisterSynergy/sysop/items_for_deletion>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX mwapi: <http://wikiba.se/ontology#>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT DISTINCT ?item WHERE {
   {
  SELECT DISTINCT ?item WHERE {
    SERVICE wikibase:mwapi {
      bd:serviceParam wikibase:api 'Generator';
                      wikibase:endpoint 'www.wikidata.org';
                      mwapi:generator 'links';
                      mwapi:titles 'User:Pasleim/Items_for_deletion/Page_deleted/Archive/2019' .
      ?title wikibase:apiOutput mwapi:title  .
      ?ns wikibase:apiOutput '@ns' .
      ?pageId wikibase:apiOutput mwapi:pageid .
    }
    FILTER(BOUND(?pageId)) .
    FILTER(STR(?ns) = '0') .
    BIND(IRI(CONCAT(STR(wd:), ?title)) AS ?item) .
  }
}.
  # further filtering here
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT DISTINCT ?item WITH {
  SELECT DISTINCT ?item WHERE {
    SERVICE wikibase:mwapi {
      bd:serviceParam wikibase:api 'Generator';
                      wikibase:endpoint 'www.wikidata.org';
                      mwapi:generator 'links';
                      mwapi:titles 'User:Pasleim/Items_for_deletion/Page_deleted/Archive/2019' .
      ?title wikibase:apiOutput mwapi:title  .
      ?ns wikibase:apiOutput '@ns' .
      ?pageId wikibase:apiOutput mwapi:pageid .
    }
    FILTER(BOUND(?pageId)) .
    FILTER(STR(?ns) = '0') .
    BIND(IRI(CONCAT(STR(wd:), ?title)) AS ?item) .
  }
} AS %subquery WHERE {
  INCLUDE %subquery .
  # further filtering here
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#mwapi>;
  schema:target <https://query.wikidata.org/sparql> .
