@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-74e5d56610cd78fc1fe66a59797ba3dd> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2020/09>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX mwapi: <http://wikiba.se/ontology#>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT DISTINCT ?item ?title
WHERE
{
  SERVICE wikibase:mwapi
  {
    bd:serviceParam wikibase:endpoint \"www.wikidata.org\".
    bd:serviceParam wikibase:api \"Generator\".
    bd:serviceParam mwapi:generator \"search\".
    bd:serviceParam mwapi:gsrsearch \"haswbstatement:P31=Q13442814 -haswbstatement:P31=Q1348305 Erratum\".
    bd:serviceParam mwapi:gsrlimit \"max\".
    ?item wikibase:apiOutputItem mwapi:title.
  }
  ?item wdt:P1476 ?title.
  FILTER STRSTARTS(?title, \"Erratum\")
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT DISTINCT ?item ?title
WHERE
{
  SERVICE wikibase:mwapi
  {
    bd:serviceParam wikibase:endpoint \"www.wikidata.org\".
    bd:serviceParam wikibase:api \"Generator\".
    bd:serviceParam mwapi:generator \"search\".
    bd:serviceParam mwapi:gsrsearch \"haswbstatement:P31=Q13442814 -haswbstatement:P31=Q1348305 Erratum\".
    bd:serviceParam mwapi:gsrlimit \"max\".
    ?item wikibase:apiOutputItem mwapi:title.
  }
  ?item wdt:P1476 ?title.
  FILTER STRSTARTS(?title, \"Erratum\")
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#mwapi>;
  schema:target <https://query.wikidata.org/sparql> .
