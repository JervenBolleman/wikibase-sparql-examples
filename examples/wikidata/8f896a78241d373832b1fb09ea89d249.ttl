@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-8f896a78241d373832b1fb09ea89d249> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User:Rdrg109/3/9>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Query no. 2). I need to learn how to wisely analyze the information presented in that page, since I've never done it before. query 2 and query 1). I then realized that this query runs slower than the one shown above. I don't understand why. A reason could be that there's an optimizationn that Blazegraph executes in the first query which makes it run faster. I think the specific reason could be obtained by analyzing the \"Query Plan\" shown in EXPLAIN mode (here are the links for de, when we already obtained it in en and de-de for rdfs:label statement (e.g. Why would we search for the OPTIONALI wrote the following query because I felt that by narrowing down the items in each run, we could avoid having to obtain the value when it is known that a value was obtained in a previous"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT *
{
   {
  SELECT ?e ?label {
     {
  SELECT * {
    {INCLUDE %1}
    UNION {INCLUDE %3}
    UNION {INCLUDE %5}
    UNION {INCLUDE %7}
  }
}    BIND(COALESCE(IF(BOUND(?lemma), ?lemma, 1/0),
                  IF(BOUND(?labelDe), ?labelDe, 1/0),
                  IF(BOUND(?labelDeDe), ?labelDeDe, 1/0),
                  IF(BOUND(?labelEn), ?labelEn, 1/0))
         AS ?label).
  }
}
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT *
WITH {
  SELECT ?e {
    VALUES ?e {wd:L7 wd:Q146}.
  }
} AS %0
WITH {
  SELECT * {
    INCLUDE %0.
    ?e wikibase:lemma ?lemma.
  }
} AS %1
WITH {
  SELECT ?e {
    {INCLUDE %0}
    MINUS
    {INCLUDE %1}
  }
} AS %2
WITH {
  SELECT * {
    INCLUDE %2.
    ?e rdfs:label ?labelDe.
    FILTER(LANG(?labelDe) = \"de\")
  }
} AS %3
WITH {
  SELECT ?e {
    {INCLUDE %2}
    MINUS
    {INCLUDE %3}
  }
} AS %4
WITH {
  SELECT * {
    INCLUDE %4.
    ?e rdfs:label ?labelDeDe.
    FILTER(LANG(?labelDeDe) = \"de-de\")
  }
} AS %5
WITH {
  SELECT ?e {
    {INCLUDE %4}
    MINUS
    {INCLUDE %5}
  }
} AS %6
WITH {
  SELECT * {
    INCLUDE %6.
    ?e rdfs:label ?labelEn.
    FILTER(LANG(?labelEn) = \"en\")
  }
} AS %7
WITH {
  SELECT * {
    {INCLUDE %1}
    UNION {INCLUDE %3}
    UNION {INCLUDE %5}
    UNION {INCLUDE %7}
  }
} AS %8
WITH {
  SELECT ?e ?label {
    INCLUDE %8
    BIND(COALESCE(IF(BOUND(?lemma), ?lemma, 1/0),
                  IF(BOUND(?labelDe), ?labelDe, 1/0),
                  IF(BOUND(?labelDeDe), ?labelDeDe, 1/0),
                  IF(BOUND(?labelEn), ?labelEn, 1/0))
         AS ?label).
  }
} AS %9
{
  INCLUDE %9.
}""";
  schema:target <https://query.wikidata.org/sparql> .
