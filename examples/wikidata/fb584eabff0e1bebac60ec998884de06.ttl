@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-fb584eabff0e1bebac60ec998884de06> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User:D1gggg/Wikidata_model_and_SPARQL>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment """retrieve all \"unknowns\" and \"no value\" claims
SELECT ?item ?prefix ?valueorstatementnode ?typeOfStatementNode ?customText
WHERE
{
                                                         #for selected items
    VALUES ?item {
      wd:Q86085
      wd:Q4233718
    }
	?item  ?prefix ?valueorstatementnode.
#   !BOUND(DATATYPE(?valueorstatementnode))

    BIND(xsd:integer(IF(fn:starts-with(STR(?prefix), \"http://www.wikidata.org/prop/P\"), fn:replace(STR(?prefix), \"http://www.wikidata.org/prop/P\", \"\"), \"???\")) as ?pid)
    BIND(IRI(CONCAT(\"http://www.wikidata.org/prop/novalue/P\", STR(?pid))) as ?possibleWDNO)
    
    
    OPTIONAL 
    {
    ?valueorstatementnode rdf:type ?typeOfStatementNode. # information about \"no value\" stored as type
    }
    BIND(IF(isBlank(?valueorstatementnode), \"unknown value\", IF(?typeOfStatementNode = ?possibleWDNO, \"no value\", ?value)) as ?customText)

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY DESC(?customText)"""@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX bd: <http://www.bigdata.com/rdf#>
#retrieve all \"unknowns\" and \"no value\" claims
SELECT ?item ?prefix ?valueorstatementnode ?typeOfStatementNode ?customText
WHERE
{
                                                         #for selected items
    VALUES ?item {
      wd:Q86085
      wd:Q4233718
    }
	?item  ?prefix ?valueorstatementnode.
#   !BOUND(DATATYPE(?valueorstatementnode))

    BIND(xsd:integer(IF(fn:starts-with(STR(?prefix), \"http://www.wikidata.org/prop/P\"), fn:replace(STR(?prefix), \"http://www.wikidata.org/prop/P\", \"\"), \"???\")) as ?pid)
    BIND(IRI(CONCAT(\"http://www.wikidata.org/prop/novalue/P\", STR(?pid))) as ?possibleWDNO)
    
    
    OPTIONAL 
    {
    ?valueorstatementnode rdf:type ?typeOfStatementNode. # information about \"no value\" stored as type
    }
    BIND(IF(isBlank(?valueorstatementnode), \"unknown value\", IF(?typeOfStatementNode = ?possibleWDNO, \"no value\", ?value)) as ?customText)

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY DESC(?customText)""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """#retrieve all \"unknowns\" and \"no value\" claims
SELECT ?item ?prefix ?valueorstatementnode ?typeOfStatementNode ?customText
WHERE
{
                                                         #for selected items
    VALUES ?item {
      wd:Q86085
      wd:Q4233718
    }
	?item  ?prefix ?valueorstatementnode.
#   !BOUND(DATATYPE(?valueorstatementnode))

    BIND(xsd:integer(IF(fn:starts-with(STR(?prefix), \"http://www.wikidata.org/prop/P\"), fn:replace(STR(?prefix), \"http://www.wikidata.org/prop/P\", \"\"), \"???\")) as ?pid)
    BIND(IRI(CONCAT(\"http://www.wikidata.org/prop/novalue/P\", STR(?pid))) as ?possibleWDNO)
    
    
    OPTIONAL 
    {
    ?valueorstatementnode rdf:type ?typeOfStatementNode. # information about \"no value\" stored as type
    }
    BIND(IF(isBlank(?valueorstatementnode), \"unknown value\", IF(?typeOfStatementNode = ?possibleWDNO, \"no value\", ?value)) as ?customText)

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY DESC(?customText)""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
