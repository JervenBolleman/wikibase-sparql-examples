@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-a1c78792469d06be0c2803971d274501> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2019/04>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Female German-language science-fiction writers. The article got deleted, then reinstated, it got a certain amount of publicity and the discussion became heated and political. I tried to create such a list with a Wikidata query but I'm having a hard time getting the largest possible number of matches. After all, not all articles are using the precisely identical statements. female science-fiction authors writing in GermanI just came across a discussion about a list article in the German Wikipedia which tries to collect There is an occupation \"science fiction writer\", but the query could also use author plus genre science fiction (or an arbitrary sub-genre of sci-fi). The language part can be accomplished using \"native language\" and \"language spoken\".Maybe there are additional ways to express German plus science fiction writer that I don't know. I'm also having a hard time using the union feature of SPARQL. Here's what I currenly have, I've tried various combinations of what I have put into comments:"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?person ?personLabel ?dob ?dod WHERE
{
  ?person wdt:P31 wd:Q5.
  ?person wdt:P21 wd:Q6581072.
  # ?person wdt:P136 wd:Q24925.
  # ?person wdt:P136/wdt:P279 wd:Q24925.
  # {?person wdt:P103 wd:Q188} union {?person wdt:P1412 wd:108}.
  # ?person wdt:P106 wd:Q18844224
  optional {?person wdt:P569 ?dob}
  optional {?person wdt:P570 ?dod}
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?person ?personLabel ?dob ?dod WHERE
{
  ?person wdt:P31 wd:Q5.
  ?person wdt:P21 wd:Q6581072.
  # ?person wdt:P136 wd:Q24925.
  # ?person wdt:P136/wdt:P279 wd:Q24925.
  # {?person wdt:P103 wd:Q188} union {?person wdt:P1412 wd:108}.
  # ?person wdt:P106 wd:Q18844224
  optional {?person wdt:P569 ?dob}
  optional {?person wdt:P570 ?dod}
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
