@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-9dfc0bb699670199f1bf7e687631a832> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2021/05>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX schema: <http://schema.org/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT DISTINCT ?mdb ?mdbLabel ?faction ?abstract ?dateOfBirth ?dateOfDeath ?abgeordnetenwatchID ?thumbnailURI ?party ?gender ?websiteURI ?instagram ?facebook ?twitter WHERE
{
   {
  SELECT ?mdb ?humansWithPositionHeld WHERE {
 ?mdb wdt:P31 wd:Q5.
 ?mdb p:P39 ?humansWithPositionHeld.
 ?humansWithPositionHeld ps:P39 wd:Q1939555.
} } OPTIONAL { ?humansWithPositionHeld pq:P4100 ?faction. }
 OPTIONAL {?mdb wdt:P569 ?dateOfBirth. }
 OPTIONAL {?mdb wdt:P570 ?dateOfDeath. }
 OPTIONAL {?mdb wdt:P5355 ?abgeordnetenwatchID. }
 OPTIONAL {
   ?mdb wdt:P18 ?image_.
   BIND(REPLACE(wikibase:decodeUri(STR(?image_)), \"http://commons.wikimedia.org/wiki/Special:FilePath/\", \"\") AS ?imageFileName_)
   BIND(REPLACE(?imageFileName_, \" \", \"_\") AS ?imageFileNameSafe_)
   BIND(MD5(?imageFileNameSafe_) AS ?imageFileNameHash_)
   BIND(CONCAT(\"https://upload.wikimedia.org/wikipedia/commons/thumb/\", SUBSTR(?imageFileNameHash_, 1 , 1 ), \"/\", SUBSTR(?imageFileNameHash_, 1 , 2 ), \"/\", ?imageFileNameSafe_, \"/300px-\", ?imageFileNameSafe_) AS ?thumbnailURI)
 }
 OPTIONAL {?mdb wdt:P102 ?party. }
 OPTIONAL {
   ?mdb wdt:P21 ?gender_.
   ?gender_ rdfs:label ?genderLabel_. 
   FILTER(lang(?genderLabel_) = \"en\"). 
 }
 BIND(IF(BOUND(?genderLabel_ ), ?genderLabel_, \"unknown\") AS ?gender).
 OPTIONAL {?mdb wdt:P856 ?websiteURI. }
 OPTIONAL {?mdb wdt:P2003 ?instagram. }
 OPTIONAL {?mdb wdt:P2013 ?facebook. }
 OPTIONAL {?mdb wdt:P2002 ?twitter. }
# FILTER('1950-01-01'^^xsd:dateTime <= ?dateOfBirth && ?dateOfBirth < '1960-01-01'^^xsd:dateTime).
 SERVICE wikibase:label { bd:serviceParam wikibase:language \"de\". 
                         ?mdb rdfs:label ?mdbLabel.
                         ?mdb schema:description ?abstract. }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT DISTINCT ?mdb ?mdbLabel ?faction ?abstract ?dateOfBirth ?dateOfDeath ?abgeordnetenwatchID ?thumbnailURI ?party ?gender ?websiteURI ?instagram ?facebook ?twitter WITH {
  SELECT ?mdb ?humansWithPositionHeld WHERE {
 ?mdb wdt:P31 wd:Q5.
 ?mdb p:P39 ?humansWithPositionHeld.
 ?humansWithPositionHeld ps:P39 wd:Q1939555.
} } as %i
WHERE
{
  INCLUDE %i
 OPTIONAL { ?humansWithPositionHeld pq:P4100 ?faction. }
 OPTIONAL {?mdb wdt:P569 ?dateOfBirth. }
 OPTIONAL {?mdb wdt:P570 ?dateOfDeath. }
 OPTIONAL {?mdb wdt:P5355 ?abgeordnetenwatchID. }
 OPTIONAL {
   ?mdb wdt:P18 ?image_.
   BIND(REPLACE(wikibase:decodeUri(STR(?image_)), \"http://commons.wikimedia.org/wiki/Special:FilePath/\", \"\") AS ?imageFileName_)
   BIND(REPLACE(?imageFileName_, \" \", \"_\") AS ?imageFileNameSafe_)
   BIND(MD5(?imageFileNameSafe_) AS ?imageFileNameHash_)
   BIND(CONCAT(\"https://upload.wikimedia.org/wikipedia/commons/thumb/\", SUBSTR(?imageFileNameHash_, 1 , 1 ), \"/\", SUBSTR(?imageFileNameHash_, 1 , 2 ), \"/\", ?imageFileNameSafe_, \"/300px-\", ?imageFileNameSafe_) AS ?thumbnailURI)
 }
 OPTIONAL {?mdb wdt:P102 ?party. }
 OPTIONAL {
   ?mdb wdt:P21 ?gender_.
   ?gender_ rdfs:label ?genderLabel_. 
   FILTER(lang(?genderLabel_) = \"en\"). 
 }
 BIND(IF(BOUND(?genderLabel_ ), ?genderLabel_, \"unknown\") AS ?gender).
 OPTIONAL {?mdb wdt:P856 ?websiteURI. }
 OPTIONAL {?mdb wdt:P2003 ?instagram. }
 OPTIONAL {?mdb wdt:P2013 ?facebook. }
 OPTIONAL {?mdb wdt:P2002 ?twitter. }
# FILTER('1950-01-01'^^xsd:dateTime <= ?dateOfBirth && ?dateOfBirth < '1960-01-01'^^xsd:dateTime).
 SERVICE wikibase:label { bd:serviceParam wikibase:language \"de\". 
                         ?mdb rdfs:label ?mdbLabel.
                         ?mdb schema:description ?abstract. }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
