@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-245c3ef3f9565ec154d89f09917ea901> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:WikiProject_Invasion_biology>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT
  # Number of works on the topic with the author name string
  ?count

  # Number of works with the author name string
  ?count1

  # Author as a string
  ?authorstring

  # Build URL to the Author disambiguator tool
  (CONCAT(
      'https://tools.wmflabs.org/author-disambiguator/names_oauth.php?name=',
      ENCODE_FOR_URI(?authorstring)) AS ?resolver_url)
WHERE {
   {
  SELECT
    (COUNT(DISTINCT ?work) AS ?count)
    (COUNT(DISTINCT ?work1) AS ?count1)
    ?authorstring
  WHERE {
     {
  SELECT DISTINCT ?work ?authorstring WHERE {
    SERVICE bd:sample { ?work wdt:P6104 wd:Q56241615 . bd:serviceParam bd:sample.limit 100000 }   
    ?work wdt:P2093 ?authorstring .
  }
  LIMIT 10000
}    ?work1 wdt:P2093 ?authorstring .
  }
  GROUP BY ?authorstring
}}
ORDER BY DESC(?count) DESC(?count1)
LIMIT 200""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT
  # Number of works on the topic with the author name string
  ?count

  # Number of works with the author name string
  ?count1

  # Author as a string
  ?authorstring

  # Build URL to the Author disambiguator tool
  (CONCAT(
      'https://tools.wmflabs.org/author-disambiguator/names_oauth.php?name=',
      ENCODE_FOR_URI(?authorstring)) AS ?resolver_url)
WITH {
  SELECT DISTINCT ?work ?authorstring WHERE {
    SERVICE bd:sample { ?work wdt:P6104 wd:Q56241615 . bd:serviceParam bd:sample.limit 100000 }   
    ?work wdt:P2093 ?authorstring .
  }
  LIMIT 10000
} AS %works
WITH {
  SELECT
    (COUNT(DISTINCT ?work) AS ?count)
    (COUNT(DISTINCT ?work1) AS ?count1)
    ?authorstring
  WHERE {
    INCLUDE %works
    ?work1 wdt:P2093 ?authorstring .
  }
  GROUP BY ?authorstring
} AS %result
WHERE {
  INCLUDE %result
}
ORDER BY DESC(?count) DESC(?count1)
LIMIT 200""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://www.bigdata.com/rdf#sample>;
  schema:target <https://query.wikidata.org/sparql> .
