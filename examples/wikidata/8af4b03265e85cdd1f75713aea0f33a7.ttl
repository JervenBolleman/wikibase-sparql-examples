@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-8af4b03265e85cdd1f75713aea0f33a7> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Project_chat/Archive/2021/07>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "canonical list of \"Xwiki pages with Wikidata item\"?hi! sometimes, i need a list of all Xwiki articles or pages with Wikidata item to do further filtering etc. for testing purposes, i ran these queries on replicas: wbc_entity_usage (on client)SELECT distinct eu_entity_id from page p join wbc_entity_usage wb on p.page_id=wb.eu_page_id where eu_aspect='S' page_props (on client)select pp_value from page_props where pp_propname='wikibase_item' wb_items_per_site (wikidata)SELECT ips_item_id FROM wb_items_per_site where ips_site_id='XXwiki' all these queries did return different result sets with various issues: redirects to merged WD items, page on wiki was deleted, maybe something more. some links were simply missing (and sitelinks were added few months ago). already understood problems with wbc_entity_usage, that the results are bad because of item usage with Lua.  13:13, 17 July 2021 (UTC)) talk (Edgars2007i assume, the problem is known, but what could be done? do i really need to get links from wikidata json dump? that should have better results, right? :) \"use api\", you say? not for my usecases, i would say. and that would be more slow and probably put more strain on servers. or is there some other source? --How many pages are you looking for? If it's lvwiki, I suppose it would be \"only\" ca. 100,000. This seems to be not entirely impossible with Query Service."@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX schema: <http://schema.org/>
SELECT * { [ ] schema:about ?item ; schema:isPartOf <https://lv.wikipedia.org/> ; schema:name ?page } LIMIT 100000""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> "SELECT * { [ ] schema:about ?item ; schema:isPartOf <https://lv.wikipedia.org/> ; schema:name ?page } LIMIT 100000";
  schema:target <https://query.wikidata.org/sparql> .
