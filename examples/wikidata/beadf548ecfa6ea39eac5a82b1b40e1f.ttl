@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-beadf548ecfa6ea39eac5a82b1b40e1f> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2018/06>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Items where a Commons cat is the only sitelinkCan anyone think of a way to optimise this to within the time-limit? (Or, alternatively, an SQL query to do the same thing?) I've tried a couple of thoughts, but both time out:"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX schema: <http://schema.org/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT (COUNT(DISTINCT(?item)) AS ?count) 
WHERE {
   ?sitelink schema:isPartOf <https://commons.wikimedia.org/>.
   FILTER (STRSTARTS(str(?sitelink), \"https://commons.wikimedia.org/wiki/Category:\")) . 
   ?sitelink schema:about ?item .

   OPTIONAL {
       ?sitelink2 schema:about ?item .
       FILTER(?sitelink2 != ?sitelink) .
   }
   FILTER(!bound(?sitelink2)) 
  
#   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT (COUNT(DISTINCT(?item)) AS ?count) 
WHERE {
   ?sitelink schema:isPartOf <https://commons.wikimedia.org/>.
   FILTER (STRSTARTS(str(?sitelink), \"https://commons.wikimedia.org/wiki/Category:\")) . 
   ?sitelink schema:about ?item .

   OPTIONAL {
       ?sitelink2 schema:about ?item .
       FILTER(?sitelink2 != ?sitelink) .
   }
   FILTER(!bound(?sitelink2)) 
  
#   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""";
  schema:target <https://query.wikidata.org/sparql> .
