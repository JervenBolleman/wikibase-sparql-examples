@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-5cd1f9b42fc2f410eacc4423347e7fb4> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User:Datumizer/List_of_role-playing_video_games>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment """ Script #2
SELECT
	(MIN(?dateYear) AS	?dateYears)
	(GROUP_CONCAT(DISTINCT	?gameENLabelTxt;	separator = \", \") AS	?gameENLabelTxts)		# English label
	(GROUP_CONCAT(DISTINCT	?genreLabel;		separator = \", \") AS	?gamGenreLabels)
	(GROUP_CONCAT(DISTINCT	?themeLabel;		separator = \", \") AS	?ficGenreLabels)
	(GROUP_CONCAT(DISTINCT	?devLabel;		separator = \", \") AS	?devLabels)
	(GROUP_CONCAT(DISTINCT	?pubLabel;		separator = \", \") AS	?pubLabels)
	(GROUP_CONCAT(DISTINCT	?platLabel;		separator = \", \") AS	?platLabels)
	(GROUP_CONCAT(DISTINCT	?seriesLabel;		separator = \", \") AS	?seriesLabels)
#	(?game AS ?dataLink)
	WHERE
	{
		#hint:Query hint:optimizer \"None\".

		# test values
#		VALUES ?game
#		{
#			wd:Q4850488		# Baldur's Gate III: The Black Hound (should have \"no value\" due to being cancelled)
#			wd:Q4931588		# Bob's Game (should have \"no value\" due to not being released yet)
#			wd:Q5315330		# Dunjonquest (1979)
#			wd:Q5250229		# Deep Labyrinth (should have multiple dates)
#			wd:Q1462499		# Starflight (1986, has multiple genres)
#			wd:Q22124593		# God Wars: Beyond Time (should have blank date since the property does not exist)
#		}

		# types of item
		      {?game wdt:P136  wd:Q744038}	# regular RPGs
		UNION {?game wdt:P136 wd:Q1529437}	# tactical RPGs
		UNION {?game wdt:P136 wd:Q1422746}	# action RPGs
		UNION {?game wdt:P136 wd:Q1143132}	# roguelikes
#		?game wdt:P136/wdt:P279* wd:Q744038.	# any class or subclass of role-playing video game, including MMORPGs
		?game wdt:P31 wd:Q7889.							# instance of video game

		# English label
		OPTIONAL
		{
			?game rdfs:label ?gameENLabel FILTER(LANG(?gameENLabel) = \"en\").
			BIND(CONCAT(?gameENLabel, \" (EN)\") AS ?gameENLabelTxt)
		}

		# release date (simple)
		OPTIONAL {?game wdt:P577 ?date BIND(YEAR(?date) AS ?dateYear)}

		# gameplay genres
		OPTIONAL
		{
			?game wdt:P136 ?gameGenre.
			?gameGenre wdt:P31 wd:Q659563.
			FILTER(?gameGenre != wd:Q744038).
			?gameGenre rdfs:label ?gameplayGenreString.
			FILTER(LANG(?gameplayGenreString) = \"en\").
			BIND(CONCAT(UCASE(SUBSTR(?gameplayGenreString, 1, 1)), SUBSTR(?gameplayGenreString, 2)) AS ?genreLabel).		# makes the first character in the string upper case
#			BIND(STR(?gameplayGenreString) AS ?genreLabel).		# faster substitute
		}

		# fiction genres
		OPTIONAL
		{
			?game wdt:P136 ?otherGenre.
			MINUS {?otherGenre wdt:P31 wd:Q659563}.
			?otherGenre rdfs:label ?fictionGenreString.
			FILTER(LANG(?fictionGenreString) = \"en\").
			BIND(CONCAT(UCASE(SUBSTR(?fictionGenreString, 1, 1)), SUBSTR(?fictionGenreString, 2)) AS ?themeLabel).		# makes the first character in the string upper case
#			BIND(STR(?fictionGenreString) AS ?themeLabel).		# faster substitute
		}

		# developer, publisher, platform and series
		OPTIONAL {?game wdt:P178	?developer}
		OPTIONAL {?game wdt:P123	?publisher}
		OPTIONAL {?game wdt:P400	 ?platform}
		OPTIONAL {?game wdt:P179	   ?series}

		# labels
		SERVICE wikibase:label
		{
			bd:serviceParam wikibase:language \"en\".
			?developer rdfs:label		   ?devLabel.
			?publisher rdfs:label		   ?pubLabel.
			 ?platform rdfs:label		  ?platLabel.
			   ?series rdfs:label		?seriesLabel.
		}
	}
GROUP BY $game
ORDER BY ASC (?dateYears) ASC (?gameENLabelTxts)
#limit 100"""@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX bd: <http://www.bigdata.com/rdf#>
# Script #2
SELECT
	(MIN(?dateYear) AS	?dateYears)
	(GROUP_CONCAT(DISTINCT	?gameENLabelTxt;	separator = \", \") AS	?gameENLabelTxts)		# English label
	(GROUP_CONCAT(DISTINCT	?genreLabel;		separator = \", \") AS	?gamGenreLabels)
	(GROUP_CONCAT(DISTINCT	?themeLabel;		separator = \", \") AS	?ficGenreLabels)
	(GROUP_CONCAT(DISTINCT	?devLabel;		separator = \", \") AS	?devLabels)
	(GROUP_CONCAT(DISTINCT	?pubLabel;		separator = \", \") AS	?pubLabels)
	(GROUP_CONCAT(DISTINCT	?platLabel;		separator = \", \") AS	?platLabels)
	(GROUP_CONCAT(DISTINCT	?seriesLabel;		separator = \", \") AS	?seriesLabels)
#	(?game AS ?dataLink)
	WHERE
	{
		#hint:Query hint:optimizer \"None\".

		# test values
#		VALUES ?game
#		{
#			wd:Q4850488		# Baldur's Gate III: The Black Hound (should have \"no value\" due to being cancelled)
#			wd:Q4931588		# Bob's Game (should have \"no value\" due to not being released yet)
#			wd:Q5315330		# Dunjonquest (1979)
#			wd:Q5250229		# Deep Labyrinth (should have multiple dates)
#			wd:Q1462499		# Starflight (1986, has multiple genres)
#			wd:Q22124593		# God Wars: Beyond Time (should have blank date since the property does not exist)
#		}

		# types of item
		      {?game wdt:P136  wd:Q744038}	# regular RPGs
		UNION {?game wdt:P136 wd:Q1529437}	# tactical RPGs
		UNION {?game wdt:P136 wd:Q1422746}	# action RPGs
		UNION {?game wdt:P136 wd:Q1143132}	# roguelikes
#		?game wdt:P136/wdt:P279* wd:Q744038.	# any class or subclass of role-playing video game, including MMORPGs
		?game wdt:P31 wd:Q7889.							# instance of video game

		# English label
		OPTIONAL
		{
			?game rdfs:label ?gameENLabel FILTER(LANG(?gameENLabel) = \"en\").
			BIND(CONCAT(?gameENLabel, \" (EN)\") AS ?gameENLabelTxt)
		}

		# release date (simple)
		OPTIONAL {?game wdt:P577 ?date BIND(YEAR(?date) AS ?dateYear)}

		# gameplay genres
		OPTIONAL
		{
			?game wdt:P136 ?gameGenre.
			?gameGenre wdt:P31 wd:Q659563.
			FILTER(?gameGenre != wd:Q744038).
			?gameGenre rdfs:label ?gameplayGenreString.
			FILTER(LANG(?gameplayGenreString) = \"en\").
			BIND(CONCAT(UCASE(SUBSTR(?gameplayGenreString, 1, 1)), SUBSTR(?gameplayGenreString, 2)) AS ?genreLabel).		# makes the first character in the string upper case
#			BIND(STR(?gameplayGenreString) AS ?genreLabel).		# faster substitute
		}

		# fiction genres
		OPTIONAL
		{
			?game wdt:P136 ?otherGenre.
			MINUS {?otherGenre wdt:P31 wd:Q659563}.
			?otherGenre rdfs:label ?fictionGenreString.
			FILTER(LANG(?fictionGenreString) = \"en\").
			BIND(CONCAT(UCASE(SUBSTR(?fictionGenreString, 1, 1)), SUBSTR(?fictionGenreString, 2)) AS ?themeLabel).		# makes the first character in the string upper case
#			BIND(STR(?fictionGenreString) AS ?themeLabel).		# faster substitute
		}

		# developer, publisher, platform and series
		OPTIONAL {?game wdt:P178	?developer}
		OPTIONAL {?game wdt:P123	?publisher}
		OPTIONAL {?game wdt:P400	 ?platform}
		OPTIONAL {?game wdt:P179	   ?series}

		# labels
		SERVICE wikibase:label
		{
			bd:serviceParam wikibase:language \"en\".
			?developer rdfs:label		   ?devLabel.
			?publisher rdfs:label		   ?pubLabel.
			 ?platform rdfs:label		  ?platLabel.
			   ?series rdfs:label		?seriesLabel.
		}
	}
GROUP BY $game
ORDER BY ASC (?dateYears) ASC (?gameENLabelTxts)
#limit 100""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """# Script #2
SELECT
	(MIN(?dateYear) AS	?dateYears)
	(GROUP_CONCAT(DISTINCT	?gameENLabelTxt;	separator = \", \") AS	?gameENLabelTxts)		# English label
	(GROUP_CONCAT(DISTINCT	?genreLabel;		separator = \", \") AS	?gamGenreLabels)
	(GROUP_CONCAT(DISTINCT	?themeLabel;		separator = \", \") AS	?ficGenreLabels)
	(GROUP_CONCAT(DISTINCT	?devLabel;		separator = \", \") AS	?devLabels)
	(GROUP_CONCAT(DISTINCT	?pubLabel;		separator = \", \") AS	?pubLabels)
	(GROUP_CONCAT(DISTINCT	?platLabel;		separator = \", \") AS	?platLabels)
	(GROUP_CONCAT(DISTINCT	?seriesLabel;		separator = \", \") AS	?seriesLabels)
#	(?game AS ?dataLink)
	WHERE
	{
		#hint:Query hint:optimizer \"None\".

		# test values
#		VALUES ?game
#		{
#			wd:Q4850488		# Baldur's Gate III: The Black Hound (should have \"no value\" due to being cancelled)
#			wd:Q4931588		# Bob's Game (should have \"no value\" due to not being released yet)
#			wd:Q5315330		# Dunjonquest (1979)
#			wd:Q5250229		# Deep Labyrinth (should have multiple dates)
#			wd:Q1462499		# Starflight (1986, has multiple genres)
#			wd:Q22124593		# God Wars: Beyond Time (should have blank date since the property does not exist)
#		}

		# types of item
		      {?game wdt:P136  wd:Q744038}	# regular RPGs
		UNION {?game wdt:P136 wd:Q1529437}	# tactical RPGs
		UNION {?game wdt:P136 wd:Q1422746}	# action RPGs
		UNION {?game wdt:P136 wd:Q1143132}	# roguelikes
#		?game wdt:P136/wdt:P279* wd:Q744038.	# any class or subclass of role-playing video game, including MMORPGs
		?game wdt:P31 wd:Q7889.							# instance of video game

		# English label
		OPTIONAL
		{
			?game rdfs:label ?gameENLabel FILTER(LANG(?gameENLabel) = \"en\").
			BIND(CONCAT(?gameENLabel, \" (EN)\") AS ?gameENLabelTxt)
		}

		# release date (simple)
		OPTIONAL {?game wdt:P577 ?date BIND(YEAR(?date) AS ?dateYear)}

		# gameplay genres
		OPTIONAL
		{
			?game wdt:P136 ?gameGenre.
			?gameGenre wdt:P31 wd:Q659563.
			FILTER(?gameGenre != wd:Q744038).
			?gameGenre rdfs:label ?gameplayGenreString.
			FILTER(LANG(?gameplayGenreString) = \"en\").
			BIND(CONCAT(UCASE(SUBSTR(?gameplayGenreString, 1, 1)), SUBSTR(?gameplayGenreString, 2)) AS ?genreLabel).		# makes the first character in the string upper case
#			BIND(STR(?gameplayGenreString) AS ?genreLabel).		# faster substitute
		}

		# fiction genres
		OPTIONAL
		{
			?game wdt:P136 ?otherGenre.
			MINUS {?otherGenre wdt:P31 wd:Q659563}.
			?otherGenre rdfs:label ?fictionGenreString.
			FILTER(LANG(?fictionGenreString) = \"en\").
			BIND(CONCAT(UCASE(SUBSTR(?fictionGenreString, 1, 1)), SUBSTR(?fictionGenreString, 2)) AS ?themeLabel).		# makes the first character in the string upper case
#			BIND(STR(?fictionGenreString) AS ?themeLabel).		# faster substitute
		}

		# developer, publisher, platform and series
		OPTIONAL {?game wdt:P178	?developer}
		OPTIONAL {?game wdt:P123	?publisher}
		OPTIONAL {?game wdt:P400	 ?platform}
		OPTIONAL {?game wdt:P179	   ?series}

		# labels
		SERVICE wikibase:label
		{
			bd:serviceParam wikibase:language \"en\".
			?developer rdfs:label		   ?devLabel.
			?publisher rdfs:label		   ?pubLabel.
			 ?platform rdfs:label		  ?platLabel.
			   ?series rdfs:label		?seriesLabel.
		}
	}
GROUP BY $game
ORDER BY ASC (?dateYears) ASC (?gameENLabelTxts)
#limit 100""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
