@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-b3f322af1d3121156b3501c059c8bc37> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/en>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/fr>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/hy>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/nl>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/pt>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/ru>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/uk>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/zh>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "There is also a simple group by and count optimization that will combine both the distinct term scan and the fast range count optimizations, the latter for every predicate. This is a lightningly fast way to get counts for all the different predicates. If you need only counts for a subset of the predicates it will most likely be fastest to start with this, wrap it unchanged in a named subquery, then reduce the set down to what you want."@en,
    "There is also a simple group by and count optimization that will combine both the distinct term scan and the fast range count optimizations, the latter for every predicate. This is a lightningly fast way to get counts for all the different predicates. If you need only counts for a subset of the predicates it will most likely be fastest to start with this, wrap it unchanged in a named subquery, then reduce the set down to what you want."@fr,
    "There is also a simple group by and count optimization that will combine both the distinct term scan and the fast range count optimizations, the latter for every predicate. This is a lightningly fast way to get counts for all the different predicates. If you need only counts for a subset of the predicates it will most likely be fastest to start with this, wrap it unchanged in a named subquery, then reduce the set down to what you want."@hy,
    "Er is ook een eenvoudige groep door en met tel optimalisatie die zowel de verschillende term scan en de snel bereik met tel optimalisering, de laatste voor elk predicaat zal combineren. Dit is een bliksemsnelle manier om alle verschillende predicaten te tellen. Als u alleen een subset van de predicaten nodig hebt, is het waarschijnlijk het snelst om hiermee te beginnen, het onveranderd in een subquery te wrappen, en vervolgens de set te reduceren tot wat u wilt."@nl,
    "TODO"@pt, "There is also a simple group by and count optimization that will combine both the distinct term scan and the fast range count optimizations, the latter for every predicate. This is a lightningly fast way to get counts for all the different predicates. If you need only counts for a subset of the predicates it will most likely be fastest to start with this, wrap it unchanged in a named subquery, then reduce the set down to what you want."@ru,
    "There is also a simple group by and count optimization that will combine both the distinct term scan and the fast range count optimizations, the latter for every predicate. This is a lightningly fast way to get counts for all the different predicates. If you need only counts for a subset of the predicates it will most likely be fastest to start with this, wrap it unchanged in a named subquery, then reduce the set down to what you want."@uk,
    "There is also a simple group by and count optimization that will combine both the distinct term scan and the fast range count optimizations, the latter for every predicate. This is a lightningly fast way to get counts for all the different predicates. If you need only counts for a subset of the predicates it will most likely be fastest to start with this, wrap it unchanged in a named subquery, then reduce the set down to what you want."@zh;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """SELECT ?p (COUNT(?p) AS ?count)
WHERE { [] ?p [] . }
GROUP BY ?p""";
  schema:target <https://query.wikidata.org/sparql> .
