@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-72e390c5e6c44b7d04ce40773ae3182b> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/ar>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/da>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/en>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/en-gb>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/hy>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/ja>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/lb>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/nl>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/ru>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/sv>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/szl>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/uk>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "استعلامنا الأوللنفترض أننا نريد سرد جميع أطفال الملحن الباروكي يوهان سيباستيان باخ، باستخدام عناصر زائفة كما في الاستعلامات أعلاه، كيف تكتب هذا الاستعلام؟ نأمل أن يكون لديك شيء من هذا القبيل:  } # (ملاحظة: كل شيء بعد '#' هو تعليق ويتم تجاهله بواسطة خدمة استعلام ويكي بيانات.) .Bach parent ?child # child \"has parent\" Bach { WHERE ?child SELECTأو هذا،"@ar,
    "Our first query  Suppose we want to list all children of the baroque composer Johann Sebastian Bach. Using pseudo-elements like in the queries above, how would you write that query?   Hopefully you got something like this:   } # (note: everything after a ‘#’ is a comment and ignored by WDQS.) .Bach parent ?child # child \"has parent\" Bach { WHERE ?child SELECTeller dette,"@da,
    "Our first querySuppose we want to list all children of the baroque composer Johann Sebastian Bach. Using pseudo-elements like in the queries above, how would you write that query? Hopefully you got something like this:  } # (note: everything after a ‘#’ is a comment and ignored by WDQS.) .Bach parent ?child # child \"has parent\" Bach { WHERE ?child SELECTor this,"@en,
    "Our first querySuppose we want to list all children of the baroque composer Johann Sebastian Bach. Using pseudo-elements like in the queries above, how would you write that query? Hopefully you've got something like this:  } # (note: everything after a ‘#’ is a comment and ignored by WDQS.) .Bach parent ?child # child \"has parent\" Bach { WHERE ?child SELECTor this,"@en-GB,
    "Our first query  Suppose we want to list all children of the baroque composer Johann Sebastian Bach. Using pseudo-elements like in the queries above, how would you write that query?   Hopefully you got something like this:   } # (note: everything after a ‘#’ is a comment and ignored by WDQS.) .Bach parent ?child # child \"has parent\" Bach { WHERE ?child SELECT or this,"@hy,
    "初めてのクエリバロック音楽の作曲家、ヨハン・ゼバスティアン・バッハの、すべての子供を列挙したいものと考えてみてください。上のクエリで見たような擬似要素を使うとして、あなたならどんなクエリを書きますか？ こんな感じのクエリを書いたのではないでしょうか。  } # （注：‘#’ より後ろはすべてはコメントで、WDQSには無視されます。） .Bach parent ?child # child \"has parent\" Bach { WHERE ?child SELECTあるいはこんなのや、"@ja,
    "Our first query  Suppose we want to list all children of the baroque composer Johann Sebastian Bach. Using pseudo-elements like in the queries above, how would you write that query?   Hopefully you got something like this:   } # (note: everything after a ‘#’ is a comment and ignored by WDQS.) .Bach parent ?child # child \"has parent\" Bach { WHERE ?child SELECT or this,"@lb,
    "Onze eerste queryStel dat we alle kinderen van de barokcomponist Johann Sebastian Bach willen opnemen. Met pseudo-elementen zoals in de vragen hierboven, hoe zou u die query schrijven? Hopelijk heeft u iets als dit:  } # (NB: alles na een '#' is een commentaar en wordt door WDQS genegeerd. ) .Bach parent ?child # child \"has parent\" Bach { WHERE ?child SELECTof dit,"@nl,
    "Ваш первый запросПредположим, мы хотим получить список всех детей композитора эпохи барокко Иоганна Себастьяна Баха. При использовании псевдоэлементов, как в запросах выше, как бы вы составили такой запрос? Надеемся у вас получилось что-то вроде этого:  } # (Примечание: текст после символа \"#\" - это комментарий и игнорируется WDQS.) .Bach parent ?child # child \"has parent\" Bach { WHERE ?child SELECTили этого:"@ru,
    "Our first query  Suppose we want to list all children of the baroque composer Johann Sebastian Bach. Using pseudo-elements like in the queries above, how would you write that query?   Hopefully you got something like this:   } # (note: everything after a ‘#’ is a comment and ignored by WDQS.) .Bach parent ?child # child \"has parent\" Bach { WHERE ?child SELECT or this,"@sv,
    "Our first query  Suppose we want to list all children of the baroque composer Johann Sebastian Bach. Using pseudo-elements like in the queries above, how would you write that query?   Hopefully you got something like this:   } # (note: everything after a ‘#’ is a comment and ignored by WDQS.) .Bach parent ?child # child \"has parent\" Bach { WHERE ?child SELECT or this,"@szl,
    "Наш перший запитПрипустимо, ми хочемо скласти список усіх дітей барокового композитора Йоганна Себастьяна Баха. Використовуючи псевдоелементи, як у запитах вище, як би ви написали цей запит? Сподіваємось, у вас є щось на зразок цього:  } # (примітка: все після ‘#’ є коментарем й ігнорується у WDQS.) .Bach parent ?child # child \"has parent\" Bach { WHERE ?child SELECTабо цього"@uk;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """SELECT ?child
WHERE
{
  # child \"has father\" Bach 
  ?child father Bach. 
}""";
  schema:target <https://query.wikidata.org/sparql> .
