@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-03a68e09ec8875ebc328ed747cff37d6> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2020/05>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Doronuziel"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX mwapi: <http://wikiba.se/ontology#>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT DISTINCT ?item ?itemLabel ?image ?imgLicense ?imgArtist
WHERE
{
  ?item wdt:P214 \"96987389\".
  OPTIONAL  { ?item wdt:P18 ?image. }
  BIND (wikibase:decodeUri(SUBSTR(STR(?image),52)) AS ?image_name)
  SERVICE wikibase:mwapi
  {
    bd:serviceParam wikibase:endpoint \"commons.wikimedia.org\".
    bd:serviceParam wikibase:api \"Generator\".
    bd:serviceParam wikibase:limit \"once\".
    bd:serviceParam mwapi:generator \"allpages\".
    bd:serviceParam mwapi:gapfrom ?image_name.
    bd:serviceParam mwapi:gaplimit \"1\".
    bd:serviceParam mwapi:gapnamespace \"6\".
    bd:serviceParam mwapi:prop \"imageinfo\".
    bd:serviceParam mwapi:iiprop \"extmetadata\".
    ?imgLicense wikibase:apiOutput \"imageinfo/ii/extmetadata/LicenseShortName/@value\".
    ?imgArtist wikibase:apiOutput \"imageinfo/ii/extmetadata/Artist/@value\".
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT DISTINCT ?item ?itemLabel ?image ?imgLicense ?imgArtist
WHERE
{
  ?item wdt:P214 \"96987389\".
  OPTIONAL  { ?item wdt:P18 ?image. }
  BIND (wikibase:decodeUri(SUBSTR(STR(?image),52)) AS ?image_name)
  SERVICE wikibase:mwapi
  {
    bd:serviceParam wikibase:endpoint \"commons.wikimedia.org\".
    bd:serviceParam wikibase:api \"Generator\".
    bd:serviceParam wikibase:limit \"once\".
    bd:serviceParam mwapi:generator \"allpages\".
    bd:serviceParam mwapi:gapfrom ?image_name.
    bd:serviceParam mwapi:gaplimit \"1\".
    bd:serviceParam mwapi:gapnamespace \"6\".
    bd:serviceParam mwapi:prop \"imageinfo\".
    bd:serviceParam mwapi:iiprop \"extmetadata\".
    ?imgLicense wikibase:apiOutput \"imageinfo/ii/extmetadata/LicenseShortName/@value\".
    ?imgArtist wikibase:apiOutput \"imageinfo/ii/extmetadata/Artist/@value\".
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>,
    <http://wikiba.se/ontology#mwapi>;
  schema:target <https://query.wikidata.org/sparql> .
