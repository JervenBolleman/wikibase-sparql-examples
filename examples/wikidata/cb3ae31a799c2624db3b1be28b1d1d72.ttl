@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-cb3ae31a799c2624db3b1be28b1d1d72> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2020/06>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "]reply[21:29, 19 June 2020 (UTC)) talk (Andrew GrayI haven't yet worked out how to add \"and tell me who out of ?pres was oldest on ?day\", though...  The second part then figures out for each of those days, how many people had a) a presidential term which had already finished; b) had not yet died.  (the +1 is a fudge to make the numbers line up since my query only counts former presidents, that one counts current presidents as well). The first part finds all the days when the count might change - a President starts, ends, or dies.en:Living presidents of the United StatesThis basically replicates the table at"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?day ?pres ?presLabel ?age WHERE 
{
 { SELECT distinct ?day WHERE {
  { ?m wdt:P31 wd:Q5 . ?m p:P39 ?st . ?st ps:P39 wd:Q11696 . ?m wdt:P570 ?day } union
  { ?m wdt:P31 wd:Q5 . ?m p:P39 ?st . ?st ps:P39 wd:Q11696 . ?st pq:P580 ?day } union
  { ?m wdt:P31 wd:Q5 . ?m p:P39 ?st . ?st ps:P39 wd:Q11696 . ?st pq:P582 ?day }  
 } }
  optional {
    ?pres wdt:P31 wd:Q5 . ?pres p:P39 ?st . ?st ps:P39 wd:Q11696 . ?st pq:P582 ?end .
    optional { ?pres wdt:P570 ?died } . filter (COALESCE(?died, NOW()) > ?day ) . filter (?day >= ?end ) .
    ?pres wdt:P569 ?born . bind((?day - ?born) as ?age) 
  }
  filter not exists {
    ?pres2 wdt:P31 wd:Q5 . ?pres2 p:P39 ?st2 . ?st2 ps:P39 wd:Q11696 . ?st2 pq:P582 ?end2 . filter (?day >= ?end2 ) .
    ?pres2 wdt:P569 ?born2 . bind((?day - ?born2) as ?age2) . filter( ?age2 < ?age )
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} order by ?day""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?day ?pres ?presLabel ?age WHERE 
{
 { SELECT distinct ?day WHERE {
  { ?m wdt:P31 wd:Q5 . ?m p:P39 ?st . ?st ps:P39 wd:Q11696 . ?m wdt:P570 ?day } union
  { ?m wdt:P31 wd:Q5 . ?m p:P39 ?st . ?st ps:P39 wd:Q11696 . ?st pq:P580 ?day } union
  { ?m wdt:P31 wd:Q5 . ?m p:P39 ?st . ?st ps:P39 wd:Q11696 . ?st pq:P582 ?day }  
 } }
  optional {
    ?pres wdt:P31 wd:Q5 . ?pres p:P39 ?st . ?st ps:P39 wd:Q11696 . ?st pq:P582 ?end .
    optional { ?pres wdt:P570 ?died } . filter (COALESCE(?died, NOW()) > ?day ) . filter (?day >= ?end ) .
    ?pres wdt:P569 ?born . bind((?day - ?born) as ?age) 
  }
  filter not exists {
    ?pres2 wdt:P31 wd:Q5 . ?pres2 p:P39 ?st2 . ?st2 ps:P39 wd:Q11696 . ?st2 pq:P582 ?end2 . filter (?day >= ?end2 ) .
    ?pres2 wdt:P569 ?born2 . bind((?day - ?born2) as ?age2) . filter( ?age2 < ?age )
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} order by ?day""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
