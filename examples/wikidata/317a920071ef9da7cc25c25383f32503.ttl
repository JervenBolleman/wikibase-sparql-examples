@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-317a920071ef9da7cc25c25383f32503> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User_talk:Ep%C3%ACdosis/Archive/2021>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Open questionHi Ep√¨dosis,  11:31, 22 January 2021 (UTC) JuraSomehow we should try to solve the potential issue with P5034. The somewhat vague comments on project chat suggest that there is non-minor problem, but it's still unclear to me what that is. Possibly it's obvious to Korean speakers. From past experience, large-scale imports in Latin script data from VIAF have been problematic, so I doubt this necessarily works well for Korean. If a substantial part of the data is indeed problematic, I'd suggest to undo/delete it rather than let it linger. Maybe we/you can get better pointers to which parts didn't work out. I don't think we should rely on native speakers fixing them manually one-by-one (including in MxM). --- : Hi! I agree, it is a relevant problem. However, as Christian140 pointed out in the Project chat, any solution based only on SPARQL queries (e.g. removing all VIAFs and NLKs in items having VIAF and NLK as only identifiers) risks to remove a high number of correct statements added by native speakers, so would be (reasonably) unpopular as well as the current situation. The absence of an efficient query service considering also the history of the items is really unfortunate. However, something can probably be done: starting fromJura1@"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wdt: <http://www.wikidata.org/prop/direct/>
SELECT ?item ?nlk ?viaf
WHERE {
  ?item wdt:P5034 ?nlk . 
  ?item wdt:P214 ?viaf . 
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?item ?nlk ?viaf
WHERE {
  ?item wdt:P5034 ?nlk . 
  ?item wdt:P214 ?viaf . 
}""";
  schema:target <https://query.wikidata.org/sparql> .
