@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-8201a2daebf38af9947110c8e0eab8f6> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2020/08>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "As far as I know, STRBEFORE() and STRAFTER() are the only splitting functions in SPARQL accepting a string argument (SUBSTR() only accept a number). So here is a try: 09:34, 23 August 2020 (UTC) JuraIs there a way to differenciate them? --- : but I need to have them in distinct columns and not to use GROUP_CONCAT. Jura1Thank you @ 08:22, 23 August 2020 (UTC) JuraMaybe like the above .. I'm not sure how to split them into distinct variables. ---"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT
  ?item ?itemLabel
  ?acronym_mb 
  (GROUP_CONCAT(DISTINCT str(?acronym); separator = \", \") as ?other_acronyms)
  (GROUP_CONCAT(DISTINCT str(?acronym_old); separator = \", \") as ?old_acronyms)
WHERE 
{
  ?item wdt:P1343 wd:Q96192978.
  OPTIONAL { ?item p:P1813 ?st0  . 
      ?st0 pq:P1535 wd:Q96192978 ; ps:P1813 ?acronym_mb . 
      FILTER NOT EXISTS { ?st0 pq:P582 [] }
           }
  OPTIONAL { ?item p:P1813 ?st1 . ?st1 ps:P1813 ?acronym . 
             FILTER NOT EXISTS { ?st1 pq:P1535 wd:Q96192978 } 
             FILTER NOT EXISTS { ?st1 pq:P582 [] }
           }
  OPTIONAL { ?item p:P1813 ?st2 . ?st2 ps:P1813 ?acronym_old . 
             FILTER EXISTS { ?st2 pq:P582 [] }
           }  
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de,it\". }
}
GROUP BY ?item ?itemLabel ?acronym_mb""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT
  ?item ?itemLabel
  ?acronym_mb 
  (GROUP_CONCAT(DISTINCT str(?acronym); separator = \", \") as ?other_acronyms)
  (GROUP_CONCAT(DISTINCT str(?acronym_old); separator = \", \") as ?old_acronyms)
WHERE 
{
  ?item wdt:P1343 wd:Q96192978.
  OPTIONAL { ?item p:P1813 ?st0  . 
      ?st0 pq:P1535 wd:Q96192978 ; ps:P1813 ?acronym_mb . 
      FILTER NOT EXISTS { ?st0 pq:P582 [] }
           }
  OPTIONAL { ?item p:P1813 ?st1 . ?st1 ps:P1813 ?acronym . 
             FILTER NOT EXISTS { ?st1 pq:P1535 wd:Q96192978 } 
             FILTER NOT EXISTS { ?st1 pq:P582 [] }
           }
  OPTIONAL { ?item p:P1813 ?st2 . ?st2 ps:P1813 ?acronym_old . 
             FILTER EXISTS { ?st2 pq:P582 [] }
           }  
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de,it\". }
}
GROUP BY ?item ?itemLabel ?acronym_mb""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
