@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-eabc885ea6722561316191546575e4e7> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2018/08>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "06:43, 18 August 2018 (UTC)) talk (Dipsacus fullonumI can still not run my version my the English Wikipedia with the OR filter. But for Estonian Wikipedia it gave an average of 68 years for 9188 persons in 5 seconds. -- Besides the average year is longer than 365 days because of leap years, and people living in 1800 or 1899 but not in 1801-1898 were not included. 's last version: 1) There is no need to test if the precision is less than day. There is no such datetime values in Wikidata, but if there were it would not be a problem. 2) There is no need to calculate the year with the year function before comparasion of dates. It is faster to compare datetime values directly.TagishsimonI made some optimizations on"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX schema: <http://schema.org/>
PREFIX psv: <http://www.wikidata.org/prop/statement/value/>
PREFIX p: <http://www.wikidata.org/prop/>
SELECT (count(?p) as ?count) (avg(?age)/365.24 as ?avg_age) WHERE 
{
  ?p wdt:P31 wd:Q5 ;
      p:P569/psv:P569 [wikibase:timePrecision ?tpb ;
                       wikibase:timeValue ?birth] ;
      p:P570/psv:P570 [wikibase:timePrecision ?tpd ;
                       wikibase:timeValue ?death] .
      ?article schema:about ?p ;
               schema:isPartOf <https://da.wikipedia.org/> .
  filter(?tpb > 8 && ?tpd > 8)

#  filter(?birth < \"1900-01-01T00:00:00Z\"^^xsd:dateTime &&
#         ?birth >= \"1800-01-01T00:00:00Z\"^^xsd:dateTime)  #birth filter
#  filter(?death < \"1900-01-01T00:00:00Z\"^^xsd:dateTime &&
#         ?death >= \"1800-01-01T00:00:00Z\"^^xsd:dateTime)  #death filter
  filter(?birth < \"1900-01-01T00:00:00Z\"^^xsd:dateTime &&
         ?birth >= \"1800-01-01T00:00:00Z\"^^xsd:dateTime ||
         ?death < \"1900-01-01T00:00:00Z\"^^xsd:dateTime &&
         ?death >= \"1800-01-01T00:00:00Z\"^^xsd:dateTime) #OR filter
  bind(?death-?birth as ?age)  
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT (count(?p) as ?count) (avg(?age)/365.24 as ?avg_age) WHERE 
{
  ?p wdt:P31 wd:Q5 ;
      p:P569/psv:P569 [wikibase:timePrecision ?tpb ;
                       wikibase:timeValue ?birth] ;
      p:P570/psv:P570 [wikibase:timePrecision ?tpd ;
                       wikibase:timeValue ?death] .
      ?article schema:about ?p ;
               schema:isPartOf <https://da.wikipedia.org/> .
  filter(?tpb > 8 && ?tpd > 8)

#  filter(?birth < \"1900-01-01T00:00:00Z\"^^xsd:dateTime &&
#         ?birth >= \"1800-01-01T00:00:00Z\"^^xsd:dateTime)  #birth filter
#  filter(?death < \"1900-01-01T00:00:00Z\"^^xsd:dateTime &&
#         ?death >= \"1800-01-01T00:00:00Z\"^^xsd:dateTime)  #death filter
  filter(?birth < \"1900-01-01T00:00:00Z\"^^xsd:dateTime &&
         ?birth >= \"1800-01-01T00:00:00Z\"^^xsd:dateTime ||
         ?death < \"1900-01-01T00:00:00Z\"^^xsd:dateTime &&
         ?death >= \"1800-01-01T00:00:00Z\"^^xsd:dateTime) #OR filter
  bind(?death-?birth as ?age)  
}""";
  schema:target <https://query.wikidata.org/sparql> .
