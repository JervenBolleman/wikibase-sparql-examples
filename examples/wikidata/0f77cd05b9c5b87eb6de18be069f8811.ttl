@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-0f77cd05b9c5b87eb6de18be069f8811> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2020/06>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "however I have two issues here: Finally I have some issues to display the images on the graph nodes, often I just see empty nodes, it seems to work sometimes but not reliably - does somebody know what is going on? can I make the graph view default to \"hierarchical layout top-down\" instead of the non-hierarchical layout that is currently chosen by default?  but I would much prefer to only write wdt:P177 wd:Q14339 (all bridges that cross my river of interest). This is because I may not know the start/end point in advance. Is that possible or do I *need* to specify the starting point? Eg is it possible to have the engine choose an arbitrary starting point and then walk bi-directionally? [It may be possible to formulate a sub-query to \"walk to the end\" and then once the end point is found, use that in the real query as start point](Q96108174)Chlostobelstrasse-Brücke this requires me to know the starting point (here let me know if you have any other improvements/ideas  ]reply[21:02, 9 June 2020 (UTC)) talk (Hannes RöstBest --]reply[13:27, 10 June 2020 (UTC)) talk (Hannes Röst) so this will not always work unless the river is one that goes all the way up to the source. Of course one could argue that the relationship upstream/downstream should not be set since these are rivers with different names but in the general usage of the term the one bridge would still be downstream from the other. --(Q69099248)Säntisthur  and (Q89288705)Wildhauser Thur Thanks for the suggestion, this may indeed work under some circumstances but not always since the last bridge on the river Thur is still downstream from other bridges of the two river that flow together to make the river Thur ( ]reply[08:13, 10 June 2020 (UTC)) talk (Dipsacus fullonum wasn't used). But that wouldn't help with the GAS program because GAS programs cannot have variables as input, only constants. Another point is that there are 14 bridges which crosses Thur without statements for P2673 and P2674. Where would you place them in the graph? --novalue special value for P2673 (or maybe without any statement for P2673 at all if novalue you could find the most upstream bridge as the only one with a (P2674)next crossing downstream  and (P2673)next crossing upstream . If all bridges which crosses Thur had statements for Hannes RöstHi ]reply[08:24, 10 June 2020 (UTC) Jura could be set? --- (P6710)linear reference Maybe  What’s wrong with"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
#All bridges on Thur with upstream/downstream bridge
#defaultView:Graph
PREFIX gas: <http://www.bigdata.com/rdf/gas#>
SELECT ?item ?itemLabel ?linkTo ?pic ?depth
WHERE 
{
  OPTIONAL { ?item wdt:P2674 ?linkTo }
  OPTIONAL { ?item wdt:P18 ?pic }
  ?item wdt:P177 wd:Q14339 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """#All bridges on Thur with upstream/downstream bridge
#defaultView:Graph
PREFIX gas: <http://www.bigdata.com/rdf/gas#>
SELECT ?item ?itemLabel ?linkTo ?pic ?depth
WHERE 
{
  OPTIONAL { ?item wdt:P2674 ?linkTo }
  OPTIONAL { ?item wdt:P18 ?pic }
  ?item wdt:P177 wd:Q14339 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
