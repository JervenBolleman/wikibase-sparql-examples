@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-36ac46d34ae0bb921187df8100be22bd> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:WikiFactMine/Core_SPARQL>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment """ICD9 handling, case of \"infectious and parasite diseases\". Output in three columns adapted to QuickStatement input.
SELECT DISTINCT ?item ?ms1 ?ms2
WHERE {
 ?item wdt:P31 wd:Q12136 .
  ?item wdt:P493 ?icd  .
  OPTIONAL { ?item wdt:P1995 ?dummy0 }
  FILTER(!bound(?dummy0))
  BIND(SUBSTR(?icd,1,3) AS ?icd1) #drop decimal point and anything after
  BIND(CONCAT(\"1\",?icd1) AS ?icd2) #add initial digit 1 to preserve initial zeroes
  BIND(xsd:integer(?icd2) AS ?icd3) # casting function to turn string to integer
  FILTER(1000 < ?icd3 && ?icd3 <1140)
  BIND(\"P1995\" AS ?ms1)
  BIND(\"Q788926\" AS ?ms2)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
      }"""@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
#ICD9 handling, case of \"infectious and parasite diseases\". Output in three columns adapted to QuickStatement input.
SELECT DISTINCT ?item ?ms1 ?ms2
WHERE {
 ?item wdt:P31 wd:Q12136 .
  ?item wdt:P493 ?icd  .
  OPTIONAL { ?item wdt:P1995 ?dummy0 }
  FILTER(!bound(?dummy0))
  BIND(SUBSTR(?icd,1,3) AS ?icd1) #drop decimal point and anything after
  BIND(CONCAT(\"1\",?icd1) AS ?icd2) #add initial digit 1 to preserve initial zeroes
  BIND(xsd:integer(?icd2) AS ?icd3) # casting function to turn string to integer
  FILTER(1000 < ?icd3 && ?icd3 <1140)
  BIND(\"P1995\" AS ?ms1)
  BIND(\"Q788926\" AS ?ms2)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
      }""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """#ICD9 handling, case of \"infectious and parasite diseases\". Output in three columns adapted to QuickStatement input.
SELECT DISTINCT ?item ?ms1 ?ms2
WHERE {
 ?item wdt:P31 wd:Q12136 .
  ?item wdt:P493 ?icd  .
  OPTIONAL { ?item wdt:P1995 ?dummy0 }
  FILTER(!bound(?dummy0))
  BIND(SUBSTR(?icd,1,3) AS ?icd1) #drop decimal point and anything after
  BIND(CONCAT(\"1\",?icd1) AS ?icd2) #add initial digit 1 to preserve initial zeroes
  BIND(xsd:integer(?icd2) AS ?icd3) # casting function to turn string to integer
  FILTER(1000 < ?icd3 && ?icd3 <1140)
  BIND(\"P1995\" AS ?ms1)
  BIND(\"Q788926\" AS ?ms2)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
      }""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
