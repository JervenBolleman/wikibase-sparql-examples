@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-cd9e0582d88645145e43be443272a4c2> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/pt-br>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Agora eu gostaria de apresentar mais um atalho do SPARQL. Mais um cenário hipotético aqui:  no Wikidata, que aponta de um pai/mãe para seus filhos e filhas e é independente de generos. Com essa informação, será que consegues escrever uma busca para encontrar os netos e netas de Bach? P:P40Suponha que a gente não ligue para os filhos de Bach. (Como bem pode ser o caso!) Estamos interessados em seus netos, na verdade. Há uma complicação aqui: um neto pode ter relacionado a Bach tanto por sua mãe quanto por seu pai. Isso são duas propriedades diferentes, o que é inconveniente. Em vez disso, vamos inverter a perspectiva: há também a propriedade Aqui a minha solução:"@pt-BR;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?neto ?netoLabel
WHERE
{
  wd:Q1339 wdt:P40 ?criança.
  ?criança wdt:P40 ?neto.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?neto ?netoLabel
WHERE
{
  wd:Q1339 wdt:P40 ?criança.
  ?criança wdt:P40 ?neto.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
