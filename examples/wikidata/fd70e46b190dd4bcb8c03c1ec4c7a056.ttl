@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-fd70e46b190dd4bcb8c03c1ec4c7a056> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Synia:actor>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX bd: <http://www.bigdata.com/rdf#>
#defaultView:Graph
PREFIX target: <http://www.wikidata.org/entity/Q294647>

SELECT DISTINCT
  ?actor1 ?actor1Label
  ?actor2 ?actor2Label
WHERE {
   {
  SELECT 
    (COUNT(?film) AS ?films)
    ?actor1
    ?actor2
  WHERE {
    ?film wdt:P161 target:, ?actor1, ?actor2 .
    FILTER (target: != ?actor1)
    FILTER (target: != ?actor2)
    FILTER (?actor1 != ?actor2)
  }
  GROUP BY ?actor1 ?actor2
  HAVING (?films > 1)
}  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """#defaultView:Graph
PREFIX target: <http://www.wikidata.org/entity/Q294647>

SELECT DISTINCT
  ?actor1 ?actor1Label
  ?actor2 ?actor2Label
WITH {
  SELECT 
    (COUNT(?film) AS ?films)
    ?actor1
    ?actor2
  WHERE {
    ?film wdt:P161 target:, ?actor1, ?actor2 .
    FILTER (target: != ?actor1)
    FILTER (target: != ?actor2)
    FILTER (?actor1 != ?actor2)
  }
  GROUP BY ?actor1 ?actor2
  HAVING (?films > 1)
} AS %actors
WHERE {
  INCLUDE %actors
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
