@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-21b2ee0c4b579bfde71212b0bdad1434> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2018/05>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdno: <http://www.wikidata.org/prop/novalue/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT DISTINCT ?item
  # we are looking for P4952=Q51139288 which are missing any of four PQs
  # a PQ of 'no value' is a valid PQ.
WHERE { 
       ?item p:P4952 ?statement.
       ?statement ps:P4952 wd:Q51139288.
       filter not exists {
       ?statement pq:P877 ?v877.
       ?statement pq:P993 ?v993.
       ?statement pq:P994 ?v994. 
       ?statement pq:P995 ?v995.}
  
  # Out of the above emerges a list of P4952=Q51139288 where there is one or more missing PQs.
  # However the filter treats a PQ value of 'no value' as the absence of a PQ.
  # So an item having the 4 PQs, but with one or more of 'no value', will appear in the results.
  # an item having the 4 PQs, but with one or more of 'no value' should not be listed.
  
  # the minus statements below were an attempt to deal with the 'no value' issue
  # but they'll exclude an item that has e.g. 3 PQs, one of which is 'no value'
 
  # I don't know how to make use of \"a wdno:P877\" so as to minus the item only where all four PQs are present.
  
  minus {?statement a wdno:P877.} #deal with value is \"no value\"
  minus {?statement a wdno:P993.}
  minus {?statement a wdno:P994.}
  minus {?statement a wdno:P995.}
       SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
      }""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT DISTINCT ?item
  # we are looking for P4952=Q51139288 which are missing any of four PQs
  # a PQ of 'no value' is a valid PQ.
WHERE { 
       ?item p:P4952 ?statement.
       ?statement ps:P4952 wd:Q51139288.
       filter not exists {
       ?statement pq:P877 ?v877.
       ?statement pq:P993 ?v993.
       ?statement pq:P994 ?v994. 
       ?statement pq:P995 ?v995.}
  
  # Out of the above emerges a list of P4952=Q51139288 where there is one or more missing PQs.
  # However the filter treats a PQ value of 'no value' as the absence of a PQ.
  # So an item having the 4 PQs, but with one or more of 'no value', will appear in the results.
  # an item having the 4 PQs, but with one or more of 'no value' should not be listed.
  
  # the minus statements below were an attempt to deal with the 'no value' issue
  # but they'll exclude an item that has e.g. 3 PQs, one of which is 'no value'
 
  # I don't know how to make use of \"a wdno:P877\" so as to minus the item only where all four PQs are present.
  
  minus {?statement a wdno:P877.} #deal with value is \"no value\"
  minus {?statement a wdno:P993.}
  minus {?statement a wdno:P994.}
  minus {?statement a wdno:P995.}
       SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
      }""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
