@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-080f50407b6399115919fa56ab963612> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2023/12>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "How to get top 100 categories available in most Wikipedias, but not created in a specific Wikipedia? 21:45, 11 December 2023 (UTC)) talk (Aram property, tracking and maintenance categories. Thanks! __HIDDENCAT__Hi, I wonder if we can get top 100 categories available on most Wikipedias, but still not created in a specific Wikipedia. Use Quarry (which I want this way if you can), API, SPARQL or any other way you prefer. If you can, add an optional condition to exclude those have  In SPARQL, something like this seems to work, without filtering for hiddencats, but I guess they usually donâ€™t get an item on Wikidata so this should not be a big issue : Aram@"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX schema: <http://schema.org/>
select ?item ?n {
  ?item wdt:P31 wd:Q4167836 .
  ?item wikibase:sitelinks ?n . 
  filter (?n > 90) 
  minus {
    ?cat schema:isPartOf <https://ja.wikipedia.org/> ;
         schema:about ?item .
  }
} order by desc (?n)""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """select ?item ?n {
  ?item wdt:P31 wd:Q4167836 .
  ?item wikibase:sitelinks ?n . hint:Prior hint:rangeSafe \"true\" .
  filter (?n > 90) 
  minus {
    ?cat schema:isPartOf <https://ja.wikipedia.org/> ;
         schema:about ?item .
  }
} order by desc (?n)""";
  schema:target <https://query.wikidata.org/sparql> .
