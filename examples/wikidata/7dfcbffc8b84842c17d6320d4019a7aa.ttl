@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-7dfcbffc8b84842c17d6320d4019a7aa> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User:SixTwoEight/Easy_anonymous_replacements>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT (REPLACE(STR(?item), \"http://www.wikidata.org/entity/\", \"\") as ?i) WHERE {
  ?item wdt:P98 wd:Q4233718.
  ?item p:P98 ?statement.
  ?statement ?qual ?qualValue.
  BIND(STR(?qual) as ?qualUri).
  BIND(IF(STRSTARTS(?qualUri, \"http://www.wikidata.org/prop/qualifier/\"), 1, 0) as ?badQual).
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?item
HAVING (SUM(?badQual) < 1)
LIMIT 1000""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT (REPLACE(STR(?item), \"http://www.wikidata.org/entity/\", \"\") as ?i) WHERE {
  ?item wdt:P98 wd:Q4233718.
  ?item p:P98 ?statement.
  ?statement ?qual ?qualValue.
  BIND(STR(?qual) as ?qualUri).
  BIND(IF(STRSTARTS(?qualUri, \"http://www.wikidata.org/prop/qualifier/\"), 1, 0) as ?badQual).
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?item
HAVING (SUM(?badQual) < 1)
LIMIT 1000""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
