@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-5fa24ede1c483d915ae37408db30a929> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User:TweetsFactsAndQueries/Darwin%C3%ADs_Fox>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "because pywikibot’s SPARQL iterator looks for that particular variable name. ?item variable to ?taxonThis query already shows the fixed taxon name by replacing the two broken characters. We don’t need that here, since we’ll do the replacing in Python. We also need to change the"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wdt: <http://www.wikidata.org/prop/direct/>
SELECT ?item
WHERE
{
  ?item wdt:P1843 ?commonName.
  FILTER(CONTAINS(?commonName, \"í\") && CONTAINS(?commonName, \" \")).
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?item
WHERE
{
  ?item wdt:P1843 ?commonName.
  FILTER(CONTAINS(?commonName, \"í\") && CONTAINS(?commonName, \" \")).
}""";
  schema:target <https://query.wikidata.org/sparql> .
