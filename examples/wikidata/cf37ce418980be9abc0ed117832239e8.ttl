@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-cf37ce418980be9abc0ed117832239e8> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2019/06>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Improve sorting of coordinates 21:51, 27 June 2019 (UTC)) talk (Bouzinac has the behaviour to sort numbers alphabetically. Is there a way to improve the sorting, so that really close elements are together ? ORDER BY ?coordHello This query has to export all airports that are in the USA. Sadly, there are many duplicates. I'd like to improve the sort of this query (that would help find duplicates) The current"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX psv: <http://www.wikidata.org/prop/statement/value/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX geof: <http://www.opengis.net/def/function/geosparql/>
PREFIX bd: <http://www.bigdata.com/rdf#>
PREFIX wdno: <http://www.wikidata.org/prop/novalue/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?locLabel ?airport ?airportLabel ?coord ?long ?lat ?ICAO ?IATA ?Local_Code ?dist
{
  {
  SELECT DISTINCT ?loc ?airport (SAMPLE(?_coord) AS ?coord) (SAMPLE(?_long) AS ?long) (SAMPLE(?_lat) AS ?lat) ?ICAO ?IATA (SAMPLE(?Local_Code) AS ?Local_Code)
  {
    ?airport wdt:P31/(wdt:P279*) wd:Q62447;
      wdt:P17 wd:Q30.
    MINUS { ?airport wdt:P576 _:b2. }
    MINUS { ?airport wdt:P582 _:b3. }
    MINUS { ?airport wdt:P31/(wdt:P279*) wd:Q1311670. }
    MINUS { ?airport wdt:P31/(wdt:P279*) wd:Q7373622. }
    MINUS { ?airport wdt:P31/(wdt:P279*) wd:Q2265915. }
    MINUS { ?airport wdt:P31/(wdt:P279*) wd:Q44665966. }
    MINUS { ?airport wdt:P31/(wdt:P279*) wd:Q782667. }
    MINUS { ?airport rdf:type wdno:P17. }
    OPTIONAL {
      ?airport p:P625 [
        a wikibase:BestRank; ps:P625 ?_coord;
        psv:P625 [ wikibase:geoLongitude ?_long; wikibase:geoLatitude ?_lat ]
      ] .
    } .
    OPTIONAL { ?airport wdt:P239 ?ICAO. }
    OPTIONAL { ?airport wdt:P238 ?IATA. }
    OPTIONAL { ?airport wdt:P240 ?Local_Code. }
    OPTIONAL {
      ?airport wdt:P131* ?loc.
      ?loc wdt:P31 ?type.
      ?type (wdt:P279*) wd:Q35657.
    } .
  } GROUP BY ?loc ?airport ?ICAO ?IATA
  } .
  wd:Q934 wdt:P625 ?pole .
  BIND( geof:distance( ?pole, ?coord ) AS ?dist ) .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,fr,[AUTO_LANGUAGE]\". }
}
ORDER BY ?dist
#ORDER BY ?long ?lat""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """PREFIX wdno: <http://www.wikidata.org/prop/novalue/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

SELECT DISTINCT ?locLabel ?airport ?airportLabel ?coord ?long ?lat ?ICAO ?IATA ?Local_Code ?dist
{
  {
  SELECT DISTINCT ?loc ?airport (SAMPLE(?_coord) AS ?coord) (SAMPLE(?_long) AS ?long) (SAMPLE(?_lat) AS ?lat) ?ICAO ?IATA (SAMPLE(?Local_Code) AS ?Local_Code)
  {
    ?airport wdt:P31/(wdt:P279*) wd:Q62447;
      wdt:P17 wd:Q30.
    MINUS { ?airport wdt:P576 _:b2. }
    MINUS { ?airport wdt:P582 _:b3. }
    MINUS { ?airport wdt:P31/(wdt:P279*) wd:Q1311670. }
    MINUS { ?airport wdt:P31/(wdt:P279*) wd:Q7373622. }
    MINUS { ?airport wdt:P31/(wdt:P279*) wd:Q2265915. }
    MINUS { ?airport wdt:P31/(wdt:P279*) wd:Q44665966. }
    MINUS { ?airport wdt:P31/(wdt:P279*) wd:Q782667. }
    MINUS { ?airport rdf:type wdno:P17. }
    OPTIONAL {
      ?airport p:P625 [
        a wikibase:BestRank; ps:P625 ?_coord;
        psv:P625 [ wikibase:geoLongitude ?_long; wikibase:geoLatitude ?_lat ]
      ] .
    } .
    OPTIONAL { ?airport wdt:P239 ?ICAO. }
    OPTIONAL { ?airport wdt:P238 ?IATA. }
    OPTIONAL { ?airport wdt:P240 ?Local_Code. }
    OPTIONAL {
      ?airport wdt:P131* ?loc.
      ?loc wdt:P31 ?type.
      ?type (wdt:P279*) wd:Q35657.
    } .
  } GROUP BY ?loc ?airport ?ICAO ?IATA
  } .
  wd:Q934 wdt:P625 ?pole .
  BIND( geof:distance( ?pole, ?coord ) AS ?dist ) .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,fr,[AUTO_LANGUAGE]\". }
}
ORDER BY ?dist
#ORDER BY ?long ?lat""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
