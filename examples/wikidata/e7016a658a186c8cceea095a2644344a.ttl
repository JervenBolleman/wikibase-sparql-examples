@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-e7016a658a186c8cceea095a2644344a> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2023/03>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX bd: <http://www.bigdata.com/rdf#>
select ?uno ?unoLabel ?item ?itemLabel ?duos ?count
where {
  {
    select ?uno ?item
      (group_concat(distinct substr(str(?duo), 32); separator=\"; \") as ?duos)
      (count(distinct *) as ?count)
    where {
       {
  select ?uno ?duo ?duo_st where {
    ?uno p:P2738 ?duo_st .
    ?duo_st a wikibase:BestRank .
    ?duo_st ps:P2738 wd:Q23766486 .
    ?duo_st pq:P11260 ?duo .
  }
}      ?item wdt:P279 ?duo . # First order subclasses only
      #?item wdt:P279/wdt:P279? ?duo . # To include second order subclasses, uncomment this line and comment out the preceding line
    }
    group by ?uno ?duo_st ?item
    having (?count > 1)
    #limit 1000
  }
  service wikibase:label { bd:serviceParam wikibase:language \"en\" . }
}
order by desc(?count)""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """select ?uno ?unoLabel ?item ?itemLabel ?duos ?count
with {
  select ?uno ?duo ?duo_st where {
    ?uno p:P2738 ?duo_st .
    ?duo_st a wikibase:BestRank .
    ?duo_st ps:P2738 wd:Q23766486 .
    ?duo_st pq:P11260 ?duo .
  }
} as %du
where {
  {
    select ?uno ?item
      (group_concat(distinct substr(str(?duo), 32); separator=\"; \") as ?duos)
      (count(distinct *) as ?count)
    where {
      include %du
      ?item wdt:P279 ?duo . # First order subclasses only
      #?item wdt:P279/wdt:P279? ?duo . # To include second order subclasses, uncomment this line and comment out the preceding line
    }
    group by ?uno ?duo_st ?item
    having (?count > 1)
    #limit 1000
  }
  service wikibase:label { bd:serviceParam wikibase:language \"en\" . }
}
order by desc(?count)""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
