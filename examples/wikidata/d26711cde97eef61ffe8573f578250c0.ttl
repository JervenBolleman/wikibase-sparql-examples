@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-d26711cde97eef61ffe8573f578250c0> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2021/01>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "16:23, 1 January 2021 (UTC)) talk (Herzi Pinki (which I really want). Any hints on how to improve the performance? --(Q3391743)visual artist  to (Q21148249)enameler It works for small sets of matches, but runs into timeout when e.g. changing from  about the date queries.Wikidata:Request_a_query/Archive/2020/11#publications_from_a_particular_year_and_placeSee 20:18, 1 January 2021 (UTC)) talk (Herzi PinkiI was thinking that '&& regex(?firstnameLabel, ?firstnamePattern, \"i\") && regex(?lastnameLabel, ?lastnamePattern, \"i\")' will only evaluate the second condition, if and only if the first one evaluates to true. Is this correct (like in C)? -- ? This will be an ever growing problem as more and more data get put into wikidata.Wikidata does not scale wellYour last statement says:  18:52, 1 January 2021 (UTC)) talk (Dipsacus fullonum because there are too many (around 423900 distinct items) of these. --(Q3391743)visual artist : I would first filter for the least common initial in a new named subquery, and then for the other initial in another new named subquery, and then for the other conditions (years) in other subqueries. The goal would be to reduce the result set as fast as possible so you can avoid using time to process the last name and compare with the last name initial if first name doesn't match the first name initial, or inverse, and so on. But I doubt that timeout can be avoided even with the best possible optimization for Herzi Pinki@ 17:39, 1 January 2021 (UTC) Jura . --- hint:Prior hint:gearing \"forward\".After \"?item wdt:P106/wdt:P279* wd:Q21148249\" you might want to add  20:18, 1 January 2021 (UTC)) talk (Herzi PinkiThere is a tradeoff with artists still living. Who will not have a date of death. But date of birth should be optional too. --Possibly, year of death is more frequently available than date of birth. Some artists also have only work period specified.  20:18, 1 January 2021 (UTC)) talk (Herzi Pinkicommenting out '?firstname rdfs:label ?firstnameLabel' and the following (as ?firstnameLabel is predefined anyway), will be fast, but not return any result. I do not understand why this makes a difference, but it obviously does. --Instead of rdfs:label for the name, you might want to use the native label statement. : Herzi Pinki@"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
SELECT (COUNT(*) as ?count) 
{
    ?item wdt:P569 ?d1 ; wdt:P570 ?d2 . 
    
    FILTER( ?d1 < \"1670-00-00\"^^xsd:date
            && ?d2 > \"1671-00-00\"^^xsd:date )
    ?item wdt:P735 / wdt:P1705 ?nl0 . FILTER( REGEX(?nl0, \"^J\" ) )
    ?item wdt:P734 / wdt:P1705 ?nl1 . FILTER( REGEX(?nl1, \"^B\" ) )
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT (COUNT(*) as ?count) 
{
    ?item wdt:P569 ?d1 ; wdt:P570 ?d2 . 
    hint:Prior hint:rangeSafe true .
    FILTER( ?d1 < \"1670-00-00\"^^xsd:dateTime
            && ?d2 > \"1671-00-00\"^^xsd:dateTime )
    ?item wdt:P735 / wdt:P1705 ?nl0 . FILTER( REGEX(?nl0, \"^J\" ) )
    ?item wdt:P734 / wdt:P1705 ?nl1 . FILTER( REGEX(?nl1, \"^B\" ) )
}""";
  schema:target <https://query.wikidata.org/sparql> .
