@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-f47ed0ac3ff8af1d49f1d972dafbd637> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2022/06>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX mwapi: <http://wikiba.se/ontology#>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX schema: <http://schema.org/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?item ?title ?begin ?begin2 WHERE {
  BIND(wd:Q42 AS ?item)
  ?item wdt:P18 ?image.
  #BIND(STRAFTER(wikibase:decodeUri(STR(?image)), \"http://commons.wikimedia.org/wiki/Special:FilePath/\") AS ?fileTitle)
  ?article schema:isPartOf <https://fr.wikipedia.org/> ;
           schema:about ?item ;
           schema:name ?title. 
  bind (substr(?content, 1, 2000) as ?begin)
  bind (strbefore(?content, \". \") as ?begin2)
  
  SERVICE wikibase:mwapi {
    bd:serviceParam wikibase:endpoint \"fr.wikipedia.org\";
                    wikibase:api \"Generator\";
                    wikibase:limit \"once\";
                    mwapi:generator \"allpages\";
                    mwapi:gapfrom ?title;
                    # mwapi:gapnamespace 6; # NS_FILE
                    mwapi:gaplimit 1;
                    mwapi:prop \"revisions\";
                    mwapi:rvprop \"content\".
    #?contentmodel wikibase:apiOutput 'revisions/rev/@contentmodel'.
    #?contentformat wikibase:apiOutput 'revisions/rev/@contentformat'.
    ?content wikibase:apiOutput 'revisions/rev/text()' .
  }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?item ?title ?begin ?begin2 WHERE {
  BIND(wd:Q42 AS ?item)
  ?item wdt:P18 ?image.
  #BIND(STRAFTER(wikibase:decodeUri(STR(?image)), \"http://commons.wikimedia.org/wiki/Special:FilePath/\") AS ?fileTitle)
  ?article schema:isPartOf <https://fr.wikipedia.org/> ;
           schema:about ?item ;
           schema:name ?title. 
  bind (substr(?content, 1, 2000) as ?begin)
  bind (strbefore(?content, \". \") as ?begin2)
  
  SERVICE wikibase:mwapi {
    bd:serviceParam wikibase:endpoint \"fr.wikipedia.org\";
                    wikibase:api \"Generator\";
                    wikibase:limit \"once\";
                    mwapi:generator \"allpages\";
                    mwapi:gapfrom ?title;
                    # mwapi:gapnamespace 6; # NS_FILE
                    mwapi:gaplimit 1;
                    mwapi:prop \"revisions\";
                    mwapi:rvprop \"content\".
    #?contentmodel wikibase:apiOutput 'revisions/rev/@contentmodel'.
    #?contentformat wikibase:apiOutput 'revisions/rev/@contentformat'.
    ?content wikibase:apiOutput 'revisions/rev/text()' .
  }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#mwapi>;
  schema:target <https://query.wikidata.org/sparql> .
