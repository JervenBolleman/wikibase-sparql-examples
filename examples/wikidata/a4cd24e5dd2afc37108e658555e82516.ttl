@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-a4cd24e5dd2afc37108e658555e82516> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata_talk:SPARQL_query_service/queries>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Query all paintingsHi, i'm currently working on an open source university project. We query different datasets from wikidata about art. In our ETL process we get the data we want with help of the pywikibot libary (currently only from wikidata). This libary loads the wikidata sites by their qId's which we query beforehand. For the result set of around 150.000 entries this process takes very long time (47 hours) and my idea to improve it was to write a query which returns all rows and columns we want at once. I wrote this query:"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT
?artwork
(CONCAT('[', GROUP_CONCAT(DISTINCT ?class;SEPARATOR=', '), ']') as ?classes)
?artworkLabel
?artworkDescription
?image
(CONCAT('[',GROUP_CONCAT(DISTINCT ?creator;SEPARATOR=', '), ']') as ?creators)
(CONCAT('[',GROUP_CONCAT(DISTINCT ?location;SEPARATOR=', '), ']') as ?locations)
(CONCAT('[',GROUP_CONCAT(DISTINCT ?genre;SEPARATOR=', '), ']') as ?genres)
(CONCAT('[',GROUP_CONCAT(DISTINCT ?movement;SEPARATOR=', '), ']') as ?movements)
(YEAR(xsd:dateTime(?inception)) AS ?inceptionYear)
(CONCAT('[',GROUP_CONCAT(DISTINCT ?material;SEPARATOR=', '), ']') as ?materials)
(CONCAT('[',GROUP_CONCAT(DISTINCT ?depicts;SEPARATOR=', '), ']') as ?depictions)
?countryLabel 
?height 
?width 
WHERE {
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }
  ?class (wdt:P279*) wd:Q3305213 .
  ?artwork wdt:P31 ?class ;
    wdt:P170 ?creator ;
    wdt:P18 ?image .
  OPTIONAL { ?artwork  wdt:P276 ?location . }
  OPTIONAL { ?artwork wdt:P136 ?genre . }
  OPTIONAL { ?artwork wdt:P135 ?movement . }
  OPTIONAL { ?artwork wdt:P571 ?inception . }
  OPTIONAL { ?artwork wdt:P186 ?material . }
  OPTIONAL { ?artwork wdt:P180 ?depicts . }
  OPTIONAL { ?artwork wdt:P17 ?country . }
  OPTIONAL { ?artwork wdt:P2048 ?height . }
  OPTIONAL { ?artwork wdt:P2049 ?width . }
} GROUP BY ?artwork ?artworkLabel ?artworkDescription ?image ?inception ?countryLabel ?height ?width""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT
?artwork
(CONCAT('[', GROUP_CONCAT(DISTINCT ?class;SEPARATOR=', '), ']') as ?classes)
?artworkLabel
?artworkDescription
?image
(CONCAT('[',GROUP_CONCAT(DISTINCT ?creator;SEPARATOR=', '), ']') as ?creators)
(CONCAT('[',GROUP_CONCAT(DISTINCT ?location;SEPARATOR=', '), ']') as ?locations)
(CONCAT('[',GROUP_CONCAT(DISTINCT ?genre;SEPARATOR=', '), ']') as ?genres)
(CONCAT('[',GROUP_CONCAT(DISTINCT ?movement;SEPARATOR=', '), ']') as ?movements)
(YEAR(xsd:dateTime(?inception)) AS ?inceptionYear)
(CONCAT('[',GROUP_CONCAT(DISTINCT ?material;SEPARATOR=', '), ']') as ?materials)
(CONCAT('[',GROUP_CONCAT(DISTINCT ?depicts;SEPARATOR=', '), ']') as ?depictions)
?countryLabel 
?height 
?width 
WHERE {
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" . }
  ?class (wdt:P279*) wd:Q3305213 .
  ?artwork wdt:P31 ?class ;
    wdt:P170 ?creator ;
    wdt:P18 ?image .
  OPTIONAL { ?artwork  wdt:P276 ?location . }
  OPTIONAL { ?artwork wdt:P136 ?genre . }
  OPTIONAL { ?artwork wdt:P135 ?movement . }
  OPTIONAL { ?artwork wdt:P571 ?inception . }
  OPTIONAL { ?artwork wdt:P186 ?material . }
  OPTIONAL { ?artwork wdt:P180 ?depicts . }
  OPTIONAL { ?artwork wdt:P17 ?country . }
  OPTIONAL { ?artwork wdt:P2048 ?height . }
  OPTIONAL { ?artwork wdt:P2049 ?width . }
} GROUP BY ?artwork ?artworkLabel ?artworkDescription ?image ?inception ?countryLabel ?height ?width""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
