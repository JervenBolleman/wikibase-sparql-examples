@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-79d0bb402c59b0932c59f8008d791725> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2024/05>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "14:03, 4 May 2024 (UTC)) talk (ShismaIn both cases I'm only looking url statements that point to these urls. can I make both queries fast while yielding the same results? –sounds reasonable since this query is much faster 15:21, 4 May 2024 (UTC)) talk (InfrastrukturI think it matches the basic graph pattern ?s schema:isPartOf <https://en.wikipedia.org/> that the sitelinks use.  15:13, 4 May 2024 (UTC)) talk (Shismainteresting. the hint, makes the second query faster, but the first query becomes slower. since I'm generating these queries programmaticaly I would need a heuristic to decide whether the hint should be present or not. why does the second query it start with a set of 9.8M items in the first place? I assume there aren't 9.8M statements with these urls… are there? –  14:58, 4 May 2024 (UTC)) talk (InfrastrukturSome times the optimizer makes bad guesses about which order to do things. It's been said that starting with small sets gives good performance, but really what you want is to keep the size of the intermediate joins small throughout the query and especially at the start. Here it will run things in order of appearance. For your first query it will start with a set of 2 items and combine with a set of 11K items, where on the second query it will start with a set of 9.8M items, then it will combine this with a second set of 11K items. To fix the second query you can replace the last line with \"?property wikibase:directClaim ?predicate. hint:Prior hint:runFirst true .\"."@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
SELECT ?url ?item WHERE {
  VALUES ?url {
    <https://en.wikipedia.org/wiki/Double_bond>
    <https://en.wikipedia.org/wiki/Double_bond/>
    <http://en.wikipedia.org/wiki/Double_bond>
    <http://en.wikipedia.org/wiki/Double_bond/>
    #<https://en.wikipedia.org/>
    <http://en.wikipedia.org/>
    <https://en.wikipedia.org>
    <http://en.wikipedia.org>
  }
  ?item ?predicate ?url.
  ?property wikibase:directClaim ?predicate.
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?url ?item WHERE {
  VALUES ?url {
    <https://en.wikipedia.org/wiki/Double_bond>
    <https://en.wikipedia.org/wiki/Double_bond/>
    <http://en.wikipedia.org/wiki/Double_bond>
    <http://en.wikipedia.org/wiki/Double_bond/>
    #<https://en.wikipedia.org/>
    <http://en.wikipedia.org/>
    <https://en.wikipedia.org>
    <http://en.wikipedia.org>
  }
  ?item ?predicate ?url.
  ?property wikibase:directClaim ?predicate.
}""";
  schema:target <https://query.wikidata.org/sparql> .
