@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-d7a2232af9c759309dacca7e09d1022b> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User:TweetsFactsAndQueries/Queries/Swiss_items_with_article_in_exactly_one_of_German-,_French-,_Italian-,_and_Romansh-language_Wikipedias>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment ".on TwitterOriginally posted"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX schema: <http://schema.org/>
PREFIX psv: <http://www.wikidata.org/prop/statement/value/>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX geof: <http://www.opengis.net/def/function/geosparql/>
#defaultView:Map
SELECT ?item (SAMPLE(?title) AS ?itemLabel) (SAMPLE(?location) AS ?location) (SAMPLE(?language) AS ?layer) WHERE {
  VALUES ?wiki { <https://de.wikipedia.org/> <https://fr.wikipedia.org/> <https://it.wikipedia.org/> <https://rm.wikipedia.org/> }
  ?item wdt:P17 wd:Q39;
        wdt:P625 ?location.
  ?article a schema:Article;
           schema:about ?item;
           schema:isPartOf ?wiki;
           schema:inLanguage ?language;
           schema:name ?title.
  # filter out some stray results that have country Switzerland but coordinates outside it (e. g. rivers)
   {
  SELECT * WHERE {
    wd:Q39 p:P1332/psv:P1332/wikibase:geoLatitude ?n;
           p:P1333/psv:P1333/wikibase:geoLatitude ?s;
           p:P1334/psv:P1334/wikibase:geoLongitude ?e;
           p:P1335/psv:P1335/wikibase:geoLongitude ?w.
  }
}
  BIND(geof:latitude(?location) AS ?lat)
  BIND(geof:longitude(?location) AS ?lon)
  FILTER(?s <= ?lat && ?lat <= ?n &&
         ?w <= ?lon && ?lon <= ?e)
}
GROUP BY ?item
HAVING(COUNT(DISTINCT ?wiki) = 1)""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """#defaultView:Map
SELECT ?item (SAMPLE(?title) AS ?itemLabel) (SAMPLE(?location) AS ?location) (SAMPLE(?language) AS ?layer) WITH {
  SELECT * WHERE {
    wd:Q39 p:P1332/psv:P1332/wikibase:geoLatitude ?n;
           p:P1333/psv:P1333/wikibase:geoLatitude ?s;
           p:P1334/psv:P1334/wikibase:geoLongitude ?e;
           p:P1335/psv:P1335/wikibase:geoLongitude ?w.
  }
} AS %switzerlandBoundingBox WHERE {
  VALUES ?wiki { <https://de.wikipedia.org/> <https://fr.wikipedia.org/> <https://it.wikipedia.org/> <https://rm.wikipedia.org/> }
  ?item wdt:P17 wd:Q39;
        wdt:P625 ?location.
  ?article a schema:Article;
           schema:about ?item;
           schema:isPartOf ?wiki;
           schema:inLanguage ?language;
           schema:name ?title.
  # filter out some stray results that have country Switzerland but coordinates outside it (e. g. rivers)
  INCLUDE %switzerlandBoundingBox.
  BIND(geof:latitude(?location) AS ?lat)
  BIND(geof:longitude(?location) AS ?lon)
  FILTER(?s <= ?lat && ?lat <= ?n &&
         ?w <= ?lon && ?lon <= ?e)
}
GROUP BY ?item
HAVING(COUNT(DISTINCT ?wiki) = 1)""";
  schema:target <https://query.wikidata.org/sparql> .
