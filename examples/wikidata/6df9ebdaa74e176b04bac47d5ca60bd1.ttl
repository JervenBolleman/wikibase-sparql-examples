@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-6df9ebdaa74e176b04bac47d5ca60bd1> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata_talk:Entity_Explosion>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Dropdown URL matcherI'm working on improving the dropdown URL matcher. I'll put the improved draft here in case others want to help. Feel free to test against URLs that don't get matched (just place the one you care about in one of the VALUES brackets)."@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT DISTINCT ?iri ?prop ?propLabel ?id_uncut ?id ?lcid ?regex ?item ?itemLabel ?test_url ?formatter_url WHERE {
  
  VALUES ( ?test_url0 ) { 
            ( \"http://plantnet.rbgsyd.nsw.gov.au/cgi-bin/NSWfl.pl?page=nswfl&lvl=sp&name=Hibbertia~spanantha\" )
            ( \"https://www.lions.com.au/players/7\" )
            ( \"https://reiseauskunft.bahn.de/bin/bhftafel.exe/en?input=8400285&boardType=dep&time=actual&productsDefault=1111101&start=yes\" )
            ( \"https://www.inaturalist.org/taxa/47582-Ostreidae\" )
            ( \"https://twitter.com/BarackObama\" )
  }
  BIND( IRI(?test_url0) AS ?iri ).
  {?prop p:P1630/ps:P1630 ?formatter_url0 .}
  UNION
  {?prop p:P3303/ps:P3303 ?formatter_url0 .}
  
  BIND (REPLACE(?test_url0,\"^https://\",\"\") AS ?test_url1)
  BIND (REPLACE(?test_url1,\"^http://\",\"\") AS ?test_url2)
  BIND (REPLACE(?test_url2,\"^www.\",\"\") AS ?test_url)
  BIND (REPLACE(?formatter_url0,\"^https://\",\"\") AS ?formatter_url1)
  BIND (REPLACE(?formatter_url1,\"^http://\",\"\") AS ?formatter_url2)
  BIND (REPLACE(?formatter_url2,\"^www.\",\"\") AS ?formatter_url)
  
  FILTER (CONTAINS( ?formatter_url, \"$1\" ) ) 
  BIND (STRBEFORE( ?formatter_url, \"$1\" ) AS ?f_url_start )
  BIND (STRAFTER( ?formatter_url, \"$1\" ) AS ?f_url_end )
  FILTER(STRSTARTS( ?test_url, ?f_url_start ))
  FILTER(STRENDS( ?test_url, ?f_url_end ))
  BIND ( SUBSTR( ?test_url, 1+STRLEN(?f_url_start), STRLEN(?test_url)-STRLEN(?f_url_start)-STRLEN(?f_url_end) ) AS ?id_uncut)
  ?prop p:P1793/ps:P1793 ?regex .
  BIND ( REPLACE (?id_uncut, CONCAT(\"(\",?regex,\").*\"),\"$1\",\"i\") AS ?id )
  BIND ( LCASE(?id) AS ?lcid)
  ?prop wikibase:directClaim ?propRel .
  {?item ?propRel ?id .}
  UNION
  {?item ?propRel ?lcid .}
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" } .
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT DISTINCT ?iri ?prop ?propLabel ?id_uncut ?id ?lcid ?regex ?item ?itemLabel ?test_url ?formatter_url WHERE {
  hint:Query hint:optimizer \"None\".
  VALUES ( ?test_url0 ) { 
            ( \"http://plantnet.rbgsyd.nsw.gov.au/cgi-bin/NSWfl.pl?page=nswfl&lvl=sp&name=Hibbertia~spanantha\" )
            ( \"https://www.lions.com.au/players/7\" )
            ( \"https://reiseauskunft.bahn.de/bin/bhftafel.exe/en?input=8400285&boardType=dep&time=actual&productsDefault=1111101&start=yes\" )
            ( \"https://www.inaturalist.org/taxa/47582-Ostreidae\" )
            ( \"https://twitter.com/BarackObama\" )
  }
  BIND( IRI(?test_url0) AS ?iri ).
  {?prop p:P1630/ps:P1630 ?formatter_url0 .}
  UNION
  {?prop p:P3303/ps:P3303 ?formatter_url0 .}
  
  BIND (REPLACE(?test_url0,\"^https://\",\"\") AS ?test_url1)
  BIND (REPLACE(?test_url1,\"^http://\",\"\") AS ?test_url2)
  BIND (REPLACE(?test_url2,\"^www.\",\"\") AS ?test_url)
  BIND (REPLACE(?formatter_url0,\"^https://\",\"\") AS ?formatter_url1)
  BIND (REPLACE(?formatter_url1,\"^http://\",\"\") AS ?formatter_url2)
  BIND (REPLACE(?formatter_url2,\"^www.\",\"\") AS ?formatter_url)
  
  FILTER (CONTAINS( ?formatter_url, \"$1\" ) ) 
  BIND (STRBEFORE( ?formatter_url, \"$1\" ) AS ?f_url_start )
  BIND (STRAFTER( ?formatter_url, \"$1\" ) AS ?f_url_end )
  FILTER(STRSTARTS( ?test_url, ?f_url_start ))
  FILTER(STRENDS( ?test_url, ?f_url_end ))
  BIND ( SUBSTR( ?test_url, 1+STRLEN(?f_url_start), STRLEN(?test_url)-STRLEN(?f_url_start)-STRLEN(?f_url_end) ) AS ?id_uncut)
  ?prop p:P1793/ps:P1793 ?regex .
  BIND ( REPLACE (?id_uncut, CONCAT(\"(\",?regex,\").*\"),\"$1\",\"i\") AS ?id )
  BIND ( LCASE(?id) AS ?lcid)
  ?prop wikibase:directClaim ?propRel .
  {?item ?propRel ?id .}
  UNION
  {?item ?propRel ?lcid .}
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" } .
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
