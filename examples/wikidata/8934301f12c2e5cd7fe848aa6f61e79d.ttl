@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-8934301f12c2e5cd7fe848aa6f61e79d> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User:Glrx>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Actors and their films). (P444)review score , (Q11424)film ) and great movies ((P161)cast member Actors ((Q95089)Ginger Rogers  (Q100937)Fred Astaire  (Q484881)Peter Falk  (Q440206)Honeysuckle Weeks  (Q589894)Ninotchka  (Q246656)Grand Hotel  (Q5443)Greta Garbo  (Q42786)Audrey Hepburn  (Q56016)Katharine Hepburn  (Q71206)Bette Davis  (Q94123)Jack Lemmon  (Q43203)Clint Eastwood  (Q172241)The Shawshank Redemption  (Q48337)Morgan Freeman  (Q23844)George Clooney  (Q103876)Peter O'Toole  (Q39792)Jack Nicholson  (Q159347)Steve McQueen  (Q103894)Alec Guinness  (Q81328)Harrison Ford  (Q95002)William Holden  (Q40531)John Wayne  (Q83410)Cary Grant  (Q251559)The Treasure of the Sierra Madre  (Q1137931)The Big Sleep  (Q132689)Casablanca  (Q16390)Humphrey Bogart  (Q71243)Clark Gable"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?actor ?actorLabel ?rankLabel ?film ?filmLabel ?score ?stmtScore
{ 
  # bind the actor
  BIND (wd:Q16390 AS ?actor) .

  # there is a film
  ?film wdt:P31/wdt:P279* wd:Q11424 .

  # film has actor as a cast member
  ?film wdt:P161 ?actor .
  
  # get the film review score statement
  ?film p:P444 ?stmtScore .
  ?stmtScore ps:P444 ?score .
  # by Rotten Tomatoes
  ?stmtScore pq:P447 wd:Q105584 .
  # determination method is tomato meter
  ?stmtScore pq:P459 wd:Q108403393 .
  
  # human instead of fictional
  ?actor wdt:P31 wd:Q5 .
  
  SERVICE wikibase:label {
     bd:serviceParam wikibase:language \"en\" .
  }
} ORDER BY ?score""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?actor ?actorLabel ?rankLabel ?film ?filmLabel ?score ?stmtScore
{ 
  # bind the actor
  BIND (wd:Q16390 AS ?actor) .

  # there is a film
  ?film wdt:P31/wdt:P279* wd:Q11424 .

  # film has actor as a cast member
  ?film wdt:P161 ?actor .
  
  # get the film review score statement
  ?film p:P444 ?stmtScore .
  ?stmtScore ps:P444 ?score .
  # by Rotten Tomatoes
  ?stmtScore pq:P447 wd:Q105584 .
  # determination method is tomato meter
  ?stmtScore pq:P459 wd:Q108403393 .
  
  # human instead of fictional
  ?actor wdt:P31 wd:Q5 .
  
  SERVICE wikibase:label {
     bd:serviceParam wikibase:language \"en\" .
  }
} ORDER BY ?score""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
