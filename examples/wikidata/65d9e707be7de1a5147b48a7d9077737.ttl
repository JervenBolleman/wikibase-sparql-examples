@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-65d9e707be7de1a5147b48a7d9077737> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/en>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/fr>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/hy>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/nl>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/pt>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/ru>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/uk>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/zh>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "The query optimiser may also be trying to defer testing the statement . This query looks like this: http://web.archive.org/web/20200904002919/http://www.lefigaro.fr/, it won't capture links like *.lefigaro.fr. Note, that this query is slightly different from original request: it returns links for domains matching MWAPI, which involves out-of the box solution\"). Luckily, there is an for presidents, but only Le Figaro (e. g. \"find all statements referenced to the there is no way to create quick \"native\" query without adding extra filters in Wikidata. As Blazegraph in current configuration does not perform full-text indexing for text values, more than 47000000 url references as for 2020, there are Update:"@en,
    "The query optimiser may also be trying to defer testing the statement  . Cette requête est similaire à : http://web.archive.org/web/20200904002919/http://www.lefigaro.fr/, elle ne ramène pas les liens du type *.lefigaro.fr. Notez-bien que cette requête est un peu différente de l'originale : elle renvoie des liens sur les domaines qui correspondent à MWAPI, qui utilise solution hors de la boîte  »). Heureusement, il existe une pour les présidents, mais seulement Le Figaro (par exemple « trouver toutes les déclarations qui ont rapport avec il n'est pas possible de créer des requêtes « natives  » rapides sans ajouter de filtre supplémentaire dans Wikidata. Comme Blazegraph dans la configuration actuelle ne réalise pas l'indexation en texte plein pour les valeurs textuelles, plus de 47000000 références d'URLs depuis 2020, il y a Mise à jour :"@fr,
    "The query optimiser may also be trying to defer testing the statement   . This query looks like this: http://web.archive.org/web/20200904002919/http://www.lefigaro.fr/, it won't capture links like *.lefigaro.fr. Note, that this query is slightly different from original request: it returns links for domains matching MWAPI, which involves out-of the box solution\"). Luckily, there is an for presidents, but only Le Figaro (e. g. \"find all statements referenced to the there is no way to create quick \"native\" query without adding extra filters in Wikidata. As Blazegraph in current configuration does not perform full-text indexing for text values, more than 47000000 url references as for 2020, there are Update:"@hy,
    "De optimizer kan ook proberen de test van de verklaring  vinden. Deze query ziet er zo uit: http://web.archive.org/web/20200904002919/http://www.lefigaro.fr/, het zal geen links zoals *.lefigaro.fr. NB deze query is iets anders dan het oorspronkelijke verzoek: het geeft links terug voor domeinen die overeenkomen met MWAPI die betrekking heeft op out-of-the-box oplossing (bijv. \"zoek alle verklaringen die naar de \"Le Figaro\" verwijzen, maar alleen \"voor presidenten\"). Gelukkig is er een is er geen manier om een snelle \"native\" query te maken zonder extra filters toe te voegen in Wikidata beschikbaar. Omdat Blazegraph in de huidige configuratie geen volledige tekstindexering voor tekstwaarden uitvoert, meer dan 47.000.000 url referenties in 2020 zijn er Update:"@nl,
    "TODO"@pt, "The query optimiser may also be trying to defer testing the statement   . This query looks like this: http://web.archive.org/web/20200904002919/http://www.lefigaro.fr/, it won't capture links like *.lefigaro.fr. Note, that this query is slightly different from original request: it returns links for domains matching MWAPI, which involves out-of the box solution\"). Luckily, there is an for presidents, but only Le Figaro (e. g. \"find all statements referenced to the there is no way to create quick \"native\" query without adding extra filters in Wikidata. As Blazegraph in current configuration does not perform full-text indexing for text values, more than 47000000 url references as for 2020, there are Update:"@ru,
    "The query optimiser may also be trying to defer testing the statement   . This query looks like this: http://web.archive.org/web/20200904002919/http://www.lefigaro.fr/, it won't capture links like *.lefigaro.fr. Note, that this query is slightly different from original request: it returns links for domains matching MWAPI, which involves out-of the box solution\"). Luckily, there is an for presidents, but only Le Figaro (e. g. \"find all statements referenced to the there is no way to create quick \"native\" query without adding extra filters in Wikidata. As Blazegraph in current configuration does not perform full-text indexing for text values, more than 47000000 url references as for 2020, there are Update:"@uk,
    "The query optimiser may also be trying to defer testing the statement   . This query looks like this: http://web.archive.org/web/20200904002919/http://www.lefigaro.fr/, it won't capture links like *.lefigaro.fr. Note, that this query is slightly different from original request: it returns links for domains matching MWAPI, which involves out-of the box solution\"). Luckily, there is an for presidents, but only Le Figaro (e. g. \"find all statements referenced to the there is no way to create quick \"native\" query without adding extra filters in Wikidata. As Blazegraph in current configuration does not perform full-text indexing for text values, more than 47000000 url references as for 2020, there are Update:"@zh;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX mwapi: <http://wikiba.se/ontology#>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX prov: <http://www.w3.org/ns/prov#>
PREFIX pr: <http://www.wikidata.org/prop/reference/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?statement ?subject ?subjectLabel ?property ?propertyLabel ?object ?objectLabel ?refURL {
  
{
  SELECT DISTINCT ?subject WHERE {
    {
      SERVICE wikibase:mwapi {
        bd:serviceParam wikibase:endpoint \"www.wikidata.org\"; wikibase:api \"Generator\"; mwapi:generator \"exturlusage\"; mwapi:geulimit \"500\"; mwapi:geuquery \"*.lefigaro.fr\"; mwapi:geuprotocol \"http\"; mwapi:geunamespace \"0\" .
        ?title wikibase:apiOutput mwapi:title.
      }
    } UNION {
      SERVICE wikibase:mwapi {
        bd:serviceParam wikibase:endpoint \"www.wikidata.org\"; wikibase:api \"Generator\"; mwapi:generator \"exturlusage\"; mwapi:geulimit \"500\"; mwapi:geuquery \"*.lefigaro.fr\"; mwapi:geuprotocol \"https\"; mwapi:geunamespace \"0\" .
        ?title wikibase:apiOutput mwapi:title.
      }
    }
    BIND(IRI(CONCAT(STR(wd:), ?title)) AS ?subject)
  }
}.
  
  
  
  ?subject ?p ?statement .
  ?statement prov:wasDerivedFrom/pr:P854 ?refURL .
  FILTER (CONTAINS(str(?refURL), 'lefigaro.fr')) .
  
  ?property wikibase:claim ?p .
  ?property wikibase:statementProperty ?ps .
  ?statement ?ps ?object .
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?statement ?subject ?subjectLabel ?property ?propertyLabel ?object ?objectLabel ?refURL WITH
{
  SELECT DISTINCT ?subject WHERE {
    {
      SERVICE wikibase:mwapi {
        bd:serviceParam wikibase:endpoint \"www.wikidata.org\"; wikibase:api \"Generator\"; mwapi:generator \"exturlusage\"; mwapi:geulimit \"500\"; mwapi:geuquery \"*.lefigaro.fr\"; mwapi:geuprotocol \"http\"; mwapi:geunamespace \"0\" .
        ?title wikibase:apiOutput mwapi:title.
      }
    } UNION {
      SERVICE wikibase:mwapi {
        bd:serviceParam wikibase:endpoint \"www.wikidata.org\"; wikibase:api \"Generator\"; mwapi:generator \"exturlusage\"; mwapi:geulimit \"500\"; mwapi:geuquery \"*.lefigaro.fr\"; mwapi:geuprotocol \"https\"; mwapi:geunamespace \"0\" .
        ?title wikibase:apiOutput mwapi:title.
      }
    }
    BIND(IRI(CONCAT(STR(wd:), ?title)) AS ?subject)
  }
} AS %items {
  INCLUDE %items .
  
  hint:Query hint:optimizer \"None\".
  
  ?subject ?p ?statement .
  ?statement prov:wasDerivedFrom/pr:P854 ?refURL .
  FILTER (CONTAINS(str(?refURL), 'lefigaro.fr')) .
  
  ?property wikibase:claim ?p .
  ?property wikibase:statementProperty ?ps .
  ?statement ?ps ?object .
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>,
    <http://wikiba.se/ontology#mwapi>;
  schema:target <https://query.wikidata.org/sparql> .
