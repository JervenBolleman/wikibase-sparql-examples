@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-6b0534482ddb28b3caba11dc5826cda3> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2020/06>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "]reply[09:34, 6 June 2020 (UTC)) talk (Dipsacus fullonumAn obvious optimization is to remove the OPTIONAL keywords. You need results from the OPTIONAL clauses to get values for ?brand and ?item, so the aren't really optional. That being said I don't think it will be possible to avoid timeout because there are far too many results. My counting gave 171,070 companies, 11,760 products and over a million items. You will need to limit the query to get a smaller result by adding more restrictive criteria. An general search for all types of products at once is impossible in 60 seconds. --:: Thank you very much. In fact, I removed the OPTIONAL KeyWord. But I still faced a problem of redundancy. In the following Query, the field ?ProductsItemName contains redundant data and when i used Distinct KeyWord, the query generates an Exception. Help me in eliminating the redundancy.Dipsacus fullonum, Dipsacus fullonum@"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX bd: <http://www.bigdata.com/rdf#>
select  ?brand ?brandLabel (GROUP_CONCAT(?itemName; SEPARATOR=\", \") AS ?ProductsItemName) 
where {
  
    ?CompanyID wdt:P31   wd:Q4830453.
    ?CompanyID wdt:P1056 ?MaterialProduced.
     ?item      wdt:P279*  ?MaterialProduced.
    ?item      wdt:P1716 ?brand.
  
  SERVICE wikibase:label{
            bd:serviceParam wikibase:language \"en\".
            ?item rdfs:label ?itemName.
           ?brand rdfs:label ?brandLabel.
        }
}
GROUP BY ?brand ?brandLabel""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """select  ?brand ?brandLabel (GROUP_CONCAT(?itemName; SEPARATOR=\", \") AS ?ProductsItemName) 
where {
  
    ?CompanyID wdt:P31   wd:Q4830453.
    ?CompanyID wdt:P1056 ?MaterialProduced.
     ?item      wdt:P279*  ?MaterialProduced.
    ?item      wdt:P1716 ?brand.
  
  SERVICE wikibase:label{
            bd:serviceParam wikibase:language \"en\".
            ?item rdfs:label ?itemName.
           ?brand rdfs:label ?brandLabel.
        }
}
GROUP BY ?brand ?brandLabel""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
