@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-5f58a91715bcc03035b976199e55a2bc> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User:Rdrg109/1/15>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT
  ?image
  ?mainSubjects
  ?depicts
# Subquery for getting images that have a \"depict\" (P180) and a
# \"main subject\" (P921) statements.
#
# A LIMIT is used to avoid searching all images in Wikimedia Commons
# since that requires a lot of time. The subquery stops searching
# when the given number of images are found. Change the number of
# LIMIT as needed, but note that the higher the number, the longer
# the subquery will take to finish.
#
# Get value of \"depict\" statements
#
#
# Get value of the \"main subject\" statements
#
#
# Concatenate the \"depict\" statements
#
#
# Concatenate the \"main subject\" statements
#
{
   {
  SELECT
    ?image
    (GROUP_CONCAT(DISTINCT CONCAT(?depictLabel, \" (\", ?depictQid, \")\"); SEPARATOR = ', ') AS ?depicts)
  {
     {
  SELECT DISTINCT ?image ?depict {
    INCLUDE %0.
    ?image p:P180 [ps:P180 ?depict].
  }
}

    BIND(SUBSTR(STR(?depict), 32) AS ?depictQid).

    SERVICE <https://query.wikidata.org/sparql> {
      SELECT ?depict ?depictLabel {
        SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
      }
    }
  }
  GROUP BY ?image
}
   {
  SELECT
    ?image
    (GROUP_CONCAT(DISTINCT CONCAT(?mainSubjectLabel, \" (\", ?mainSubjectQid, \")\"); SEPARATOR = ', ') AS ?mainSubjects)
  {
     {
  SELECT DISTINCT ?image ?mainSubject {
    INCLUDE %0.
    ?image p:P921 [ps:P921 ?mainSubject].
  }
}

    BIND(SUBSTR(STR(?mainSubject), 32) AS ?mainSubjectQid).

    SERVICE <https://query.wikidata.org/sparql> {
      SELECT ?mainSubject ?mainSubjectLabel {
        SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
      }
    }
  }
  GROUP BY ?image
}
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT
  ?image
  ?mainSubjects
  ?depicts
# Subquery for getting images that have a \"depict\" (P180) and a
# \"main subject\" (P921) statements.
#
# A LIMIT is used to avoid searching all images in Wikimedia Commons
# since that requires a lot of time. The subquery stops searching
# when the given number of images are found. Change the number of
# LIMIT as needed, but note that the higher the number, the longer
# the subquery will take to finish.
WITH {
  SELECT DISTINCT ?image {
    ?image p:P180 [];
           p:P921 [].
  }
  LIMIT 10
} AS %0
#
# Get value of \"depict\" statements
#
WITH {
  SELECT DISTINCT ?image ?depict {
    INCLUDE %0.
    ?image p:P180 [ps:P180 ?depict].
  }
} AS %1
#
# Get value of the \"main subject\" statements
#
WITH {
  SELECT DISTINCT ?image ?mainSubject {
    INCLUDE %0.
    ?image p:P921 [ps:P921 ?mainSubject].
  }
} AS %2
#
# Concatenate the \"depict\" statements
#
WITH {
  SELECT
    ?image
    (GROUP_CONCAT(DISTINCT CONCAT(?depictLabel, \" (\", ?depictQid, \")\"); SEPARATOR = ', ') AS ?depicts)
  {
    INCLUDE %1.

    BIND(SUBSTR(STR(?depict), 32) AS ?depictQid).

    SERVICE <https://query.wikidata.org/sparql> {
      SELECT ?depict ?depictLabel {
        SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
      }
    }
  }
  GROUP BY ?image
} AS %3
#
# Concatenate the \"main subject\" statements
#
WITH {
  SELECT
    ?image
    (GROUP_CONCAT(DISTINCT CONCAT(?mainSubjectLabel, \" (\", ?mainSubjectQid, \")\"); SEPARATOR = ', ') AS ?mainSubjects)
  {
    INCLUDE %2.

    BIND(SUBSTR(STR(?mainSubject), 32) AS ?mainSubjectQid).

    SERVICE <https://query.wikidata.org/sparql> {
      SELECT ?mainSubject ?mainSubjectLabel {
        SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
      }
    }
  }
  GROUP BY ?image
} AS %4
{
  INCLUDE %3.
  INCLUDE %4.
}""";
  schema:target <https://query.wikidata.org/sparql> .
