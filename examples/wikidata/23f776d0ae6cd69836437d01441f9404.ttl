@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-23f776d0ae6cd69836437d01441f9404> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:WikiProject_Informatics/Software/Queries>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "GitHub users who co-authored scholarly publications"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
# tool: scholia
#defaultView:Graph
SELECT ?author1 ?author1Label ?rgb ?author2 ?author2Label
WHERE {
   {
  # Limit the number of coauthors
  SELECT DISTINCT ?author2 ?author1  (COUNT(?work) AS ?count2)  WHERE {
     {
  # Limit the number of authors
  SELECT (COUNT(?work) AS ?count1) ?author1 ?work WHERE {
    ?work wdt:P50 ?author1 .
    ?author1 wdt:P2037 ?githubuser1 .
  }
  GROUP BY ?author1 ?work
  ORDER BY DESC(?count1)
  LIMIT 10000
}    ?work wdt:P50 ?author1 , ?author2 .
    ?author2 wdt:P2037 ?githubuser2 .
    FILTER (?author1 != ?author2) 
  }
  GROUP BY ?author2 ?author1 
  ORDER BY DESC(?count2)
  LIMIT 10000
}  OPTIONAL { ?author1 wdt:P21 ?gender1 . }
  BIND( IF(?gender1 = wd:Q6581097, \"3182BD\", \"E6550D\") AS ?rgb)
  SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"en,fr,de,ru,es,zh,jp\".
  }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """# tool: scholia
#defaultView:Graph
SELECT ?author1 ?author1Label ?rgb ?author2 ?author2Label
WITH {
  # Limit the number of authors
  SELECT (COUNT(?work) AS ?count1) ?author1 ?work WHERE {
    ?work wdt:P50 ?author1 .
    ?author1 wdt:P2037 ?githubuser1 .
  }
  GROUP BY ?author1 ?work
  ORDER BY DESC(?count1)
  LIMIT 10000
} AS %authors1
WITH {
  # Limit the number of coauthors
  SELECT DISTINCT ?author2 ?author1  (COUNT(?work) AS ?count2)  WHERE {
    INCLUDE %authors1
    ?work wdt:P50 ?author1 , ?author2 .
    ?author2 wdt:P2037 ?githubuser2 .
    FILTER (?author1 != ?author2) 
  }
  GROUP BY ?author2 ?author1 
  ORDER BY DESC(?count2)
  LIMIT 10000
} AS %authors2
WHERE {
  INCLUDE %authors2
  OPTIONAL { ?author1 wdt:P21 ?gender1 . }
  BIND( IF(?gender1 = wd:Q6581097, \"3182BD\", \"E6550D\") AS ?rgb)
  SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"en,fr,de,ru,es,zh,jp\".
  }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
