@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-7c5af0f1eed918d8b424eda6386a8e85> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2021/09>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Bouzinac"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX mwapi: <http://wikiba.se/ontology#>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?item ?itemLabel ?extract
WHERE
{
  ?item wdt:P31 wd:Q484170 .
  BIND (SUBSTR(STR(?item), 32) AS ?item_title)
  OPTIONAL
  {
    SERVICE wikibase:mwapi
    {
      bd:serviceParam wikibase:endpoint \"www.wikidata.org\" .
      bd:serviceParam wikibase:api \"Generator\" .
      bd:serviceParam mwapi:generator \"allpages\" .
      bd:serviceParam mwapi:gapnamespace \"1\" .
      bd:serviceParam mwapi:gapfrom ?item_title .
      bd:serviceParam mwapi:gapto ?item_title .
      bd:serviceParam mwapi:prop \"extracts\" .
      bd:serviceParam mwapi:explaintext \"true\" .
      bd:serviceParam mwapi:exchars \"50\" .
      bd:serviceParam mwapi:exlimit \"1\" .
      ?extract wikibase:apiOutput \"extract/text()\".
    }
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
LIMIT 10""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?item ?itemLabel ?extract
WHERE
{
  ?item wdt:P31 wd:Q484170 .
  BIND (SUBSTR(STR(?item), 32) AS ?item_title)
  OPTIONAL
  {
    SERVICE wikibase:mwapi
    {
      bd:serviceParam wikibase:endpoint \"www.wikidata.org\" .
      bd:serviceParam wikibase:api \"Generator\" .
      bd:serviceParam mwapi:generator \"allpages\" .
      bd:serviceParam mwapi:gapnamespace \"1\" .
      bd:serviceParam mwapi:gapfrom ?item_title .
      bd:serviceParam mwapi:gapto ?item_title .
      bd:serviceParam mwapi:prop \"extracts\" .
      bd:serviceParam mwapi:explaintext \"true\" .
      bd:serviceParam mwapi:exchars \"50\" .
      bd:serviceParam mwapi:exlimit \"1\" .
      ?extract wikibase:apiOutput \"extract/text()\".
    }
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
LIMIT 10""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>,
    <http://wikiba.se/ontology#mwapi>;
  schema:target <https://query.wikidata.org/sparql> .
