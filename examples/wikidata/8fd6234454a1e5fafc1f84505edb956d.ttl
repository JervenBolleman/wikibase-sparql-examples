@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-8fd6234454a1e5fafc1f84505edb956d> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User:Jarekt/queries>, <https://www.wikidata.org/wiki/Wikidata:Project_chat/Archive/2017/09>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Dates with Gregorian and Julian DatesI find many aspects of our current model of storing dates in different calendars very messy. Just to name a few:  set to \"5. century BCE\" one in Julian and one in Gregorian Calendar. Both statements are true but Gregorian \"5. century BCE\" date makes very little sense. I think it would make sense to change dates with century, decade or year precision to the appropriate calendar (Julian before 1584 and Gregorian afterwards).(P569)date of birth  has (Q2204465)S Potter Julian vs. Gregorian calendars make little sense for dates with century, decade or even year precision. For example   gives \"1848-03-17\", so there is no need for both.{{#invoke:Calendar|Julian2Gregorian|1848-03-05}} in meters, kilometers and feet because all 3 units are allowed. Maybe it would be simpler to keep a single value in most appropriate calendar (Julian before 1584 and Gregorian afterwards) and use software to convert dates to desired ones if needed. For example (P2044)elevation above sea level  (Julian)\"; However that is just two notations of the same date equivalent of storing the same 5 March 1848\" and to \"17 March 1848 set to \"(P569)date of birth  has (Q22687867)Eugene Felitsyn There are many items that save the same date using both Gregorian and Julian Calendar. For example  16:55, 21 September 2017 (UTC)) talk (Jarekt task related to this, although I did not read the whole discussion yet. --phabricator:T105100There is If there is more than one source, it's probably best to give the version of the date that's contained in the source, to make it easier for people who verify the date in the source but don't know how to do calendar conversions.If it's clear what calendar should apply to the event, the calendar field should reflect that.It's just not true that dates in or after 1584 are necessarily Gregorian. Large parts of Europe, nearby areas, and colonies continued to use Julian; Greece didn't convert until 1923.I know that many countries used Julian dates after 1584, the same way US is still using feet and gallons instead of metric units, but that does not mean we need to store same information using all available units. For example this query 18:38, 21 September 2017 (UTC)) talk (Matěj SuchánekThe calendar should follow the same pattern like quantity values with units, ie. should be based on the original source.  Last week, I was implementing calendar conversion to cswiki modules. Having looked for testcases, I found many items with dates in Julian calendar, which had already been converted to Gregorian. These are probably relicts from older software that managed time values inconsistently. 18:31, 21 September 2017 (UTC)) talk (Jc3s5h is the only zone we can use) when in reality nearly all sources state time in local time, and our editors and bots nearly always copy dates from sources to Wikidata with no attempt to allow for time zone. w:Universal TimeI think the most widespread cause of false dates is the claim in the data model documentation that we pay attention to time zones (although"@en,
    "Multicalendar DOB"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX psv: <http://www.wikidata.org/prop/statement/value/>
PREFIX p: <http://www.wikidata.org/prop/>
SELECT ?item ?julianDate ?gregorianDate
{
  ?item p:P569 ?date1 .
  ?item p:P569 ?date2 FILTER( ?date2 != ?date1 ) . # more than one statement
  ?date1 psv:P569 [ wikibase:timeValue ?julianDate;    wikibase:timeCalendarModel wd:Q1985786; wikibase:timePrecision \"11\"^^xsd:integer; ] .
  ?date2 psv:P569 [ wikibase:timeValue ?gregorianDate; wikibase:timeCalendarModel wd:Q1985727; wikibase:timePrecision \"11\"^^xsd:integer; ] .
  FILTER( ?julianDate = ?gregorianDate )      .
}       
LIMIT 100""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?item ?julianDate ?gregorianDate
{
  ?item p:P569 ?date1 .
  ?item p:P569 ?date2 FILTER( ?date2 != ?date1 ) . # more than one statement
  ?date1 psv:P569 [ wikibase:timeValue ?julianDate;    wikibase:timeCalendarModel wd:Q1985786; wikibase:timePrecision \"11\"^^xsd:integer; ] .
  ?date2 psv:P569 [ wikibase:timeValue ?gregorianDate; wikibase:timeCalendarModel wd:Q1985727; wikibase:timePrecision \"11\"^^xsd:integer; ] .
  FILTER( ?julianDate = ?gregorianDate )      .
}       
LIMIT 100""";
  schema:target <https://query.wikidata.org/sparql> .
