@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-05f3331bdf4ad4f2ae4797266d6bdc3c> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2019/08>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "This returns some 729 results. There aren't that many Netflix Originals, and the reason this number is so high is because it is returning a row for every episode of each Netflix Original television series. I only want to return one row for each series - I'm not really that interested in the level of detail of episode at the moment. I'm sure the solution to this is very simple, and that I'm probably going about things the wrong way with the code above, so I'd really appreciate any input on this. And one last question - another the reason the list is so long is because not only are there rows for every episode, there are also multiple rows for episodes with more than one genre. If and when I manage to get this to return just titles of programmes/films, I assume it's going to give me multiple rows for each instance where there are multiple genres. Is there a way to just choose the first instance of the genre (which presumably is the primary genre) and/or have all genres appear in the same row?  ).contribs • [[User talk:|talk]] ([[User:|?]]  comment was added byunsignedThe preceding  –  Maybe something like the following can work for you. I skipped P31 entirely, but use MINUS to exclude episodes and seasons.     ?title ORDER BY } } .\"[AUTO_LANGUAGE],en\" language:wikibase serviceParam:bd { label:wikibase SERVICE } Q3464665:wd P31:wdt ?item { MINUS } Q21191270:wd P31:wdt ?item { MINUS } .?narrlocation P840:wdt ?item{ OPTIONAL } .?genre P136:wdt ?item{ OPTIONAL } ?title P1476:wdt ?item{ OPTIONAL .Q907311:wd P449:wdt ?item { WHERE ?narrlocationLabel ?genreLabel ?itemDescription ?itemLabel ?item ?title SELECT 15:08, 30 August 2019 (UTC) Jura ---  Below a version that groups by film/series:"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT
  ?item ?itemLabel ?itemDescription 
  (SAMPLE(?title) as ?title) 
  (GROUP_CONCAT(DISTINCT ?genreLabel; separator= \", \") as ?genres) 
  (GROUP_CONCAT(DISTINCT ?locationLabel; separator= \", \") as ?narrlocs) 
WHERE
{
    { SELECT ?item ?itemLabel ?itemDescription ?title ?genreLabel ?locationLabel 
    WHERE 
    {
        
        ?item wdt:P449 wd:Q907311.
        OPTIONAL {?item wdt:P1476 ?title }  
        OPTIONAL {?item wdt:P136 ?genre. }
        OPTIONAL {?item wdt:P840 ?location. } 
        MINUS { ?item wdt:P31 wd:Q21191270 }
        MINUS { ?item wdt:P31 wd:Q3464665 }
      SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
    }
   }
}          
GROUP BY ?item ?itemLabel ?itemDescription
ORDER BY ?title""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT
  ?item ?itemLabel ?itemDescription 
  (SAMPLE(?title) as ?title) 
  (GROUP_CONCAT(DISTINCT ?genreLabel; separator= \", \") as ?genres) 
  (GROUP_CONCAT(DISTINCT ?locationLabel; separator= \", \") as ?narrlocs) 
WHERE
{
    { SELECT ?item ?itemLabel ?itemDescription ?title ?genreLabel ?locationLabel 
    WHERE 
    {
        hint:Query hint:optimizer \"None\".
        ?item wdt:P449 wd:Q907311.
        OPTIONAL {?item wdt:P1476 ?title }  
        OPTIONAL {?item wdt:P136 ?genre. }
        OPTIONAL {?item wdt:P840 ?location. } 
        MINUS { ?item wdt:P31 wd:Q21191270 }
        MINUS { ?item wdt:P31 wd:Q3464665 }
      SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
    }
   }
}          
GROUP BY ?item ?itemLabel ?itemDescription
ORDER BY ?title""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
