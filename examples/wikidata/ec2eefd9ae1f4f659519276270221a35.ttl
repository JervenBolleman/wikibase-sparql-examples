@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-ec2eefd9ae1f4f659519276270221a35> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Project_chat/Archive/2017/09>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment """All human settlements that are are in a country (and at least one) non recognised country
SELECT DISTINCT ?object ?objectLabel ?country ?countryLabel ?country2 ?country2Label #(COUNT(DISTINCT ?object) AS ?count)
WHERE {
  ?object wdt:P17 ?country. #Belonging to a county
  ?object wdt:P17 ?country2.
  ?country2 wdt:P31/wdt:P279* wd:Q15634554. #Non recognised countries
  MINUS{?object wdt:P31/wdt:P279* wd:Q15239622.} #Filtering out all disputed territorry
  FILTER(STR(?country2) != STR(?country)) # use < instead of != to have each result only once
  MINUS { ?country wdt:P582|wdt:P576 ?ended. } #Countries have not ended or dissolved
  MINUS { ?country2 wdt:P582|wdt:P576 ?ended.}
  MINUS {?country wdt:P31/wdt:P279* wd:Q3024240} #Former countries
  MINUS {?country2 wdt:P31/wdt:P279* wd:Q3024240}
  ?object wdt:P31/wdt:P279* wd:Q486972. #Human settlements
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
#GROUP BY ?country ?countryLabel ?country2 ?country2Label
#ORDER BY DESC(?count)"""@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
#All human settlements that are are in a country (and at least one) non recognised country
SELECT DISTINCT ?object ?objectLabel ?country ?countryLabel ?country2 ?country2Label #(COUNT(DISTINCT ?object) AS ?count)
WHERE {
  ?object wdt:P17 ?country. #Belonging to a county
  ?object wdt:P17 ?country2.
  ?country2 wdt:P31/wdt:P279* wd:Q15634554. #Non recognised countries
  MINUS{?object wdt:P31/wdt:P279* wd:Q15239622.} #Filtering out all disputed territorry
  FILTER(STR(?country2) != STR(?country)) # use < instead of != to have each result only once
  MINUS { ?country wdt:P582|wdt:P576 ?ended. } #Countries have not ended or dissolved
  MINUS { ?country2 wdt:P582|wdt:P576 ?ended.}
  MINUS {?country wdt:P31/wdt:P279* wd:Q3024240} #Former countries
  MINUS {?country2 wdt:P31/wdt:P279* wd:Q3024240}
  ?object wdt:P31/wdt:P279* wd:Q486972. #Human settlements
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
#GROUP BY ?country ?countryLabel ?country2 ?country2Label
#ORDER BY DESC(?count)""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """#All human settlements that are are in a country (and at least one) non recognised country
SELECT DISTINCT ?object ?objectLabel ?country ?countryLabel ?country2 ?country2Label #(COUNT(DISTINCT ?object) AS ?count)
WHERE {
  ?object wdt:P17 ?country. #Belonging to a county
  ?object wdt:P17 ?country2.
  ?country2 wdt:P31/wdt:P279* wd:Q15634554. #Non recognised countries
  MINUS{?object wdt:P31/wdt:P279* wd:Q15239622.} #Filtering out all disputed territorry
  FILTER(STR(?country2) != STR(?country)) # use < instead of != to have each result only once
  MINUS { ?country wdt:P582|wdt:P576 ?ended. } #Countries have not ended or dissolved
  MINUS { ?country2 wdt:P582|wdt:P576 ?ended.}
  MINUS {?country wdt:P31/wdt:P279* wd:Q3024240} #Former countries
  MINUS {?country2 wdt:P31/wdt:P279* wd:Q3024240}
  ?object wdt:P31/wdt:P279* wd:Q486972. #Human settlements
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
#GROUP BY ?country ?countryLabel ?country2 ?country2Label
#ORDER BY DESC(?count)""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
