@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-5145932c5eadab379d9a080f76525d81> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User:Charles_Matthews/Queries>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment """Film adaptations of books
SELECT DISTINCT ?film ?IMDb (GROUP_CONCAT(DISTINCT  ?IDBnF; separator=\";\") as ?IDsBnF)
WHERE {
  ?film wdt:P31/wdt:P279* wd:Q11424.
  # on recherche des éléments ayant nature film/Q11424 ou une sous-classe
  ?film wdt:P144 ?oeuvre.
  # \"basé sur\"/p144 une oeuvre, propriété 
  {?oeuvre wdt:P31/wdt:P279* wd:Q571} UNION {?oeuvre wdt:P31/wdt:P279* wd:Q7725634}
  # l'oeuvre a en nature livre/Q571 ou oeuvre littéraire/Q7725634 (ou sous-classe)
  ?oeuvre wdt:P268 ?IDBnF.  # l'oeuvre a un idenfiant BnF/propriété P268
  ?film wdt:P345 ?IMDb # le film a un identfiant IMDb
}
GROUP BY ?film ?IMDb"""@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
#Film adaptations of books
SELECT DISTINCT ?film ?IMDb (GROUP_CONCAT(DISTINCT  ?IDBnF; separator=\";\") as ?IDsBnF)
WHERE {
  ?film wdt:P31/wdt:P279* wd:Q11424.
  # on recherche des éléments ayant nature film/Q11424 ou une sous-classe
  ?film wdt:P144 ?oeuvre.
  # \"basé sur\"/p144 une oeuvre, propriété 
  {?oeuvre wdt:P31/wdt:P279* wd:Q571} UNION {?oeuvre wdt:P31/wdt:P279* wd:Q7725634}
  # l'oeuvre a en nature livre/Q571 ou oeuvre littéraire/Q7725634 (ou sous-classe)
  ?oeuvre wdt:P268 ?IDBnF.  # l'oeuvre a un idenfiant BnF/propriété P268
  ?film wdt:P345 ?IMDb # le film a un identfiant IMDb
}
GROUP BY ?film ?IMDb""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """#Film adaptations of books
SELECT DISTINCT ?film ?IMDb (GROUP_CONCAT(DISTINCT  ?IDBnF; separator=\";\") as ?IDsBnF)
WHERE {
  ?film wdt:P31/wdt:P279* wd:Q11424.
  # on recherche des éléments ayant nature film/Q11424 ou une sous-classe
  ?film wdt:P144 ?oeuvre.
  # \"basé sur\"/p144 une oeuvre, propriété 
  {?oeuvre wdt:P31/wdt:P279* wd:Q571} UNION {?oeuvre wdt:P31/wdt:P279* wd:Q7725634}
  # l'oeuvre a en nature livre/Q571 ou oeuvre littéraire/Q7725634 (ou sous-classe)
  ?oeuvre wdt:P268 ?IDBnF.  # l'oeuvre a un idenfiant BnF/propriété P268
  ?film wdt:P345 ?IMDb # le film a un identfiant IMDb
}
GROUP BY ?film ?IMDb""";
  schema:target <https://query.wikidata.org/sparql> .
