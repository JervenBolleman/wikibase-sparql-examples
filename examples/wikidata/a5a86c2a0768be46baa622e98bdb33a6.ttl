@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-a5a86c2a0768be46baa622e98bdb33a6> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2022/01>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?preis ?preisLabel (count (DISTINCT(?person)) as ?person_count) 
    (count (DISTINCT(CONCAT(str(?person),COALESCE(str(?gwl_datum),'A'),COALESCE(str(?preis_datum),'B') ))) as ?comparison_count) 
    (sum(if(bound(?gwl_datum) && bound(?preis_datum) && (?preis_datum < ?gwl_datum), 1, 0)) as ?vor) 
    (sum(if(bound(?gwl_datum) && bound(?preis_datum) && (?preis_datum > ?gwl_datum), 1, 0)) as ?nach) 
    (sum(if(bound(?gwl_datum) && bound(?preis_datum) && (?preis_datum = ?gwl_datum), 1, 0)) as ?gleich) 
    (sum(if(!bound(?gwl_datum) || !bound(?preis_datum), 1, 0)) as ?unbek) 
 

WHERE {
     {
  SELECT DISTINCT ?person ?preis ?gwl_datum ?preis_datum WHERE {
    ?person wdt:P31 wd:Q5 . 
    ?person p:P166 ?gwl_stmt . ?gwl_stmt ps:P166 wd:Q703205.
    OPTIONAL {?gwl_stmt pq:P585 ?gwl_datum} .
  
    ?person p:P166 ?preis_stmt . ?preis_stmt ps:P166 ?preis .
    ?preis wdt:P31 ?preistype.
    filter (?preistype = wd:Q618779 || ?preistype = wd:Q11448906 || ?preistype = wd:Q15383322 || ?preistype = wd:Q107471279 || ?preistype =  wd:Q378427 ||  ?preistype = wd:Q107494520 || ?preistype = wd:Q1404101 || ?preistype = wd:Q5257307 || ?preistype = wd:Q1829324 || ?preistype =wd:Q1792571 || ?preistype = wd:Q107471043 || ?preistype =  wd:Q636581 || ?preistype =  wd:Q1357196 || ?preistype = wd:Q55190113 || ?preistype = wd:Q955824 || ?preistype = wd:Q1966910 || ?preistype = wd:Q1709894 )

    OPTIONAL {?preis_stmt pq:P585 ?preis_datum} .
  }
}.
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY  ?preis ?preisLabel
ORDER BY DESC(?person_count)""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?preis ?preisLabel (count (DISTINCT(?person)) as ?person_count) 
    (count (DISTINCT(CONCAT(str(?person),COALESCE(str(?gwl_datum),'A'),COALESCE(str(?preis_datum),'B') ))) as ?comparison_count) 
    (sum(if(bound(?gwl_datum) && bound(?preis_datum) && (?preis_datum < ?gwl_datum), 1, 0)) as ?vor) 
    (sum(if(bound(?gwl_datum) && bound(?preis_datum) && (?preis_datum > ?gwl_datum), 1, 0)) as ?nach) 
    (sum(if(bound(?gwl_datum) && bound(?preis_datum) && (?preis_datum = ?gwl_datum), 1, 0)) as ?gleich) 
    (sum(if(!bound(?gwl_datum) || !bound(?preis_datum), 1, 0)) as ?unbek) 
 
WITH {
  SELECT DISTINCT ?person ?preis ?gwl_datum ?preis_datum WHERE {
    ?person wdt:P31 wd:Q5 . 
    ?person p:P166 ?gwl_stmt . ?gwl_stmt ps:P166 wd:Q703205.
    OPTIONAL {?gwl_stmt pq:P585 ?gwl_datum} .
  
    ?person p:P166 ?preis_stmt . ?preis_stmt ps:P166 ?preis .
    ?preis wdt:P31 ?preistype.
    filter (?preistype = wd:Q618779 || ?preistype = wd:Q11448906 || ?preistype = wd:Q15383322 || ?preistype = wd:Q107471279 || ?preistype =  wd:Q378427 ||  ?preistype = wd:Q107494520 || ?preistype = wd:Q1404101 || ?preistype = wd:Q5257307 || ?preistype = wd:Q1829324 || ?preistype =wd:Q1792571 || ?preistype = wd:Q107471043 || ?preistype =  wd:Q636581 || ?preistype =  wd:Q1357196 || ?preistype = wd:Q55190113 || ?preistype = wd:Q955824 || ?preistype = wd:Q1966910 || ?preistype = wd:Q1709894 )

    OPTIONAL {?preis_stmt pq:P585 ?preis_datum} .
  }
} AS %preisen

WHERE {
    INCLUDE %preisen .
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY  ?preis ?preisLabel
ORDER BY DESC(?person_count)""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
