@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-665320b449fe0942e2c726898ed65da4> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2017/06>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "I'm ussually doing this batches by some 15-20 IDs, but it probably can be done in larger batches. But I do it with Python script, so it may be not so very user-friendly. Tipical query looks like this:07:12, 26 June 2017 (UTC)) talk (Edgars2007But if you see that S0101 and S0103 is included in output, but S0102 isn't, then I think it's clear, which ID isn't used :) But agree, that Jura's query is better and more usable for humans. As I said, I usually use such things in scripts. -- 16:59, 25 June 2017 (UTC)) talk (Innocent bystander here. I have approximately 3000 identifiers for every year. It is S0102 I want to find, not S101 and S0103. -- isn't: I wasn't clear enough. What I look for is the parts of the set that Edgars2007@ 15:55, 25 June 2017 (UTC)) talk (MisterSynergyIn such cases I usually perform a query that outputs all identifiers that are stored in Wikidata; subsequently, I use short scripts (mostly php, meanwhile also python) with array union or diff methods to compare to a given set of identifiers to spot those which are either in one or both of the datasets. It should be possible to make a tool for all users with such functionality, but I don’t have time for that right now. —You could just invert it :"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wdt: <http://www.wikidata.org/prop/direct/>
SELECT ?ids 
WHERE
{
  values ?ids { \"S0101\" \"S0102\" \"S0103\" }
  FILTER NOT EXISTS { ?item wdt:P776 ?ids }
}
limit 100""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?ids 
WHERE
{
  values ?ids { \"S0101\" \"S0102\" \"S0103\" }
  FILTER NOT EXISTS { ?item wdt:P776 ?ids }
}
limit 100""";
  schema:target <https://query.wikidata.org/sparql> .
