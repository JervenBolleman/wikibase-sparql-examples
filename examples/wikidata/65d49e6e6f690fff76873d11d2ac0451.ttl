@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-65d49e6e6f690fff76873d11d2ac0451> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2022/09>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT
  ?item ?itemLabel
  (GROUP_CONCAT(CONCAT(?propertyLabel, \": \", ?valueLabel, ?rankText, ?qualText); SEPARATOR=', ') AS ?statements)
{
  {
    SELECT
      ?item ?itemLabel ?propertyLabel ?valueLabel ?rank
      (GROUP_CONCAT(CONCAT(?qualifierLabel, \": \", ?qualifier_valueLabel); SEPARATOR=', ') AS ?qualifiers)
    {
      ?item wdt:P171+ wd:Q147149 .
      ?item wdt:P105 wd:Q7432 .
      ?item ?claim ?statement .
      ?property wikibase:claim ?claim .
      ?property wikibase:statementProperty ?ps_predicat .
      ?statement ?ps_predicat ?value .
      ?statement wikibase:rank ?rank .
      OPTIONAL
      {
        ?statement ?pq_predicat ?qualifier_value .
        ?qualifier wikibase:qualifier ?pq_predicat .
      }
      SERVICE wikibase:label
      {
        bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
        ?item rdfs:label ?itemLabel .
        ?property rdfs:label ?propertyLabel .
        ?value rdfs:label ?valueLabel .
        ?qualifier rdfs:label ?qualifierLabel .
        ?qualifier_value rdfs:label ?qualifier_valueLabel .
      }
    }
    GROUP BY ?item ?itemLabel ?propertyLabel ?valueLabel ?rank
  }
  BIND (IF(?rank = wikibase:NormalRank, \" [normal rank]\",
           IF(?rank = wikibase:PreferredRank, \" [preferred rank]\", \" [deprecated rank]\")) AS ?rankText)
  BIND (IF(BOUND(?qualifiers), CONCAT(\"(\", ?qualifiers, \")\"), \"\") AS ?qualText)
}
GROUP BY ?item ?itemLabel""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT
  ?item ?itemLabel
  (GROUP_CONCAT(CONCAT(?propertyLabel, \": \", ?valueLabel, ?rankText, ?qualText); SEPARATOR=', ') AS ?statements)
{
  {
    SELECT
      ?item ?itemLabel ?propertyLabel ?valueLabel ?rank
      (GROUP_CONCAT(CONCAT(?qualifierLabel, \": \", ?qualifier_valueLabel); SEPARATOR=', ') AS ?qualifiers)
    {
      ?item wdt:P171+ wd:Q147149 .
      ?item wdt:P105 wd:Q7432 .
      ?item ?claim ?statement .
      ?property wikibase:claim ?claim .
      ?property wikibase:statementProperty ?ps_predicat .
      ?statement ?ps_predicat ?value .
      ?statement wikibase:rank ?rank .
      OPTIONAL
      {
        ?statement ?pq_predicat ?qualifier_value .
        ?qualifier wikibase:qualifier ?pq_predicat .
      }
      SERVICE wikibase:label
      {
        bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
        ?item rdfs:label ?itemLabel .
        ?property rdfs:label ?propertyLabel .
        ?value rdfs:label ?valueLabel .
        ?qualifier rdfs:label ?qualifierLabel .
        ?qualifier_value rdfs:label ?qualifier_valueLabel .
      }
    }
    GROUP BY ?item ?itemLabel ?propertyLabel ?valueLabel ?rank
  }
  BIND (IF(?rank = wikibase:NormalRank, \" [normal rank]\",
           IF(?rank = wikibase:PreferredRank, \" [preferred rank]\", \" [deprecated rank]\")) AS ?rankText)
  BIND (IF(BOUND(?qualifiers), CONCAT(\"(\", ?qualifiers, \")\"), \"\") AS ?qualText)
}
GROUP BY ?item ?itemLabel""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
