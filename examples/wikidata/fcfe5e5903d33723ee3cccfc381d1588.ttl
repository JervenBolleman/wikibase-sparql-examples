@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-fcfe5e5903d33723ee3cccfc381d1588> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User_talk:Uziel302>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "hebrew Lexemes ]reply[21:13, 18 September 2019 (UTC)) talk (Yurik which imported over 100,000 words from ru wiktionary. --Lexicator (sadly I don't speak Hebrew, but I wrote https://he.wiktionary.orghi, I saw you added many Hebrew words - if you know Python, we could work together on importing data from , I found a source for public domain senses: Wikidata. I query the words I want and I get relevant senses from description of their Q items.Yurik ]reply[22:31, 18 September 2019 (UTC)) talk (Yurik, words and their forms are not copyrightable, but senses are. If you can create a full list of things (words, their forms, all other statements that should be on them), I could upload that data. Note that you should first figure out what information you want to store. Currently I only see you added the words, but made no statements about them (e.g. how to pronounce them, their forms, or any other data). --this paperAccording to  ]reply[21:29, 18 September 2019 (UTC)) talk (Uziel302, thanks for the offer. I am willing to participate, I don't know much python but I can learn. I didn't fully get how you filtered cc0 content from wiktionary. Anyway, hewiktionary has less than 20,000 pages so the potential there is limited. I would like a simple script where I can put list of words with their pos and sense and it will create a lexeme. Currently quickstatements doesn't support creating lexemes.Yurik"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX schema: <http://schema.org/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?item ?itemLabel ?desc ?endesc ?enlabel
WHERE{ 
  ?item rdfs:label ?itemLabel filter (lang(?itemLabel) = \"he\").
  VALUES ?itemLabel {
\"אלבום\"@he
\"אלבני\"@he
\"אלבנית\"@he  } .
OPTIONAL {?item schema:description ?desc filter (lang(?desc) = \"he\").}
OPTIONAL {?item schema:description ?endesc filter (lang(?endesc) = \"en\").}
OPTIONAL {?item rdfs:label ?enlabel filter (lang(?enlabel) = \"en\").}
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?item ?itemLabel ?desc ?endesc ?enlabel
WHERE{ 
  ?item rdfs:label ?itemLabel filter (lang(?itemLabel) = \"he\").
  VALUES ?itemLabel {
\"אלבום\"@he
\"אלבני\"@he
\"אלבנית\"@he  } .
OPTIONAL {?item schema:description ?desc filter (lang(?desc) = \"he\").}
OPTIONAL {?item schema:description ?endesc filter (lang(?endesc) = \"en\").}
OPTIONAL {?item rdfs:label ?enlabel filter (lang(?enlabel) = \"en\").}
}""";
  schema:target <https://query.wikidata.org/sparql> .
