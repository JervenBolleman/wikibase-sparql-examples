@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-16937085aab5a54eeb305d202c9ca8c1> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/w/index.php?title=Topic:W2gweg26fx6e957n&topic_showPostId=w2hpxzmo78ngvggs#flow-post-w2hpxzmo78ngvggs>,
    <https://www.wikidata.org/wiki/Topic:W2gweg26fx6e957n>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment ") disambiguations or incomplete elements, which I don't want.(Q4167410)Wikimedia disambiguation page  (P31) instance of\" - without it Google sometimes outputs ids for unregistered (without Thing), searching by sitelink names. Other important filter is \"types=MREID Resolver or API explorer (https://kgsearch.googleapis.com/v1/entities:search?key=<API_KEY>&query=Wolfgang+Amadeus+Mozart&languages=en&languages=fr&languages=de&languages=ja&languages=pt&languages=ru&languages=es&languages=ar&languages=bn&languages=ca&languages=zh&languages=cs&languages=nl&languages=fi&languages=el&languages=hi&languages=hu&languages=id&languages=it&languages=ko&languages=no&languages=fa&languages=pl&languages=sv&languages=tr&languages=uk&languages=vi&languages=sq&languages=hy&languages=eu&languages=bg&languages=hr&languages=da&languages=gl&languages=is&languages=lv&languages=lt&languages=ro&languages=sr&languages=sk&languages=sl&languages=th&languages=ga&languages=km&languages=lo&types=Thing&limit=500Hi, I'm using queries like There is a daily free limit of 100 000 searches in entities:search, which is more than enough for my goals.To get a bunch of QIDs for processing, I currently use this form of query:"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX schema: <http://schema.org/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?item ?article ?name WHERE {
  

  SERVICE bd:slice {
    ?article schema:isPartOf <https://en.wikipedia.org/>.
    bd:serviceParam bd:slice.offset 6080000 .
    bd:serviceParam bd:slice.limit 10000 .
  }

  ?article schema:about ?item .
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q4167836 }
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q4167410 }
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q14204246 }
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q11753321 }
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q30432511 }
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q4820 }
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q101352 }
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q3186692 }
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q577 }
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q13406463 }
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q29964144 }
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q22808320 }

  OPTIONAL { ?item wdt:P646 ?a }
  FILTER(!BOUND(?a)).
  OPTIONAL { ?item wdt:P2671 ?b }
  FILTER(!BOUND(?b)).
  ?article schema:name ?name .
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?item ?article ?name WHERE {
  hint:Query hint:optimizer \"None\".

  SERVICE bd:slice {
    ?article schema:isPartOf <https://en.wikipedia.org/>.
    bd:serviceParam bd:slice.offset 6080000 .
    bd:serviceParam bd:slice.limit 10000 .
  }

  ?article schema:about ?item .
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q4167836 }
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q4167410 }
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q14204246 }
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q11753321 }
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q30432511 }
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q4820 }
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q101352 }
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q3186692 }
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q577 }
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q13406463 }
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q29964144 }
  FILTER NOT EXISTS { ?item wdt:P31 wd:Q22808320 }

  OPTIONAL { ?item wdt:P646 ?a }
  FILTER(!BOUND(?a)).
  OPTIONAL { ?item wdt:P2671 ?b }
  FILTER(!BOUND(?b)).
  ?article schema:name ?name .
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://www.bigdata.com/rdf#slice>;
  schema:target <https://query.wikidata.org/sparql> .
