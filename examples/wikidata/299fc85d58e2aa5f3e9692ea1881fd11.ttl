@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-299fc85d58e2aa5f3e9692ea1881fd11> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/en>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/fr>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/hy>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/nl>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/pt>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/ru>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/uk>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/query_optimization/zh>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Property pathsThe optimizer generally assumes property paths to be more expensive than simple value matches, and usually that’s correct: try to add some simple triples to reduce the amount of values that have to be checked against the path. However, sometimes paths can be fairly efficient, and it’s good to inform the optimizer of that fact. For example, consider the following query for all municipalities in the German state of Lower Saxony:"@en,
    "Chemins des propriétésEn général, l'optimiseur suppose que le chemin des propriétés sont plus coûteux que les simples contrôles des valeurs, ce qui est d'habitude le cas : essayez donc d'ajouter quelques triplets simples pour réduire l'ensemble de valeurs qui doivent être vérifiées par rapport au nombre de chemins. Néanmoins, quelquefois les chemins peuvent être beaucoup plus efficaces et il est bon d'indiquer cela à l'optimiseur. Par exemple, considérez la requête suivante concernant toutes les villes d'Allemagne se trouvant en Basse Saxe :"@fr,
    "Property paths  The optimizer generally assumes property paths to be more expensive than simple value matches, and usually that’s correct: try to add some simple triples to reduce the amount of values that have to be checked against the path.   However, sometimes paths can be fairly efficient, and it’s good to inform the optimizer of that fact. For example, consider the following query for all municipalities in the German state of Lower Saxony:"@hy,
    "Eigenschap padenDe optimizer gaat er van uit dat eigenschapspaden duurder zijn in gebruik dan eenvoudig zoeken op waarden, en dat is gewoonlijk correct: probeer een paar eenvoudige tripels toe te voegen om de hoeveelheid waarden te verminderen die tegen het pad moeten worden gecontroleerd. Soms kunnen paden echter vrij efficiënt zijn, en het is goed om de optimizer daarover te informeren. Denk bijvoorbeeld aan de volgende query voor alle gemeenten in de Duitse staat Niedersachsen:"@nl,
    "TODO"@pt, "Property paths  The optimizer generally assumes property paths to be more expensive than simple value matches, and usually that’s correct: try to add some simple triples to reduce the amount of values that have to be checked against the path.   However, sometimes paths can be fairly efficient, and it’s good to inform the optimizer of that fact. For example, consider the following query for all municipalities in the German state of Lower Saxony:"@ru,
    "Шляхи властивості The optimizer generally assumes property paths to be more expensive than simple value matches, and usually that’s correct: try to add some simple triples to reduce the amount of values that have to be checked against the path.   However, sometimes paths can be fairly efficient, and it’s good to inform the optimizer of that fact. For example, consider the following query for all municipalities in the German state of Lower Saxony:"@uk,
    "属性路径 The optimizer generally assumes property paths to be more expensive than simple value matches, and usually that’s correct: try to add some simple triples to reduce the amount of values that have to be checked against the path.   However, sometimes paths can be fairly efficient, and it’s good to inform the optimizer of that fact. For example, consider the following query for all municipalities in the German state of Lower Saxony:"@zh;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?item ?itemLabel WHERE {
  ?item wdt:P31/wdt:P279* wd:Q262166;
        wdt:P131+ wd:Q1197.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?item ?itemLabel WHERE {
  ?item wdt:P31/wdt:P279* wd:Q262166;
        wdt:P131+ wd:Q1197.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
