@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-ea53e6c35a36ccdcc6446a556d95484a> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2020/02>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "List of all partnerships in the district of OffenbachI‘d like to get a query that return a list of all twinning partnerships of all levels of contained administrative territories of: District of Offenbach Q7912 contains administrative territorial entity P150 twinned administrative body P190 The problem that I see, is that the P150 can contain further P150 and that P190 can appear in all of these levels...  10:35, 19 February 2020 (UTC)) talk (Dichter—: You use property paths when something can happen at multiple levels in a hierarcy. In this case the * after wdt:P150 menaing 0 or more recursions of the property:Dichter@"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?item ?itemLabel ?twin ?twinLabel
WHERE 
{
  wd:Q7912 wdt:P150* ?item.
  ?item wdt:P190 ?twin.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?item ?itemLabel ?twin ?twinLabel
WHERE 
{
  wd:Q7912 wdt:P150* ?item.
  ?item wdt:P190 ?twin.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
