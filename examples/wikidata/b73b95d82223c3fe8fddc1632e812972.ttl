@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-b73b95d82223c3fe8fddc1632e812972> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/ar>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/be-tarask>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/ca>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/cs>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/da>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/de>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/en-gb>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/eo>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/es>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/eu>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/hy>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/id>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/it>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/ja>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/ko>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/lb>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/lt>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/ms>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/pl>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/pt-br>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/ro>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/ru>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/si>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/th>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/tr>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/uk>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/vec>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment """title: <span lang=\"en\" dir=\"ltr\" class=\"mw-content-ltr\">Recent events</span>
SELECT ?event ?eventLabel ?date
WITH {
  SELECT DISTINCT ?event ?date
  WHERE {
    # find events
    ?event wdt:P31/wdt:P279* wd:Q1190554.
    # with a point in time or start date
    OPTIONAL { ?event wdt:P585 ?date. }
    OPTIONAL { ?event wdt:P580 ?date. }
    # but at least one of those
    FILTER(BOUND(?date) && DATATYPE(?date) = xsd:dateTime).
    # not in the future, and not more than 31 days ago
    BIND(NOW() - ?date AS ?distance).
    FILTER(0 <= ?distance && ?distance < 31).
  }
  LIMIT 150
} AS %i
WHERE {
  INCLUDE %i
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],mul,en\" . }
}"""@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
#title: <span lang=\"en\" dir=\"ltr\" class=\"mw-content-ltr\">Recent events</span>
SELECT ?event ?eventLabel ?date
WHERE {
   {
  SELECT DISTINCT ?event ?date
  WHERE {
    # find events
    ?event wdt:P31/wdt:P279* wd:Q1190554.
    # with a point in time or start date
    OPTIONAL { ?event wdt:P585 ?date. }
    OPTIONAL { ?event wdt:P580 ?date. }
    # but at least one of those
    FILTER(BOUND(?date) && DATATYPE(?date) = xsd:dateTime).
    # not in the future, and not more than 31 days ago
    BIND(NOW() - ?date AS ?distance).
    FILTER(0 <= ?distance && ?distance < 31).
  }
  LIMIT 150
}  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],mul,en\" . }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """#title: <span lang=\"en\" dir=\"ltr\" class=\"mw-content-ltr\">Recent events</span>
SELECT ?event ?eventLabel ?date
WITH {
  SELECT DISTINCT ?event ?date
  WHERE {
    # find events
    ?event wdt:P31/wdt:P279* wd:Q1190554.
    # with a point in time or start date
    OPTIONAL { ?event wdt:P585 ?date. }
    OPTIONAL { ?event wdt:P580 ?date. }
    # but at least one of those
    FILTER(BOUND(?date) && DATATYPE(?date) = xsd:dateTime).
    # not in the future, and not more than 31 days ago
    BIND(NOW() - ?date AS ?distance).
    FILTER(0 <= ?distance && ?distance < 31).
  }
  LIMIT 150
} AS %i
WHERE {
  INCLUDE %i
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],mul,en\" . }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
