@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-ed982701513a59b1d1258eaa5a6c8bba> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User:TweetsFactsAndQueries/A_Guide_To_WDQS/Staging>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/ar>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/da>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/en>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/en-gb>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/he>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/hy>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/ja>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/lb>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/nl>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/ru>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/sv>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/szl>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/tr>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/uk>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "، لنذهب مع الثاني في الوقت الحالي. ?child يجب أن يكون له الوالد/الأب باخ، تقول الثالثة أن باخ يجب أن يكون الطفل ?childتقول أول ثلاثيتين أن  P:P22، والخاصية التي تحدد اسم الأب هي Q1339 عن العنصر وننسخ الرقم Q للنتيجة التي يبدو أنها العنصر الذي نبحث عنه (على أساس الوصف، على سبيل المثال)، للعثور على معرف خاصية; نفعل نفس الشيء، ولكن ابحث عن \"P:مصطلح البحث\" بدلا من \"مصطلح البحث\"، والذي يحدد البحث إلى الخصائص، هذا يخبرنا أن الملحن الشهير يوهان سيباستيان باخ هو نبحث، إلخ.) بدلا من ذلك، يتم تعيين معرف لعناصر وخصائص ويكي بيانات، للعثور على المعرف لعنصر; نحن ، الحفرة الزئبقية البلدية الفرنسية، لقب، وقد يشير \"باخ\" أيضا إلى رسام ألمانيما الذي يجب عمله حتى يتم تحويله إلى استعلام خدمة استعلام ويكي بيانات ملائم؟ في ويكي بيانات، لا يتم تحديد العناصر والخصائص بواسطة أسماء يمكن قراءتها بواسطة الإنسان مثل \"الأب\" (خاصية) أو \"باخ\" (عنصر). (لسبب وجيه: \"يوهان سيباستيان باخ\" هو أيضا اسم . (لكن هذا ينطبق فقط على القيم الثابتة، لا تحصل المتغيرات على بادئة!) wdt:، وخصائص تحتوي على wd:وأخيرا وليس آخرا، نحتاج إلى تضمين البادئات، بالنسبة لمضاعفات خدمة استعلام ويكي بيانات البسيطة، يجب أن تبدأ العناصر بـبوضع هذا الأمر معا، نصل إلى أول طلب بحث في أول استعلام خدمة استعلام ويكي بيانات صحيح:"@ar,
    ". Let’s go with the second one for now. ?child must have the parent/father Bach; the third says that Bach must have the child ?childThe first two triples say that the   . P:P22, and the property to designate an item’s father is Q1339 for the item and copy the Q-number of the result that sounds like it’s the item we’re looking for (based on the description, for example). To find the identifier for a property, we do the same, but search for “P:search term” instead of just “search term”, which limits the search to properties. This tells us that the famous composer Johann Sebastian Bach is search, etc.) Instead, Wikidata items and properties are assigned an identifier. To find the identifier for an item, we Mercury crater, the French commune, the surname, and “Bach” might also refer to the German painterSo what remains to be done in order to turn this into a proper WDQS query? On Wikidata, items and properties are not identified by human-readable names like “father” (property) or “Bach” (item). (For good reason: “Johann Sebastian Bach” is also the name of a   . (But this only applies to fixed values – variables don’t get a prefix!) wdt:, and properties with wd:And last but not least, we need to include prefixes. For simple WDQS triples, items should be prefixed with   Putting this together, we arrive at our first proper WDQS query:"@da,
    ". Let’s go with the second one for now. ?child must have the parent/father Bach; the third says that Bach must have the child ?childThe first two triples say that the . P:P22, and the property to designate an item’s father is Q1339 for the item and copy the Q-number of the result that sounds like it’s the item we’re looking for (based on the description, for example). To find the identifier for a property, we do the same, but search for “P:search term” instead of just “search term”, which limits the search to properties. This tells us that the famous composer Johann Sebastian Bach is search, etc.) Instead, Wikidata items and properties are assigned an identifier. To find the identifier for an item, we Mercury crater, the French commune, the surname, and “Bach” might also refer to the German painterSo what remains to be done in order to turn this into a proper WDQS query? On Wikidata, items and properties are not identified by human-readable names like “father” (property) or “Bach” (item). (For good reason: “Johann Sebastian Bach” is also the name of a . (But this only applies to fixed values – variables don’t get a prefix!) wdt:, and properties with wd:And last but not least, we need to include prefixes. For simple WDQS triples, items should be prefixed with Putting this together, we arrive at our first proper WDQS query:"@en,
    ". Let’s go with the second one for now. ?child must have the parent/father Bach; the third says that Bach must have the child ?childThe first two triples say that the . P:P22, and the property to designate an item’s father is Q1339 for the item and copy the Q-number of the result that sounds like it’s the item we’re looking for (based on the description, for example). To find the identifier for a property, we do the same, but search for “P:search term” instead of just “search term”, which limits the search to properties. This tells us that the famous composer Johann Sebastian Bach is search, etc.) Instead, Wikidata items and properties are assigned an identifier. To find the identifier for an item, we Mercury crater, the French commune, the surname, and “Bach” might also refer to the German painterSo what remains to be done in order to turn this into a proper WDQS query? On Wikidata, items and properties are not identified by human-readable names like “father” (property) or “Bach” (item). (For good reason: “Johann Sebastian Bach” is also the name of a . (But this only applies to fixed values – variables don’t get a prefix!) wdt:, and properties with wd:And last but not least, we need to include prefixes. For simple WDQS triples, items should be prefixed with Putting this together, we arrive at our first proper WDQS query:"@en-GB,
    ". בואו נמשיך עם האפשרות השנייה כרגע. ?child חייב להיות הורה/אבא בשם Bach, השלישית טוענת של־Bach יש את הצאצא ‎?childשתי השלישיות הראשונות טוענות של־‎. P:P22, ושהמאפיין להקצאת הורה לפריט הוא Q1339 את הפריט ולהעתיק את מספר ה־Q של התוצאה שנשמעת כמו הפריט שאנחנו מחפשים (לפי התיאור למשל). כדי למצוא מזהה של מאפיין, נעשה את אותו הדבר, אך נחפש אחר „‪P:<ביטוי לחיפוש>‬” במקום רק „ביטוי לחיפוש”, מה שיגביל את החיפוש למאפיינים. כך נוכל למצוא שהמלחין המפורסם יוהאן סבסטיאן באך מיוצג על ידי לחפש וכן הלאה). במקום, לפריטים ולמאפיינים בוויקינתונים מוקצים מזהים. כדי למצוא מזהה של פריט עלינו מכתש בכוכב חמה, קהילה צרפתית, שם משפחה, ו„באך” יכול גם להיות צייר גרמניאם כן, מה צריך לעשות כדי להפוך את זה לשאילתה תקפה של WQDS? בוויקינתונים פריטים ומאפיינים לא מזוהים בשם שמובן לבני אדם כמו „אבא” (מאפיין) או „באך” (פריט). (יש לכך סיבה טובה: „יוהאן סבסטיאן באך” הוא גם השם של ‎. (אך זה חל רק על ערכים קבועים - משתנים לא מקבלים קידומת!) wdt:‎ לפריטים, ולמאפיינים את wd:ואחרון חביב, צריך לכלול קידומות. לשלישיות פשוטות של WQDS, יש להוסיף קידומת אם נחבר הכול יחד, נגיע לשאילתת ה־WDQS הראויה הראשונה שלנו:"@he,
    ". Let’s go with the second one for now. ?child must have the parent/father Bach; the third says that Bach must have the child ?childThe first two triples say that the   . P:P22, and the property to designate an item’s father is Q1339 for the item and copy the Q-number of the result that sounds like it’s the item we’re looking for (based on the description, for example). To find the identifier for a property, we do the same, but search for “P:search term” instead of just “search term”, which limits the search to properties. This tells us that the famous composer Johann Sebastian Bach is search, etc.) Instead, Wikidata items and properties are assigned an identifier. To find the identifier for an item, we Mercury crater, the French commune, the surname, and “Bach” might also refer to the German painterSo what remains to be done in order to turn this into a proper WDQS query? On Wikidata, items and properties are not identified by human-readable names like “father” (property) or “Bach” (item). (For good reason: “Johann Sebastian Bach” is also the name of a   . (But this only applies to fixed values – variables don’t get a prefix!) wdt:, and properties with wd:And last but not least, we need to include prefixes. For simple WDQS triples, items should be prefixed with   Putting this together, we arrive at our first proper WDQS query:"@hy,
    "を持っていなければならない、と言っています。ここでは2つめのを採用することにしましょう。 ?childは parent/father に Bach を持っていなければならない、と言っています。3つめのは、Bach はその子供に?child最初のふたつのトリプルは、 であることがわかります。 P:P22 であり、そしてある人物の父親を指定するプロパティは Q1339して、（例えば説明文などから）それらしいものが見つかったら、その Q ナンバーをコピーします。プロパティの識別子を見つけるのにも同じことを行いますが、単に検索窓に探している言葉を入力するのではなく、「P:探している言葉」と入力すれば、プロパティに限定して検索を行います。この検索の結果として、あの有名な作曲家のヨハン・ゼバスティアン・バッハは 検索などの名前でもあり、これらを指しているかもしれないからです。） 代わりに、ウィキデータの項目とプロパティには、識別子が割り当てられています。ある項目の識別子を見つけるには、項目を火星のクレーターや、フランスの自治体であるだけでなく、姓の名前でもありますし、「バッハ」は人物のドイツの画家では、これを適切なWDQSクエリに変換するためには、あと何が必要でしょうか。ウィキデータでは、項目やプロパティを特定するために使われているのは、例えば「父親」（プロパティ）とか、「バッハ」（項目）とかいった、人間にわかりやすい名前ではありません。（これにはちゃんとした理由があります。「ヨハン・ゼバスティアン・バッハ」はを、その頭につけなければいけません。（ただしこれは値が決まっているときだけにしてください。変数に接頭辞をつけてはいけません。） wdt:を、そしてプロパティにはwd:最後に忘れてはいけないのが、接頭辞をつけることです。単純なWDQSトリプルでは、項目にはこれをまとめると、初めての正しいWDQSクエリが出来上がります。"@ja,
    ". Let’s go with the second one for now. ?child must have the parent/father Bach; the third says that Bach must have the child ?childThe first two triples say that the   . P:P22, and the property to designate an item’s father is Q1339 for the item and copy the Q-number of the result that sounds like it’s the item we’re looking for (based on the description, for example). To find the identifier for a property, we do the same, but search for “P:search term” instead of just “search term”, which limits the search to properties. This tells us that the famous composer Johann Sebastian Bach is search, etc.) Instead, Wikidata items and properties are assigned an identifier. To find the identifier for an item, we Mercury crater, the French commune, the surname, and “Bach” might also refer to the German painterSo what remains to be done in order to turn this into a proper WDQS query? On Wikidata, items and properties are not identified by human-readable names like “father” (property) or “Bach” (item). (For good reason: “Johann Sebastian Bach” is also the name of a   . (But this only applies to fixed values – variables don’t get a prefix!) wdt:, and properties with wd:And last but not least, we need to include prefixes. For simple WDQS triples, items should be prefixed with   Putting this together, we arrive at our first proper WDQS query:"@lb,
    "moet hebben. Laten we nu de tweede nemen. kind het kindDe eerste twee tripels zeggen dat het kind als ouder/vader Bach moet hebben; de derde zegt dat Bach het  is. P:P22 is, en de eigenschap om de vader van een item te vinden Q1339, enz. ) In plaats daarvan wordt aan Wikidata-artikelen en eigenschappen een identificatiecode toegewezen. de identificator voor een item we zoeken naar het item en kopiëren het Q-nummer van het resultaat dat klinkt alsof het het item is dat we zoeken (gebaseerd op de beschrijving, bijvoorbeeld). Om de identificatiecode voor een eigenschap te vinden, doen we hetzelfde, maar zoeken we naar \"P:zoekterm\" in plaats van gewoon \"zoekterm\", wat de zoekopdracht beperkt tot eigenschappen. Dit vertelt ons dat de beroemde componist Johann Sebastian Bach Mercuriuskrater, de Franse commune, de achternaam, en \"Bach\" kan ook verwijzen naar de Duitse schilderWat moet er dan nog gedaan worden om dit in een goede WDQS-vraag te veranderen? Op Wikidata worden items en eigenschappen niet geïdentificeerd door door menselijk leesbare namen zoals \"vader\" (eigendom) of \"Bach\" (item). (Met goede reden: \"Johann Sebastian Bach\" is ook de naam van een :. (Maar dit geldt alleen voor vaste waarden - variabelen krijgen geen prefix!) wdt, en de eigenschappen met wd:En last but not least, we moeten voorvoegsels toevoegen. Voor eenvoudige WDQS-tripels moeten de items worden voorafgegaan metSamengevat wordt onze eerste WDQS-query:"@nl,
    ". Давайте присмотримся ко второму. ?child должен быть родитель/отец Бах; третий говорит, что у Баха должен быть ребенок ?childПервые два триплета говорят, что у . P:P22, а свойство для обозначения отца предмета - это Q1339 элемент и копируем Q-номер результата, описание которого походит на элемент, который мы ищем. Чтобы найти идентификатор для свойства, мы делаем то же самое, но ищем \"P:search term\" вместо просто \"search term\" (соответственно, \"P:отец\" и \"Бах\"), что ограничивает поиск именно поиском в свойствах. В результате узнаём, что знаменитый композитор Иоганн Себастьян Бах имеет код ищем и т. д.) Вместо этого, элементам и свойствам в Викиданных присваивается идентификатор. Чтобы найти идентификатор для элемента мы кратер Меркурия, и французская коммуна, и фамилия, и немецкого художникаИтак, что еще нужно сделать, чтобы превратить это в правильный запрос WDQS? На Викиданных элементы и свойства не обозначаются человекочитаемыми именами, такими как \"отец\" (свойство) или \"Бах\" (элемент). (по уважительной причине: \"Иоганн Себастьян Бах\" это и имя  . (But this only applies to fixed values – variables don’t get a prefix!) wdt:, and properties with wd:And last but not least, we need to include prefixes. For simple WDQS triples, items should be prefixed with   Putting this together, we arrive at our first proper WDQS query:"@ru,
    ". Let’s go with the second one for now. ?child must have the parent/father Bach; the third says that Bach must have the child ?childThe first two triples say that the   . P:P22, and the property to designate an item’s father is Q1339 for the item and copy the Q-number of the result that sounds like it’s the item we’re looking for (based on the description, for example). To find the identifier for a property, we do the same, but search for “P:search term” instead of just “search term”, which limits the search to properties. This tells us that the famous composer Johann Sebastian Bach is search, etc.) Instead, Wikidata items and properties are assigned an identifier. To find the identifier for an item, we Mercury crater, the French commune, the surname, and “Bach” might also refer to the German painterSo what remains to be done in order to turn this into a proper WDQS query? On Wikidata, items and properties are not identified by human-readable names like “father” (property) or “Bach” (item). (For good reason: “Johann Sebastian Bach” is also the name of a   . (But this only applies to fixed values – variables don’t get a prefix!) wdt:, and properties with wd:And last but not least, we need to include prefixes. For simple WDQS triples, items should be prefixed with   Putting this together, we arrive at our first proper WDQS query:"@sv,
    ". Let’s go with the second one for now. ?child must have the parent/father Bach; the third says that Bach must have the child ?childThe first two triples say that the   . P:P22, and the property to designate an item’s father is Q1339 for the item and copy the Q-number of the result that sounds like it’s the item we’re looking for (based on the description, for example). To find the identifier for a property, we do the same, but search for “P:search term” instead of just “search term”, which limits the search to properties. This tells us that the famous composer Johann Sebastian Bach is search, etc.) Instead, Wikidata items and properties are assigned an identifier. To find the identifier for an item, we Mercury crater, the French commune, the surname, and “Bach” might also refer to the German painterSo what remains to be done in order to turn this into a proper WDQS query? On Wikidata, items and properties are not identified by human-readable names like “father” (property) or “Bach” (item). (For good reason: “Johann Sebastian Bach” is also the name of a   . (But this only applies to fixed values – variables don’t get a prefix!) wdt:, and properties with wd:And last but not least, we need to include prefixes. For simple WDQS triples, items should be prefixed with   Putting this together, we arrive at our first proper WDQS query:"@szl,
    "sahibi Bach aratmaktadır. İkinci örneği kullanarak devam edelim. ?çocuk aratırken, üçüncü Üçlü ?çocukilk iki Üçlü Bach isminde ebeveyni/babası olan  olduğunu gösterir. P:P22 olduğunu, ve babasını tanımlayan özelliğin tanımlama numarasının Q1339'dan özneyi bulup, (detaylarını okuyup) doğru olduğunu düşündüğünüz sonucun Q-numarasını kopyalayın. Bir özelliğin tanımlama numarasını bulmak için aynı şeyi yapabiliriz, lakin bu sefer arama kriterini ”arama kriteri” yerine “P:arama kriteri” şeklinde düzenlemeniz gerekmektedir. Bu arama sonucu bize ünlü bestekar Johann Sebastian Bach'ın tanımlama numarasının ara'ne, vb) ait olabilir. Bu yüzden Vikiveri özne ve özelliklere bir tanımlama numarası atamaktadır. Bu tanımlama numaralarını bulmak için, Merkür krateri'ne, Fransız komünü'na, soyadı'a, veya ”Bach” Alman ressamPeki bunları düzgün bir WDQS sorgusuna çevirmek için ne yapmalıyız? Vikiveri'de özneler ve özellikler, ”baba” (özellik) ya da ”Bach” (özne) gibi insanlar tarafından okunabilir isimler tarafından tanımlanmazlar. (Bunun iyi bir nedeni var; ”Johann Sebastian Bach”  . (But this only applies to fixed values – variables don’t get a prefix!) wdt:, and properties with wd:And last but not least, we need to include prefixes. For simple WDQS triples, items should be prefixed with   Putting this together, we arrive at our first proper WDQS query:"@tr,
    ". Let’s go with the second one for now. ?child must have the parent/father Bach; the third says that Bach must have the child ?childThe first two triples say that the   . P:P22, and the property to designate an item’s father is Q1339 for the item and copy the Q-number of the result that sounds like it’s the item we’re looking for (based on the description, for example). To find the identifier for a property, we do the same, but search for “P:search term” instead of just “search term”, which limits the search to properties. This tells us that the famous composer Johann Sebastian Bach is search, etc.) Instead, Wikidata items and properties are assigned an identifier. To find the identifier for an item, we Mercury crater, the French commune, the surname, and “Bach” might also refer to the German painterSo what remains to be done in order to turn this into a proper WDQS query? On Wikidata, items and properties are not identified by human-readable names like “father” (property) or “Bach” (item). (For good reason: “Johann Sebastian Bach” is also the name of a   . (But this only applies to fixed values – variables don’t get a prefix!) wdt:, and properties with wd:And last but not least, we need to include prefixes. For simple WDQS triples, items should be prefixed with   Putting this together, we arrive at our first proper WDQS query:"@uk;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
SELECT ?child
WHERE
{
# ?child  father   Bach
  ?child wdt:P22 wd:Q1339.
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?child
WHERE
{
# ?child  father   Bach
  ?child wdt:P22 wd:Q1339.
}""";
  schema:target <https://query.wikidata.org/sparql> .
