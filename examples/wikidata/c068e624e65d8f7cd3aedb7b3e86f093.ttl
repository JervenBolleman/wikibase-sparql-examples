@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-c068e624e65d8f7cd3aedb7b3e86f093> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Forum/Archiv/2020/08>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Abfrage über die \"Bezeichnung\" 04:30, 9 August 2020 (UTC)) talk (Derzno finde ich hierzu nicht besonders gut geeignet. --(P131)located in the administrative territorial entity  vorhanden. Gibt es eine Möglichkeit einer Wildcard Suche mit \"Liste der Bodendenkmäler in*\"? Oder zur Not hätte ich eine Liste der ganzen zu suchenden Objekt als Textinput. Sinnvollerweise wäre es diesen Listen dann auch den Ort zuzuweisen. Welche Property wäre hierfür am besten? (Q13406463)Wikimedia list article  mit (P31)instance of Hallo, wie kann ich abfragen, wenn es keine vernünftigen Propertys gibt? Beispiel: Listen der Bau- und Bodendenkmäler in Bayern. Es ist dort nur ein : Eine Liste aller Objekte (oder von Unterkategorien auch pro Landkreis) erhält man beispielsweise mit Petscan:Derzno@ 13:01, 9 August 2020 (UTC)) talk (MisterSynergy. —(P360)is a list of Hier nicht so recht hilfreich, aber grundsätzlich für die Auffindbarkeit von Listen hilfreich ist sicherlich auch , das ist aber in dem Gemeinde-Objekt zu nutzen und verlinkt dort das Listenobjekt. Inverses passt irgendwie nicht so recht, aber abzufragen wäre das wohl.(P1456)list of monuments Mh. Es gibt  12:52, 9 August 2020 (UTC)) talk (Derzno, danke und das hatte ich schon befürchtet. Zumindest über den Vorschlag kriegt man dann mit etwas Datenaufbereitung eine lokale Liste zusammen. Was könnten wir aber machen, dass diese Items auch abfragbar werden? Meine Idee wäre die Gemeinde irgendwie in einem Prop zu verwenden aber welches wäre da passend? So jedenfalls nützen die Daten recht wenig wenn man nichts anfangen und abfragen kann.--MisterSynergy 07:58, 9 August 2020 (UTC)) talk (MisterSynergyMit SPARQL geht eine Wildcard-Suche nicht, aber man kann zahlreiche Orte als Input angeben und dann schauen, welche Listen dabei rausfallen. Ansonsten wäre das auch was für die normale Mediawiki-Suche (das Suchfeld oben rechts). Beide Abfragewege kann man händisch über das Web-UI oder über das API automatisiert nutzen. —How to query Wikidata items using its labels?*  13:08, 9 August 2020 (UTC)) talk (M2k~dewiki --MediaWiki-API-Ergebnis (JSON) MediaWiki-API-Ergebnis Über Petscan und/oder Quickstatements könnten ggf. auch Verwaltungseinheiten in den Objekten ergänzt werden, sodass diese später für SPARQL-Abfragen herangezogen werden können. Am Reiter \"Output\" kann man verschiedene Formate (HTML CSV TSV Wiki JSON PagePile) für die Ausgabe wählen. .Bodendenkmal im Landkreis Günzburg Liste (Baudenkmäler in Bayern) Liste (Bodendenkmäler in Bayern)"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?item ?itemLabel
WHERE { 
  ?item rdfs:label ?itemLabel. 
  FILTER(CONTAINS(LCASE(?itemLabel), \"Liste der Bodendenkmäler\"@de)).
} limit 10""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?item ?itemLabel
WHERE { 
  ?item rdfs:label ?itemLabel. 
  FILTER(CONTAINS(LCASE(?itemLabel), \"Liste der Bodendenkmäler\"@de)).
} limit 10""";
  schema:target <https://query.wikidata.org/sparql> .
