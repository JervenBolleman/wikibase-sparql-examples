@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-b327a317dbe1386b8ea2ac35ce79d522> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/ar>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/be-tarask>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/ca>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/cs>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/da>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/de>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/en>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/en-gb>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/eo>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/es>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/eu>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/fr>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/he>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/hy>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/id>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/it>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/ja>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/ko>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/lb>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/lt>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/ms>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/nl>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/pl>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/pt-br>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/ro>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/ru>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/si>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/sv>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/th>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/tr>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/uk>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/vec>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_query_service/queries/examples/zh>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX psv: <http://www.wikidata.org/prop/statement/value/>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?person ?personLabel ?dob ?dod (xsd:integer(?age_) as ?age)
where {
  # We do a subquery here, because otherwise we'll get a timeout because of the labels
  {
    SELECT DISTINCT ?person ?dob ?dod ?age_
    where {
      ?person wdt:P31 wd:Q5; # Get all humans
        wdt:P106/wdt:P279* wd:Q639669; # That have a musician or a subclass thereof as their occupation
        p:P569 ?dob_st; # death of birth
        p:P570 ?dod_st. # death of death

      ?dob_st psv:P569 [ wikibase:timeValue ?dob; wikibase:timePrecision ?dob_prec ];
        a wikibase:BestRank.
      ?dod_st psv:P570 [ wikibase:timeValue ?dod; wikibase:timePrecision ?dod_prec ];
        a wikibase:BestRank.

      # Only accept date precisions of a day or better, so it doesn't cause problems when we calculate age
      FILTER(?dob_prec >= 11 && ?dod_prec >= 11)

      # Time differences in Blazegraph are counted as days and is xsd:double
      # We then calculate the age by dividing this by the orbital period of Earth
      # This is a shortcut, but it is accurate enough for our purposes
      bind((?dod - ?dob) / 365.2564 as ?age_)

      # And filter by age
      filter(?age_ >= 27.0 && ?age_ < 28.0)
    }
    #LIMIT 1000
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],mul,en\". }
}
ORDER BY desc(?dod) # Order by most recent""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?person ?personLabel ?dob ?dod (xsd:integer(?age_) as ?age)
where {
  # We do a subquery here, because otherwise we'll get a timeout because of the labels
  {
    SELECT DISTINCT ?person ?dob ?dod ?age_
    where {
      ?person wdt:P31 wd:Q5; # Get all humans
        wdt:P106/wdt:P279* wd:Q639669; # That have a musician or a subclass thereof as their occupation
        p:P569 ?dob_st; # death of birth
        p:P570 ?dod_st. # death of death

      ?dob_st psv:P569 [ wikibase:timeValue ?dob; wikibase:timePrecision ?dob_prec ];
        a wikibase:BestRank.
      ?dod_st psv:P570 [ wikibase:timeValue ?dod; wikibase:timePrecision ?dod_prec ];
        a wikibase:BestRank.

      # Only accept date precisions of a day or better, so it doesn't cause problems when we calculate age
      FILTER(?dob_prec >= 11 && ?dod_prec >= 11)

      # Time differences in Blazegraph are counted as days and is xsd:double
      # We then calculate the age by dividing this by the orbital period of Earth
      # This is a shortcut, but it is accurate enough for our purposes
      bind((?dod - ?dob) / 365.2564 as ?age_)

      # And filter by age
      filter(?age_ >= 27.0 && ?age_ < 28.0)
    }
    #LIMIT 1000
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],mul,en\". }
}
ORDER BY desc(?dod) # Order by most recent""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
