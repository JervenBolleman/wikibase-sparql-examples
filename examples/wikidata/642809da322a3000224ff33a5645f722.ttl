@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-642809da322a3000224ff33a5645f722> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User:Metamorforme42/RFC_with_author_as_string>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX bd: <http://www.bigdata.com/rdf#>
PREFIX target: <http://www.wikidata.org/entity/Q212971>

SELECT
  # Number of works with the author
  ?count

  # Author score - 3 points for authoring a work, 1 for being cited
  ?score

  # Author as a string
  ?author

  # Build URL to the Author disambiguator tool
  (URI(CONCAT(
      'https://author-disambiguator.toolforge.org/names_oauth.php?precise=0n&doit=Look+for+author&limit=50&filter=wdt%3AP31+wd%3AQ212971&name=',
      ENCODE_FOR_URI(?author))) AS ?resolver_url)

# Generate a score for each author

WHERE {
   {
  SELECT
    (COUNT(?work) AS ?count)
    ?author
  WHERE {
     {
  SELECT DISTINCT ?work WHERE {
    ?work wdt:P31 target: .
  }
  LIMIT 10000
}    ?work wdt:P2093 ?author .
  }
  GROUP BY ?author
}   {
  SELECT (SUM(?score_) AS ?score) ?author
  WHERE {
    {
      # Assign them 3 points if they are an author of a work on the subject
      SELECT (3 AS ?score_) ?author ?work WHERE {
        ?work wdt:P2093 ?author .
        ?work wdt:P31 target: .
      }
    }
    UNION
    {
      # Assign them 1 point if they are the author of a work that is cited by a work on the subject
      SELECT (1 AS ?score_) ?author ?work WHERE {
        ?work wdt:P2093 ?author .
        ?citing_work wdt:P2860 ?work .
        ?citing_work wdt:P31 target: .
      }
    }
  }
  GROUP BY ?author
}
  # Label the result
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }
}
ORDER BY DESC(?count) DESC(?score)
LIMIT 6000""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """PREFIX target: <http://www.wikidata.org/entity/Q212971>

SELECT
  # Number of works with the author
  ?count

  # Author score - 3 points for authoring a work, 1 for being cited
  ?score

  # Author as a string
  ?author

  # Build URL to the Author disambiguator tool
  (URI(CONCAT(
      'https://author-disambiguator.toolforge.org/names_oauth.php?precise=0n&doit=Look+for+author&limit=50&filter=wdt%3AP31+wd%3AQ212971&name=',
      ENCODE_FOR_URI(?author))) AS ?resolver_url)
WITH {
  SELECT DISTINCT ?work WHERE {
    ?work wdt:P31 target: .
  }
  LIMIT 10000
} AS %works
WITH {
  SELECT
    (COUNT(?work) AS ?count)
    ?author
  WHERE {
    INCLUDE %works
    ?work wdt:P2093 ?author .
  }
  GROUP BY ?author
} AS %result

# Generate a score for each author
WITH {
  SELECT (SUM(?score_) AS ?score) ?author
  WHERE {
    {
      # Assign them 3 points if they are an author of a work on the subject
      SELECT (3 AS ?score_) ?author ?work WHERE {
        ?work wdt:P2093 ?author .
        ?work wdt:P31 target: .
      }
    }
    UNION
    {
      # Assign them 1 point if they are the author of a work that is cited by a work on the subject
      SELECT (1 AS ?score_) ?author ?work WHERE {
        ?work wdt:P2093 ?author .
        ?citing_work wdt:P2860 ?work .
        ?citing_work wdt:P31 target: .
      }
    }
  }
  GROUP BY ?author
} AS %scores

WHERE {
  INCLUDE %result
  INCLUDE %scores

  # Label the result
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }
}
ORDER BY DESC(?count) DESC(?score)
LIMIT 6000""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
