@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-0b431072f4e3083512d2dac9bcfdbad7> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2020/10>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX prov: <http://www.w3.org/ns/prov#>
PREFIX pr: <http://www.wikidata.org/prop/reference/>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?item ?itemLabel ?property ?propertyLabel ?value ?valueLabel ?statement
WHERE 
{
  ?item ?ppp ?statement .               # there is a triple having ?statement as its object
  ?statement ?qqq ?value.               # there is a triple having ?statement as its subject
                                        # we need ?ppp to be a p:Pnnn and ?qqq to be a ps:Pnnn predicate
                                        # so that we know we're in the right part of the data model to be able
                                        # to test for a property statement reference. So... 
  
  ?property a wikibase:Property ;       # there is a property
     wikibase:claim ?ppp ;              # which has a predicate in the form p:Pnnn and an object ?ppp
                                        # so the variable ?ppp is a p:Pnnn predicate, and ?statement must be a property statement
     wikibase:statementProperty ?qqq .  # and which has a predicate in the form of ps:Pnnn and an object ?qqq
                                        # so the variable ?qqq is a ps:Pnnn predicate, and ?value must be the value for this property statement 
  
  ?statement prov:wasDerivedFrom ?autre_statement. #d'après la source ...   # and as you know, the property statement has at least one reference 
  ?autre_statement pr:P248 wd:Q100443909 .                                  # and the reference is 'stated in' 'Q100443909'
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?item ?itemLabel ?property ?propertyLabel ?value ?valueLabel ?statement
WHERE 
{
  ?item ?ppp ?statement .               # there is a triple having ?statement as its object
  ?statement ?qqq ?value.               # there is a triple having ?statement as its subject
                                        # we need ?ppp to be a p:Pnnn and ?qqq to be a ps:Pnnn predicate
                                        # so that we know we're in the right part of the data model to be able
                                        # to test for a property statement reference. So... 
  
  ?property a wikibase:Property ;       # there is a property
     wikibase:claim ?ppp ;              # which has a predicate in the form p:Pnnn and an object ?ppp
                                        # so the variable ?ppp is a p:Pnnn predicate, and ?statement must be a property statement
     wikibase:statementProperty ?qqq .  # and which has a predicate in the form of ps:Pnnn and an object ?qqq
                                        # so the variable ?qqq is a ps:Pnnn predicate, and ?value must be the value for this property statement 
  
  ?statement prov:wasDerivedFrom ?autre_statement. #d'après la source ...   # and as you know, the property statement has at least one reference 
  ?autre_statement pr:P248 wd:Q100443909 .                                  # and the reference is 'stated in' 'Q100443909'
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
