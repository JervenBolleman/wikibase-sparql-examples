@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-e46bc44be0ec760da71bf7365cbf7754> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User:Infovarius/Queries>, <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2017/05>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?prop ?propLabel ?count ?qualifiers WHERE {
  {
    SELECT ?p (COUNT(DISTINCT ?item) AS ?count) (GROUP_CONCAT(DISTINCT ?q; separator=', ') AS ?qualifiers) WHERE {
      ?item wdt:P31 wd:Q276; ?p [] .
      ?p ^wikibase:claim [] .
      OPTIONAL {
        {
          SELECT ?p (CONCAT(STRAFTER(STR(?qualifier), STR(pq:)), ': ', STR(COUNT(DISTINCT ?statement))) AS ?q) WHERE {
            [] wdt:P31 wd:Q276; ?p ?statement .
            ?p ^wikibase:claim [] .
            ?statement ?qualifier [] .
            ?qualifier ^wikibase:qualifier [] .
          } GROUP BY ?p ?qualifier
        } .
      } .
    } GROUP BY ?p
  } .
  ?prop wikibase:claim ?p .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" } .
} ORDER BY DESC(?count)""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?prop ?propLabel ?count ?qualifiers WHERE {
  {
    SELECT ?p (COUNT(DISTINCT ?item) AS ?count) (GROUP_CONCAT(DISTINCT ?q; separator=', ') AS ?qualifiers) WHERE {
      ?item wdt:P31 wd:Q276; ?p [] .
      ?p ^wikibase:claim [] .
      OPTIONAL {
        {
          SELECT ?p (CONCAT(STRAFTER(STR(?qualifier), STR(pq:)), ': ', STR(COUNT(DISTINCT ?statement))) AS ?q) WHERE {
            [] wdt:P31 wd:Q276; ?p ?statement .
            ?p ^wikibase:claim [] .
            ?statement ?qualifier [] .
            ?qualifier ^wikibase:qualifier [] .
          } GROUP BY ?p ?qualifier
        } .
      } .
    } GROUP BY ?p
  } .
  ?prop wikibase:claim ?p .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" } .
} ORDER BY DESC(?count)""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
