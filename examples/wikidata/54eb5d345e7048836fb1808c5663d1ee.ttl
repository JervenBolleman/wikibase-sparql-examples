@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-54eb5d345e7048836fb1808c5663d1ee> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/User_talk:Peter_F._Patel-Schneider>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "RfC ]reply[17:08, 20 September 2024 (UTC)) talk (Vicarage, I tried to ping you there. https://www.wikidata.org/wiki/Wikidata:Requests_for_comment/object_vs_design_class_vs_functional_class_for_manufactured_objectsSee , perhaps just calling it \"design\". My plan of merging all the *_model items might be scuppered by their wikipedia articles, but there is plenty of work just applying the rules we've agreed to existing designs, for example many of the 3000 results here are wrong(P289)vessel class I like the idea of broadening  ]reply[22:30, 20 September 2024 (UTC)) talk (Peter F. Patel-SchneiderI fixed up (I think) the last bit of the first part and the first bit of the second part. I'm not sure that the rest exactly follows and I may be able to work it over tomorrow.  ]reply[22:27, 20 September 2024 (UTC)) talk (VicarageI think that's a good interpretation of my idea, I'll try to incorporate it in the RFC, but going out tomorrow. As far as part 3 goes, I agree from a purist standpoint an object merely needs to be an instance of a design, but when that design label is \"Project 17\" as the Russians call things, it makes it much more readable to have a P31 of the functional class there as the most important property any object has. I think we are spoilt with ship classes that have the form Flower-class corvette (one task I plan is to bulk replace all P31 ship with a P31 of the ship's vessel_class P279, which shows the redundancy), too many design classes are obscure or have different conventions, like adding manufactured for aircraft, but never fighter or bomber. And for every Sony Walkman we have many CDP-34A  ]reply[22:05, 20 September 2024 (UTC)) talk (Peter F. Patel-SchneiderI'm going to fix up the first part of the RfC to better match my current understanding.  I'm not so keen on the third part. It might make things clearer, but if a model is a subclass of a functional class then it seems to me that the model should have as instances the instances of the functional class that belong to the model. I know that the ship domain uses vessel class, and that vessel class is a subproperty of P31. I think I could only be convinced to support this if Pdesign was a subproperty of P31. This part has, I think, the biggest effect on users of Wikidata. (I note that it might be possible to take over Pvessel class and rename it.) The second part has positives and negatives. On the positive side it allows for a simpler setup, particularly if there is the extra class as well. This would allow, for example, Spitfire to just be categorized as an instance of design it the creator did not need it to be a family or series or whatever. On the negative side it is harder to state what relationships are not allowed between design classes. There also may be a loss in expressive power but I'm not finding anything lost just yet. I fully agree with the first part. This is the only way to go. Any violation of this currently in Wikidata is just an error. This would best be a model, but might be a family or series or ....Use a new property to relate manufactured objects to their design class  No \"higher\" design class can be P279 a \"lower\" design class, e.g., no family can be P279 a model. Create a class (potentially just called design) that is a superclass of all these lasses. (I added this, see below.)Distinguish between models, families, series, etc by creating a single class for each. (Maybe only model and family?)  Each design class is a (potentially indirect?) subclass of at least one functional class. Each design class can be a P279 to other design classes.Collapse the various design class hierarchies into subsidiary P279 hierarchies.  This implies that no design class is P31 to any functional classThe only P31 a functional class are actual manufactured objects.  No physical objects are P279 any functional class. No functional class is P279 a design class (or a manufactured object, but there shouldn't be any of these currently in Wikidata).Have functional class P279 hierarchies over manufactured objects, probably a single hierarchy rooted in something like manufactured object. The proposal as I see it is to  Categorizing designs and models is difficult because they need to be placed in separate P279 hierarchies that are generally only partial reflections of the functional classes. (I have to rewrite the last bit of the introduction to better state this.) Designs and models are being placed as P31 to functional classes.As far as I can see there are two problems:   OK, I think I understand better after modifying the problem statement and the re-reading the solution.Vicarage@ ]reply[20:44, 20 September 2024 (UTC)) talk (Peter F. Patel-Schneider I've only really completely looked at the first section. The rest may have to wait for tomorrow. (I may have to do some things for my brother shortly.) But I may also be able to take a look at it this evening. Vicarage@ ]reply[20:41, 20 September 2024 (UTC)) talk (VicarageThanks for doing that. So do you think its a workable plan, and can be applied to watercraft/military stuff (what I really care about), if not the world? I wonder what pushback we will get from people who like ship/ship_class/ship_type triplets, and don't understand you only need ship.  ]reply[20:30, 20 September 2024 (UTC)) talk (Peter F. Patel-Schneider OK, I did that. I also rewrote a bunch of the first half of the RfC as I found it confusing. Take a look. Vicarage@ ]reply[18:46, 20 September 2024 (UTC)) talk (VicarageI'd restrict it to manufactured items and their designs, so not one-offs like artworks (which I only mentioned to show it wouldn't be affected). Go ahead and modify the RFC.  ]reply[18:40, 20 September 2024 (UTC)) talk (Peter F. Patel-SchneiderShould I just edit the RfC?   I was thinking of restricting this to physical objects created by humans. I think that that would better focus the discussion, as I can envision some thinking about how Mount Everest (for example) would fit into the discussion.Vicarage@"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT DISTINCT ?item ?itemLabel ?article WHERE {
 SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
  {
   SELECT DISTINCT ?item ?article WHERE {
     
           {?item wdt:P279* wd:Q10929058}
    UNION {?item wdt:P279* wd:Q811701}
   }
  }
 }""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT DISTINCT ?item ?itemLabel ?article WHERE {
 SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
  {
   SELECT DISTINCT ?item ?article WHERE {
     
           {?item wdt:P279* wd:Q10929058}
    UNION {?item wdt:P279* wd:Q811701}
   }
  }
 }""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
