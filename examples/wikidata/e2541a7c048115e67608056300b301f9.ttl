@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-e2541a7c048115e67608056300b301f9> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2022/03>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "TODO"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?claims (COUNT(?claims) as ?no_of_rivers) WHERE
{
   {
  SELECT ?river (count(?item) as ?items) (count(distinct ?item) as ?claims) WHERE {
     {
  SELECT distinct ?river WHERE {
    INCLUDE %i
    ?river wdt:P31/wdt:P279* wd:Q55659167. hint:Prior hint:gearing \"forward\".
    } }    OPTIONAL { ?item ?predicate ?river .
    ?property wikibase:directClaim ?predicate . } 
    } group by ?river }  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } 
} GROUP BY ?claims ORDER BY DESC(?claims)""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?claims (COUNT(?claims) as ?no_of_rivers) WITH {
  SELECT distinct ?river WHERE {
  #  VALUES ?river {wd:Q19721}
   ?river wdt:P131/wdt:P131 wd:Q22 . 
    } } as %i
WITH {
  SELECT distinct ?river WHERE {
    INCLUDE %i
    ?river wdt:P31/wdt:P279* wd:Q55659167. hint:Prior hint:gearing \"forward\".
    } } as %j
WITH {
  SELECT ?river (count(?item) as ?items) (count(distinct ?item) as ?claims) WHERE {
    INCLUDE %j
    OPTIONAL { ?item ?predicate ?river .
    ?property wikibase:directClaim ?predicate . } 
    } group by ?river } as %k
WHERE
{
  INCLUDE %k
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } 
} GROUP BY ?claims ORDER BY DESC(?claims)""";
  schema:target <https://query.wikidata.org/sparql> .
