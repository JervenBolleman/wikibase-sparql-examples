@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-69c96d23892ff56e41254904f2d442d6> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/ar>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/ca>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/da>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/en>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/en-gb>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/he>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/hy>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/ja>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/lb>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/nl>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/pl>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/ru>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/sv>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/szl>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/tr>,
    <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/uk>, <https://www.wikidata.org/wiki/Wikidata:SPARQL_tutorial/zh>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "HAVING في ويكي بيانات. (P1104)number of pages ، والذي يؤدي إلى تحريف النتائج قليلا، لإزالة القيم الخارجية من هذا القبيل; يمكننا محاولة تحديد الناشرين الذين نشروا كتابين على الأقل مع بيانات (Q3775610)Grande dizionario della lingua italiana ، (P1104)number of pages ) نشر كتابا واحدًا فقط مع بيان (Q4002388)UTET إضافة صغيرة لهذا الاستعلام الأخير: إذا نظرت إلى النتائج، قد تلاحظ أن أعلى نتيجة لها معدل كبير شنيع، أكثر من عشرة أضعاف المركز الثاني يكشف جزءً من التحقيق أن هذا يرجع إلى أن الناشر (: FILTER وتحدث تعبيرا مثل GROUP BY ، التي يمكن وضعها مباشرة بعد جملة HAVING ، ولكن في هذه الحالة، نريد تقييدها استنادا إلى المجموعة (عدد الكتب)، وليست أية نتيجة فردية، يتم هذا باستخدام جملة FILTERكيف نفعل ذلك؟ عادةً، نقوم بتقييد النتائج باستخدام جملة"@ar,
    "HAVING a Wikidata. (P1104)number of pages , fet que esbiaixa una mica el resultat. Per a treure valors atípics com aquest, podem intentar seleccionar només editors que hagin editat com a mínim dos llibres amb la declaració (Q3775610)Grande dizionario della lingua italiana , (P1104)number of pages ) només ha publicat un llibre amb la declaració (Q4002388)UTET Un petit afegitó a aquesta consulta: si mirem els resultats, veurem que el resultat superior té una mitjana extremadament alta, de l'ordre de deu cops la del segon lloc. Una mica d'investigació revela que això és perquè aquell editor (: FILTER i agafa una expressió tal i com fa GROUP BY, la qual es pot posar just després de la clàusula HAVING però, en aquest cas, volem restringir en funció de l'agrupació (el nombre de llibres), no per cap resultat individual. Així, ho farem amb la clàusula FILTERCom ho fem això? Podem restringir els resultats amb la clàusula"@ca,
    "HAVING   statements on Wikidata. (P1104)number of pages , which skews the results a bit. To remove outliers like that, we could try to select only publishers that published at least two books with (Q3775610)Grande dizionario della lingua italiana  statement, (P1104)number of pages ) only published a single book with a (Q4002388)UTET A small addendum to that last query – if you look at the results, you might notice that the top result has an outrageously large average, over ten times that of the second place. A bit of investigation reveals that this is because that publisher (   does: FILTER clause and takes an expression just like GROUP BY clause, which can be placed right after a HAVING clause, but in this case we want to restrict based on the group (the number of books), not any individual result. This is done with a FILTERHow do we do that? Normally, we restrict results with a"@da,
    "HAVING statements on Wikidata. (P1104)number of pages , which skews the results a bit. To remove outliers like that, we could try to select only publishers that published at least two books with (Q3775610)Grande dizionario della lingua italiana  statement, (P1104)number of pages ) only published a single book with a (Q4002388)UTET A small addendum to that last query – if you look at the results, you might notice that the top result has an outrageously large average, over ten times that of the second place. A bit of investigation reveals that this is because that publisher ( does: FILTER clause and takes an expression just like GROUP BY clause, which can be placed right after a HAVING clause, but in this case we want to restrict based on the group (the number of books), not any individual result. This is done with a FILTERHow do we do that? Normally, we restrict results with a"@en,
    "HAVING statements on Wikidata. (P1104)number of pages , which skews the results a bit. To remove outliers like that, we could try to select only publishers that published at least two books with (Q3775610)Grande dizionario della lingua italiana  statement, (P1104)number of pages ) only published a single book with a (Q4002388)UTET A small addendum to that last query – if you look at the results, you might notice that the top result has an outrageously large average, over ten times that of the second place. A bit of investigation reveals that this is because that publisher ( does: FILTER clause and takes an expression just like GROUP BY clause, which can be placed right after a HAVING clause, but in this case we want to restrict based on the group (the number of books), not any individual result. This is done with a FILTERHow do we do that? Normally, we restrict results with a"@en-GB,
    "HAVING (שיש לו) בוויקינתונים. (P1104)number of pages , מה שמטה קצת את התוצאות. כדי להסיר חריגות כאלה, אפשר לבחור רק מוציאים לאור שהוציא לפחות שני ספרים עם קביעות מסוג (Q3775610)Grande dizionario della lingua italiana , (P1104)number of pages ) פרסם רק ספר אחד עם קביעה מסוג (Q4002388)UTET תוספת קטנה לשאילתה האחרונה - אם מסתכלים על התוצאות, אפשר להבחין שלתוצאה המובילה יש ממוצע גדול בצורה מוגזמת, יותר מפי עשרה מהמקום השני. חקירה שטחית חושפת שזה כיוון שאותו מוציא לאור (: FILTER והיא מקבלת ביטוי באותו האופן כמו GROUP BY (שיש לו), שאפשר להוסיף מייד לאחר הפסוקית HAVING, אבל במקרה הזה אנחנו רוצים להגביל לפי הקבוצה (מספר הספרים), לא על כל תוצאה בנפרד. אפשר לעשות את זה עם פסוקית FILTERאיך עושים את זה? בדרך כלל, נגדיל את התוצאות עם פסוקית"@he,
    "HAVING   statements on Wikidata. (P1104)number of pages , which skews the results a bit. To remove outliers like that, we could try to select only publishers that published at least two books with (Q3775610)Grande dizionario della lingua italiana  statement, (P1104)number of pages ) only published a single book with a (Q4002388)UTET A small addendum to that last query – if you look at the results, you might notice that the top result has an outrageously large average, over ten times that of the second place. A bit of investigation reveals that this is because that publisher (   does: FILTER clause and takes an expression just like GROUP BY clause, which can be placed right after a HAVING clause, but in this case we want to restrict based on the group (the number of books), not any individual result. This is done with a FILTERHow do we do that? Normally, we restrict results with a"@hy,
    "HAVING）のある本を出版している出版社だけを、Wikidataから選ぶようにしてみてはどうでしょうか。 (P1104)number of pages ）しかありません。このことが結果を少しばかり歪めているのです。このような外れ値を取り除くために、少なくとも2冊以上、ページ数の文（(Q3775610)Grande dizionario della lingua italiana ）があるのは、1冊だけ（(P1104)number of pages ）が出版している本でページ数の文（(Q4002388)UTET 最後のクエリに関して補足です。実際にクエリを実行してみると、トップの出版社の平均ページ数は、2番目の出版社の10倍以上という法外な数字であることに気づくと思います。少し調べてみるとその訳がわかるのですが、この出版社（の時と同じように式を取ればよいのです。 FILTER節を置き、HAVING節のすぐ後にGROUP BY節を使います。しかし今回はひとつひとつの結果に基づいてではなく、グループ化された結果（本の冊数）に基づいて限定を加えたいのです。 これを実現するには、 FILTERそのようにするにはどうしたらいいでしょうか？　通常、結果に限定を加えるためには"@ja,
    "HAVING   statements on Wikidata. (P1104)number of pages , which skews the results a bit. To remove outliers like that, we could try to select only publishers that published at least two books with (Q3775610)Grande dizionario della lingua italiana  statement, (P1104)number of pages ) only published a single book with a (Q4002388)UTET A small addendum to that last query – if you look at the results, you might notice that the top result has an outrageously large average, over ten times that of the second place. A bit of investigation reveals that this is because that publisher (   does: FILTER clause and takes an expression just like GROUP BY clause, which can be placed right after a HAVING clause, but in this case we want to restrict based on the group (the number of books), not any individual result. This is done with a FILTERHow do we do that? Normally, we restrict results with a"@lb,
    "HAVING verklaringen op Wikidata hebben gepubliceerd. (P1104)number of pages , wat de resultaten een beetje vertekent. Om dergelijke uitschieters te verwijderen, zouden we kunnen proberen alleen uitgevers te selecteren die ten minste twee boeken met (Q3775610)Grande dizionario della lingua italiana  verklaring, (P1104)number of pages ) slechts één boek heeft gepubliceerd met een (Q4002388)UTET Een kleine toevoeging bij die laatste query, als u naar de resultaten kijkt, merkt u misschien dat het hoogste resultaat een erg hoog gemiddelde heeft, meer dan tien keer dat van de tweede plaats. Een beetje onderzoek leert dat dit komt omdat die uitgever ( doet: GROUP BY clausule kan worden geplaatst en een expressie neemt net zoals GROUP BY clausule, die direct na een HAVING clausule, maar in dit geval willen we het beperken op basis van de groep (het aantal boeken), niet een individueel resultaat. Dit wordt gedaan met een FILTERHoe doen we dat? Normaal gesproken beperken we resultaten met een"@nl,
    "HAVING   statements on Wikidata. (P1104)number of pages , which skews the results a bit. To remove outliers like that, we could try to select only publishers that published at least two books with (Q3775610)Grande dizionario della lingua italiana  statement, (P1104)number of pages ) only published a single book with a (Q4002388)UTET A small addendum to that last query – if you look at the results, you might notice that the top result has an outrageously large average, over ten times that of the second place. A bit of investigation reveals that this is because that publisher (   does: FILTER clause and takes an expression just like GROUP BY clause, which can be placed right after a HAVING clause, but in this case we want to restrict based on the group (the number of books), not any individual result. This is done with a FILTERHow do we do that? Normally, we restrict results with a"@pl,
    "HAVING   statements on Wikidata. (P1104)number of pages , which skews the results a bit. To remove outliers like that, we could try to select only publishers that published at least two books with (Q3775610)Grande dizionario della lingua italiana  statement, (P1104)number of pages ) only published a single book with a (Q4002388)UTET A small addendum to that last query – if you look at the results, you might notice that the top result has an outrageously large average, over ten times that of the second place. A bit of investigation reveals that this is because that publisher (   does: FILTER clause and takes an expression just like GROUP BY clause, which can be placed right after a HAVING clause, but in this case we want to restrict based on the group (the number of books), not any individual result. This is done with a FILTERHow do we do that? Normally, we restrict results with a"@ru,
    "HAVING   statements on Wikidata. (P1104)number of pages , which skews the results a bit. To remove outliers like that, we could try to select only publishers that published at least two books with (Q3775610)Grande dizionario della lingua italiana  statement, (P1104)number of pages ) only published a single book with a (Q4002388)UTET A small addendum to that last query – if you look at the results, you might notice that the top result has an outrageously large average, over ten times that of the second place. A bit of investigation reveals that this is because that publisher (   does: FILTER clause and takes an expression just like GROUP BY clause, which can be placed right after a HAVING clause, but in this case we want to restrict based on the group (the number of books), not any individual result. This is done with a FILTERHow do we do that? Normally, we restrict results with a"@sv,
    "HAVING   statements on Wikidata. (P1104)number of pages , which skews the results a bit. To remove outliers like that, we could try to select only publishers that published at least two books with (Q3775610)Grande dizionario della lingua italiana  statement, (P1104)number of pages ) only published a single book with a (Q4002388)UTET A small addendum to that last query – if you look at the results, you might notice that the top result has an outrageously large average, over ten times that of the second place. A bit of investigation reveals that this is because that publisher (   does: FILTER clause and takes an expression just like GROUP BY clause, which can be placed right after a HAVING clause, but in this case we want to restrict based on the group (the number of books), not any individual result. This is done with a FILTERHow do we do that? Normally, we restrict results with a"@szl,
    "HAVING   statements on Wikidata. (P1104)number of pages , which skews the results a bit. To remove outliers like that, we could try to select only publishers that published at least two books with (Q3775610)Grande dizionario della lingua italiana  statement, (P1104)number of pages ) only published a single book with a (Q4002388)UTET A small addendum to that last query – if you look at the results, you might notice that the top result has an outrageously large average, over ten times that of the second place. A bit of investigation reveals that this is because that publisher (   does: FILTER clause and takes an expression just like GROUP BY clause, which can be placed right after a HAVING clause, but in this case we want to restrict based on the group (the number of books), not any individual result. This is done with a FILTERHow do we do that? Normally, we restrict results with a"@tr,
    "HAVING на Вікіданих. (P1104)number of pages , що трохи спотворює результати. Щоб видалити такі відхилення, ми можемо спробувати вибрати лише тих видавців, які опублікували принаймні дві книги з твердженнями (Q3775610)Grande dizionario della lingua italiana , (P1104)number of pages ) опублікував лише одну книгу з твердженням (Q4002388)UTET Невелике доповнення до останнього запиту – якщо ви глянете на результати, то можете зауважити, що верхній результат має надзвичайно великий середній показник, що перевищує в десять разів показник другого місця. Трохи досліджень показує, що це тому, що видавець (: FILTER і приймає вираз так само, як GROUP BY, який може бути розміщений безпосередньо після пункту HAVING, але в цьому разі ми хочемо обмежитися групою (кількістю книг), а не окремим результатом. Це робиться за допомогою пункту FILTERЯк ми це робимо? Зазвичай ми обмежуємо результати за допомогою пункту"@uk,
    "HAVING（必须）  statements on Wikidata. (P1104)number of pages , which skews the results a bit. To remove outliers like that, we could try to select only publishers that published at least two books with (Q3775610)Grande dizionario della lingua italiana  statement, (P1104)number of pages ) only published a single book with a (Q4002388)UTET A small addendum to that last query – if you look at the results, you might notice that the top result has an outrageously large average, over ten times that of the second place. A bit of investigation reveals that this is because that publisher (   does: FILTER clause and takes an expression just like GROUP BY clause, which can be placed right after a HAVING clause, but in this case we want to restrict based on the group (the number of books), not any individual result. This is done with a FILTERHow do we do that? Normally, we restrict results with a"@zh;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?publisher ?publisherLabel (AVG(?pages) AS ?avgPages)
WHERE
{
  ?book wdt:P123 ?publisher;
        wdt:P1104 ?pages.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
}
GROUP BY ?publisher ?publisherLabel
HAVING(COUNT(?book) > 1)
ORDER BY DESC(?avgPages)""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?publisher ?publisherLabel (AVG(?pages) AS ?avgPages)
WHERE
{
  ?book wdt:P123 ?publisher;
        wdt:P1104 ?pages.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
}
GROUP BY ?publisher ?publisherLabel
HAVING(COUNT(?book) > 1)
ORDER BY DESC(?avgPages)""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
