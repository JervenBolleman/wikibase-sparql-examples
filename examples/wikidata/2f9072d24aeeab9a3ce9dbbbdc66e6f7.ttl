@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-2f9072d24aeeab9a3ce9dbbbdc66e6f7> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata:Request_a_query/Archive/2024/03>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Inner join from two values. However so far no luck. I have tried the following with a subquery, but it times out. Any solution? (Q19987682)Andromedes 1 (Pauly-Wissowa)  string of (P1476)title  match the (P1343)described by source  show up in a query, because the string qualifier of (Q18281870)Andromedes Hello, I'm trying to have"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>
PREFIX p: <http://www.wikidata.org/prop/>
SELECT ?candidate ?REArticle
  

WHERE {
   {
  SELECT ?candidate ?REArticle WHERE {
    ?candidate p:P1343 [ ps:P1343 wd:Q1138524 ;
                                  pq:P958 ?REArticle ] .
  }
}.
  ?item wdt:P31 wd:Q13433827 ;
        wdt:P361 wd:Q1138524 ;
        wdt:P1476 ?title .
  FILTER (?REArticle = ?title ) .
}
ORDER BY ?itemLabel""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT ?candidate ?REArticle
  WITH {
  SELECT ?candidate ?REArticle WHERE {
    ?candidate p:P1343 [ ps:P1343 wd:Q1138524 ;
                                  pq:P958 ?REArticle ] .
  }
} AS %candidates 

WHERE {
  INCLUDE %candidates .
  ?item wdt:P31 wd:Q13433827 ;
        wdt:P361 wd:Q1138524 ;
        wdt:P1476 ?title .
  FILTER (?REArticle = ?title ) .
}
ORDER BY ?itemLabel""";
  schema:target <https://query.wikidata.org/sparql> .
