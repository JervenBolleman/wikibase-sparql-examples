@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

<https://www.wikidata.org#query-04c6b0e4c67beaf79dadf8692f8a8f0c> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org/wiki/Wikidata_talk:WikiProject_Video_games>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  rdfs:comment "Deprecation of P31=video game remaster (Q65963104), video game remake (Q4393107) and video game reboot (Q111223304)Hi folks, . (Q1986744)The Last of Us (P642)of (Q65963104)video game remaster (P31)instance of (Q19057897)The Last of Us Remastered  qualifier, resulting in for example (P642)of  − sometimes with a (Q111223304)video game reboot  and 78 of (Q4393107)video game remake , 157 of (Q65963104)video game remaster (P31)instance of -, we currently have 175 Wikidata:WikiProject Video games/Statistics/instance ofLooking at  (Q65963104)video game remaster (P2868)subject has role (Q1986744)The Last of Us (P144)based on - + (Q7889)video game (P31)instance of -I would suggest deprecating this modelling in favour of . Wikidata_talk:WikiProject_Movies/Properties#Precision_of_P31_and_subclasses_of_types_of_film_(again...) (about movies, but I think they apply here too) in SpinsterWhen it comes to the why, I would echo many of the points made by In particular: As far as I can tell, other databases do not consider remakes/reboots/remasters as a top-level entity either (the exception is IGDB, which I really find odd). , which is deprecated.(P642)of the data modelling relies on the use of  ) is slow and occasionally returns more than what you want (for example, you would get compilations and expansion packs since these are currently subclasses of Q7889 [which might be debatable in itself, but I think it’s fine enough])ExLudo user-scriptdrilling-down the class tree (whether directly in WDQS or with eg my  information that can be stored in other properties (like indeed the platform, the genre, the date, etc.) should be in these statements, not stuffed into P31. worse, whether something is a remake/remaster/port can be an endless debate with sources disagreeing − we can deal with that, but it feels wrong to have such shaky grounds for the P31. than being, say, a PS4 game, an action-adventure game, a 2014 game… The Last of Us Remasteredto me, P31 is about the very core nature of something. Being a remake or a remaster is not, to me, more defining of  that I’m not too happy with, but let's keep this discussion about these 3 for now) Wikidata:WikiProject Video games/Statistics/instance of(There are more subclasses in Looking forward to your thoughts!  ]reply[14:41, 17 January 2024 (UTC)) talk (Jean-Fred]reply[23:57, 16 April 2024 (UTC)) talk (YotaMoteuchi. (Q123456086)Constructor HD . Done for Support  ]reply[10:14, 24 January 2024 (UTC)) talk (Matthias M. which does not support subclasses of video games so it will ignore everything marked solely as video game reboot/remaster (and expansion) (Q28054658)Mix'n'match  as this will increase compatibility with Support  ]reply[01:31, 23 January 2024 (UTC)) talk (Thadguidry is exactly the right property to use to show some kind of parentage, and then just qualify the children. -- (P144)based on  Subclassing is not wrong in a sense. It can be useful. \"It's a video game. Oh, but what KIND OF video game? It's a remaster. Oh, a video game remaster? Yeah.\" But I think your first comment is the most compelling, about having a single way to show some parentage of a video game, is the right move forward. And Support  ]reply[18:02, 20 January 2024 (UTC)) talk (Nicereddy This makes sense to me. Support  ]reply[17:18, 17 January 2024 (UTC)) talk (Envlh Like Sjoerd, I fully agree with the raised points. — Support  ]reply[22:39, 17 January 2024 (UTC)) talk (Solidest to p1552 as well, and so on. In the end we will have a fixed set of 8-10 recommended P31s that we can lock in the schema, and the similar loosier set for p1552. And I'm not sure that it will be possible if some things remain in the scheme as qualifiers - it just gives extra unsystematic space, which eventually result again with into what we have in p31 especially since qualifiers are rarely monitored and corrected. (Q96240590)video game bundle , (Q16070115)video game compilation  in p31 while move (Q116741534)group of video games  from p31 to p1552. And there's much more potential of clearing up and standartizing p31s, like use (Q261636)sequel , (Q64641660)video game port  = remaster + remake? Since \"reboot\" as a qualifier doesn't seem quite fitting in either \"based on\" or \"part of series\". I just see more opportunity here in uniform standardisation than relying somewhere on qualifiers, somewhere on a second property, and somewhere on a third property. All these things look to me like part of the same qualities set. Speaking of uniform standardisation, next we could also move (P1552)has characteristic Yeah, you are right about subject/object, my bad. I agree that \"based on\" with qualifier sounds smoother and more readable with \"remaster\" and \"remake\". But perhaps this could be used in parallel with  ]reply[20:28, 17 January 2024 (UTC)) talk (Jean-Fred?) (P179)part of the series  paper − but decided (so far) that the frontiers between these concepts are too blurry to make dedicated properties workable, and that we are better served by based on + qualifier (as I’m writing this, though, I do accept that based on would not really work super well for reboots ; perhaps rather as a qualifier on (Q50180192)Relationships among video games: Existing standards and new definitions . Short of creating properties “remake of” and “reboot of” etc., which I did consider − it’s also what’s floated by the (P144)based on , which is better expressed with relationship with another work ; but in that case I think that remasters and remakes are fundamentally a (P1552)has characteristic . I do agree with you that we should make more use of (P2868)subject has role , not with (P3831)object of statement has role My understanding is that what you describe would be the case with  ]reply[15:32, 17 January 2024 (UTC)) talk (Solidest, to group all these things together and define a set for this property. So this could be a real replacement of \"of\"-like qualifiers with direct properties instead of just swapping labels. (Q108040195)music release attribute , directly (not as qualifier). And then we can create a separate class, like (P1552)has characteristic  – such a statement would imply that it's based on a remaster, isn't it? In this case, I would suggest adopting the music project practice and use remaster/reboot/remake and the other qualities that characterise the video game release in remaster(P2868)subject has role original game(P144)based on , but I don't think it's quite right to use the pair Comment  ]reply[15:32, 17 January 2024 (UTC)) talk (Solidest. Support  ]reply[15:02, 17 January 2024 (UTC)) talk (Lewis Hulbert may be better as the P31, but I can agree with all of these three being deprecated at minimum. --(Q60997816)video game edition , there may be some cases with remake and remaster where Support  ]reply[14:47, 17 January 2024 (UTC) (talk) Sjoerd de Bruin, I fully agree with the raised points. Support Thanks all for chiming in. Given the support, let's do this. I’m not sure I can reliably automate this, so I’ll work my way trough this query:"@en;
  sh:prefixes <https://example.org/to_decide/wikidata_prefixes>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT DISTINCT ?item ?itemLabel ?type ?typeLabel ?of ?ofLabel ?based ?basedLabel ?role ?roleLabel WHERE {
  VALUES ?type { wd:Q4393107 wd:Q65963104}
  ?item wdt:P31 ?type ;
    p:P31 ?p31statement.
  OPTIONAL { ?p31statement pq:P642 ?of. }
  OPTIONAL {
    ?item p:P144 ?basedStatement.
    ?basedStatement ps:P144 ?based.
    OPTIONAL { ?basedStatement pq:P2868 ?role. }
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#bigdata_query> """SELECT DISTINCT ?item ?itemLabel ?type ?typeLabel ?of ?ofLabel ?based ?basedLabel ?role ?roleLabel WHERE {
  VALUES ?type { wd:Q4393107 wd:Q65963104}
  ?item wdt:P31 ?type ;
    p:P31 ?p31statement.
  OPTIONAL { ?p31statement pq:P642 ?of. }
  OPTIONAL {
    ?item p:P144 ?basedStatement.
    ?basedStatement ps:P144 ?based.
    OPTIONAL { ?basedStatement pq:P2868 ?role. }
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""";
  <https://purl.expasy.org/sparql-examples/ontology#federatesWith> <http://wikiba.se/ontology#label>;
  schema:target <https://query.wikidata.org/sparql> .
