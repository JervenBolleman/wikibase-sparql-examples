# Publishes the Markdown pages.
name: Publish to github-pages

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false
  
jobs:
  publish_html:
    name: "publish html"
    runs-on: ubuntu-latest 
    steps: 
    - uses: actions/checkout@v4
    
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
    
    - name: Install tester
      run: wget -q "https://github.com/sib-swiss/sparql-examples-utils/releases/download/v2.0.10/sparql-examples-utils-2.0.10-uber.jar" -O sparql-examples-utils-uber.jar

    - name: Run and log tests
      continue-on-error: true # ignore a failing test as we want to log them
      run: java -jar sparql-examples-utils-uber.jar test -i examples/ -p all --status-markdown docs/status.md
        
    - name: generate markdown
      run: java -jar sparql-examples-utils-uber.jar convert -i examples/ -m 
   
    - name: copy LICENSE.md and README.md
      run: cp LICENSE.md docs; cp README.md docs/Code_Instructions.md

    - name: move markdown files into docs
      run: for i in examples/*;do mkdir -p docs/${i};cp ${i}/*.md docs/${i}/;done
    
    - name: generate rq files
      run: java -jar sparql-examples-utils-uber.jar convert -i examples/ -r

    - name: copy rq files into docs
      run: for i in examples/*;do cp ${i}/*.rq docs/${i}/;done
    
    - name: copy ttl files into docs
      run: for i in examples/*;do cp ${i}/*.ttl docs/${i}/;done

    - name: Build with mkdocs
      run: python3 -m venv venv; source venv/bin/activate; pip install mkdocs;pip install mkdocs-mermaid2-plugin mkdocs-windmill;mkdocs build

    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v5

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: publish_html
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
